{"meta":{"title":"Hexo","subtitle":"","description":"","author":"Wang Zhangyu","url":"https://wangzhangyu.github.io","root":"/"},"pages":[{"title":"tags","date":"2023-07-19T08:24:16.000Z","updated":"2023-07-19T10:29:59.693Z","comments":true,"path":"tags/index.html","permalink":"https://wangzhangyu.github.io/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2023-07-19T08:23:11.000Z","updated":"2023-07-19T08:49:33.276Z","comments":true,"path":"categories/index.html","permalink":"https://wangzhangyu.github.io/categories/index.html","excerpt":"","text":""},{"title":"about","date":"2023-07-19T08:46:47.000Z","updated":"2023-07-20T12:14:11.277Z","comments":false,"path":"about/index.html","permalink":"https://wangzhangyu.github.io/about/index.html","excerpt":"","text":""},{"title":"books","date":"2023-07-19T08:46:23.000Z","updated":"2023-07-19T08:49:26.596Z","comments":true,"path":"books/index.html","permalink":"https://wangzhangyu.github.io/books/index.html","excerpt":"","text":""},{"title":"repository","date":"2023-07-19T08:46:09.000Z","updated":"2023-07-20T08:35:02.964Z","comments":false,"path":"repository/index.html","permalink":"https://wangzhangyu.github.io/repository/index.html","excerpt":"","text":""},{"title":"links","date":"2023-07-19T08:46:35.000Z","updated":"2023-07-20T08:37:13.720Z","comments":true,"path":"links/index.html","permalink":"https://wangzhangyu.github.io/links/index.html","excerpt":"","text":""}],"posts":[{"title":"谷歌两步验证","slug":"谷歌两步验证","date":"2024-03-15T13:57:15.000Z","updated":"2024-03-15T14:10:13.050Z","comments":true,"path":"2024/03/15/谷歌两步验证/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/15/%E8%B0%B7%E6%AD%8C%E4%B8%A4%E6%AD%A5%E9%AA%8C%E8%AF%81/","excerpt":"","text":"谷歌二次登录验证 – 安全防护Ubuntu安装google-authenticatorsudo apt install libpam-google-authenticator修改配置文件echo &quot;auth required pam_google_authenticator.so&quot; &gt;&gt; /etc/pam.d/sshdsed -i &#39;s/^ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g&#39; /etc/ssh/sshd_config重启sshd，完成配置systemctl restart sshd对个人用户，进入主目录下执行 google-authenticator,生成验证二维码 下载谷歌authrnticator绑定二维码","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"linux病毒检查","slug":"linux病毒检查","date":"2024-03-15T02:55:35.000Z","updated":"2024-03-15T03:13:35.283Z","comments":true,"path":"2024/03/15/linux病毒检查/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/15/linux%E7%97%85%E6%AF%92%E6%A3%80%E6%9F%A5/","excerpt":"","text":"chkrootkit 轻量级软件特点：检测系统命令是否正常这是一个轻量级程序，这意味着它不会影响系统性能。它还可以检测各种其他恶意软件和木马，如后门、TinyNDS 等。 安装 sudo apt install chkrootkit 使用 sudo chkrootkit not infected 表示未感染 infected 为感染 clamav简介：ClamAV 是一款开源防病毒软件，可检测病毒、恶意软件、特洛伊木马和其他威胁，它也免费提供，这使其成为 Linux 上最好的防病毒软件之一。特点：ClamAV 具有命令行扫描程序，这意味着它可以扫描主要文件类型中的蠕虫、病毒和特洛伊木马。为确保安全并保持最新状态，病毒库一天会更新多次。它具有对不同存档格式的内置支持，包括 Zip、OLE2、SIS、Dmg、RAR、BinHex、Gzip、Tar、Bzip2、、Cabinet、CHM 等 安装 sudo apt-get install clamav 使用 更新病毒库freshclam 启动服务 sudo systemctl start clamd@scan sudo systemctl enable clamd@scan 参考：https://zhuanlan.zhihu.com/p/586992717https://zhuanlan.zhihu.com/p/514221945https://zhuanlan.zhihu.com/p/266731354","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"/etc/passwd文件误删除","slug":"passwd误删除","date":"2024-03-14T10:30:45.000Z","updated":"2024-03-15T03:12:29.358Z","comments":true,"path":"2024/03/14/passwd误删除/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/14/passwd%E8%AF%AF%E5%88%A0%E9%99%A4/","excerpt":"","text":"&#x2F;etc&#x2F;passwd文件误删除不要关机重启，有备份文件。 &#x2F;etc&#x2F;passwd-参考备份文件恢复 参考网址：https://blog.csdn.net/zheng_weichao/article/details/109264080https://www.linuxprobe.com/explain-etc-passwd.html","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"服务器被入侵","slug":"服务器","date":"2024-03-14T04:58:31.000Z","updated":"2024-03-15T03:12:22.735Z","comments":true,"path":"2024/03/14/服务器/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/14/%E6%9C%8D%E5%8A%A1%E5%99%A8/","excerpt":"","text":"服务器被入侵的几种端倪 登录日志被篡改或删除使用lastb，last查看日志，发现日志是空的 lsattr，chattr命令失效，一般是被黑客篡改，移动并重命名。root下的免密配置无法删除解决方法，下载原始的.c文件，重新编译执行 下载chattr.c文件，https://github.com/posborne/linux-programming-interface-exercises/blob/master/15-file-attributes/chattr.c编译chattr.c cc chattr.c 生成a.out文件重命名文件参考： https://blog.csdn.net/JunyouYH/article/details/117064066 top，nvidia-smi查看，CPU或者GPU被不明程序长时间占用基本上是被挖矿了，可以查看定时任务看看有没有异常，crontab -l","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"Tensorboard","slug":"tensorboard","date":"2023-08-01T08:08:12.000Z","updated":"2023-08-01T08:10:43.749Z","comments":true,"path":"2023/08/01/tensorboard/","link":"","permalink":"https://wangzhangyu.github.io/2023/08/01/tensorboard/","excerpt":"","text":"ref: https://zhuanlan.zhihu.com/p/471198169 功能TensorBoard 是一组用于数据可视化的工具。它包含在流行的开源机器学习库 Tensorflow 中。TensorBoard 的主要功能包括： 可视化模型的网络架构 跟踪模型指标，如损失和准确性等 检查机器学习工作流程中权重、偏差和其他组件的直方图 显示非表格数据，包括图像、文本和音频 将高维嵌入投影到低维空间 安装使用conda进行Python包管理。安装指令 1conda install tensorboard 对于pytorch用户来说，还需安装TensorBoardX 1conda install tensorboardx 需要注意的是，TensorBoardX只是TensorBoard的一个前端，只支持记录功能，要进行可视化必须安装TensorBoard。 本地使用 要启动 TensorBoard，打开终端或命令提示符并运行： 1tensorboard --logdir=&lt;directory_name&gt; 将 directory_name 标记替换为保存数据的目录。 默认是“logs”。 在 Jupyter Notebooks 中使用 TensorBoard 如果想在 Jupyter Notebooks 中使用 TensorBoard，可以使用以下命令： 1%load_ext tensorboard 运行这行代码将加载 TensorBoard并允许我们将其用于可视化。 加载扩展后，我们现在可以启动 TensorBoard： 1%tensorboard --logdir logs 远程使用 使用远程服务器，没有浏览器也没有可视化桌面，那怎么才能使用TensorBoard呢？ 我们可以通过SSH端口转发，将远程端口映射到本地端口，命令如： 1ssh -L 16007:127.0.0.1:6007 username@serverip 其中，16007是本地想用的端口，6007是远程端口（TensorBoard所用端口），username和serverip为用户名和服务器ip地址。远程服务器中找到tensorboard所在目录并运行 1tensorboard --logdir ./tensorboard --port 6007 然后，打开本地浏览器，输入http://127.0.0.1:16007/就可以成功访问了。 另一种方法1tensorboard --logdir logs --bind_all –bind_all的作用是to expose to the network","categories":[{"name":"python","slug":"python","permalink":"https://wangzhangyu.github.io/categories/python/"}],"tags":[]},{"title":"数据下载","slug":"download-web","date":"2023-08-01T08:03:15.000Z","updated":"2023-08-03T03:04:55.958Z","comments":true,"path":"2023/08/01/download-web/","link":"","permalink":"https://wangzhangyu.github.io/2023/08/01/download-web/","excerpt":"","text":"ustc 地震学算法与程序https://seismo.training.ustc.edu.cn/programme/list.htm Ubuntu系统 Ubuntu下载链接：http://releases.ubuntu.com/ 旧版下载链接：http://old-releases.ubuntu.com/releases/","categories":[],"tags":[]},{"title":"Hexon -- 管理hexo的GUI工具","slug":"test","date":"2023-07-30T07:51:03.505Z","updated":"2023-08-01T07:33:23.522Z","comments":true,"path":"2023/07/30/test/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/30/test/","excerpt":"","text":"Hexon is a GUI for hexo with git, run commands and manage content for you. 下载链接：https://github.com/gethexon/hexon 界面清爽 可移植 部署迅速","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://wangzhangyu.github.io/tags/blog/"}]},{"title":"scp传输文件如何设置nohup后台运行？","slug":"scp","date":"2023-07-29T05:51:36.000Z","updated":"2023-07-29T06:10:07.312Z","comments":true,"path":"2023/07/29/scp/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/29/scp/","excerpt":"","text":"已经配置了ssh免密登录ssh免密登录，scp也是免密的用scp传输文件时可以直接在命令前加nohup，命令后加&amp;nohup scp -r *** host:ip &amp; 未配置免密登录 Linux后台任务管理 ：jobs、fg、bg、kill、ps、nohup、disown、&amp; CTRL + C ：终止程序运行 CTRL + Z ：程序暂停运行 正常运行命令： 可以是scp，也可以是其他任何需要执行的命令 scp -r *** host:ip 此时程序的执行状态是在台前 暂停任务 键盘输入CTRL + Z，暂停任务 查看jobs jobs bg将其放入后台 bg %1 disown -h 忽略任务的HUP信号 disown -h %1 检查 关闭session，新建会话 ps -ef|grep scp 参考link1,link2","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"macbook的一些配置和实用插件","slug":"macbook-plug","date":"2023-07-28T10:00:50.360Z","updated":"2023-11-09T07:18:21.916Z","comments":true,"path":"2023/07/28/macbook-plug/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/28/macbook-plug/","excerpt":"","text":"鼠标插件 文献管理 文件下载 新建文件 解压文件 软件卸载 分屏软件 好用的终端软件 ssh 免密登录配置 多设备同步 写markdown 码代码 触发角设置 电源 其他 鼠标插件mac鼠标与windows的鼠标滑动指令相反，可用一些插件来帮助实现windows模式 mos mac mouse fix 文献管理Zotero+webdav Zotero Teracloud （日本，墙内） 文件下载 qBittorrent 简单易用的跨平台BT，PT客户端 新建文件mac没有新建文件的命令，可以使用第三方插件来完成 超级右键lite 永久免费版本: 可以右键新建word文档 解压文件Mac上好用的解压软件 The Unarchiver 软件卸载听说这一款挺有效果，但是测试仍然有残留。 比如之前装了罗技的鼠标管理软件Logitech Options，但是可能软件的适配有问题，导致CPU占用过大。我用Appcleaner卸载这个软件，但是发现配置文件仍然存在。 Appcleaner：彻底清除app及其残留文件 分屏软件 Rectangle：拖拽窗口自动分屏 好用的终端软件 iterm ssh 免密登录配置参考link ssh-keygen -t rsa chmod 600 ~&#x2F;.ssh&#x2F;id_rsa.pub ssh-copy-id &#117;&#115;&#x65;&#114;&#64;&#x69;&#112;&#46;&#99;&#111;&#109; touch ~&#x2F;.ssh&#x2F;config12345678910#自定义主机名称，写上好记的就行了。Host goodjob#SSH连接的地址，IP或者是域名HostName ip.cn#SSH远程登录的名称User user#SSH的端口默认是22Port 22#指向私钥的位置,这里写你自己的地址。IdentityFile ~/.ssh/id_rsa 多设备同步 坚果云 写markdown Typora 码代码 VS code Sublime Text 触发角设置只设置右下角为触发角，当鼠标滑到右下角，触发返回桌面。 电源macbook使用快一年了，电池健康度剩下93%。这和使用习惯有关，平时大部分时间插着电源使用让电池一直保持满电状态是不好的。锂电池的电池容量维持在30%～80%对电池健康最好，平时不需要充满电。 Aldente 当电池电量达到设定的限值时关闭充电，当电量低于设定的限值时，启动充电。 其他 grammarly: 语法改错 blackhole: 录制屏幕的时候可以录制电脑自己输出的声音","categories":[{"name":"macbook","slug":"macbook","permalink":"https://wangzhangyu.github.io/categories/macbook/"}],"tags":[]},{"title":"云服务器搭建个人网站","slug":"云服务器搭建个人网站","date":"2023-07-25T08:29:10.000Z","updated":"2023-08-01T08:03:50.480Z","comments":true,"path":"2023/07/25/云服务器搭建个人网站/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/25/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/","excerpt":"","text":"个人服务器建网站流程一时兴起搭建个人网页，记录一下整个流程… 购买云服务器： 腾讯云 CPU: 2核 内存: 2GB 价格：首年有优惠 安装wordpress 系统：Linux Ubuntu 20.04 LTS 网站架构：Apache2 + Php + MySQL + WordPress (6.0.2) 腾讯云服务器提供极速建站，可选–“应用镜像”-&gt;“Wordpress”,非常方便但我还是选择从零开始安装，可以参考https://zhuanlan.zhihu.com/p/270230445 购买域名 腾讯云域名申请 域名备案 域名解析 绑定域名和云服务器公网IP 使用了快一年，续费云主机挺贵的，一年要500多。","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://wangzhangyu.github.io/tags/blog/"}]},{"title":"gitalk 第三方评论","slug":"gitalk","date":"2023-07-20T11:42:20.000Z","updated":"2023-07-28T11:29:42.168Z","comments":true,"path":"2023/07/20/gitalk/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/20/gitalk/","excerpt":"","text":"使用Gitalk的常见问题 问题： 未找到相关的 Issues 进行评论，请联系@作者初始化创建 打开文章页面登录作者github账号 问题： 403错误或network错误 代理失效 原因是：主题模版中的cors-anywhere反向代理已不支持直接使用，Gitalk的默认proxy为 1Default: https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token. cloudflare 参考文章： https://blog.csdn.net/nocodeis/article/details/117826704 借用某位博客的代理使用文章中的方法构建的代理仍然报错network error, 应该还是代理没有设置好。 没有办法只能借用别的代理设置了，方法不是很可取，但可以临时用用。参考下边的方式 找到一个集成了Gitalk的博客 打开浏览器的开发者模式 选择network项，在filter中输入access 此时在博客的评论区中登录自己的Github账号 在Request URL栏中，选择带有https://github.com/login/oauth/access_token的地址，这串拼接出来的地址就是代理地址，可以直接加入到proxy中 现在评论功能就正常了。 ref：https://github.com/ppoffice/hexo-theme-icarus/issues/478https://juejin.cn/post/6956892118363144229","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[]},{"title":"Hexo添加插件","slug":"comment","date":"2023-07-20T09:36:23.000Z","updated":"2023-07-28T11:35:48.225Z","comments":true,"path":"2023/07/20/comment/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/20/comment/","excerpt":"","text":"添加评论 https://wangzhangyu.github.io/2023/07/20/gitalk/ 添加相册 https://blog.csdn.net/weixin_43347550/article/details/120191200","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://wangzhangyu.github.io/tags/blog/"}]},{"title":"Hexo博客主题","slug":"hexo博客主题","date":"2023-07-19T05:19:19.691Z","updated":"2024-03-15T14:07:02.616Z","comments":true,"path":"2023/07/19/hexo博客主题/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/19/hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98/","excerpt":"","text":"博客主题 hexo-theme-pure下载链接 https://github.com/cofess/hexo-theme-pure Hexo个人博客部署到Github参考 git, hexo and Node.js 写作搭档 hexo+hexon+typora hexon管理博客的开源代码","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://wangzhangyu.github.io/tags/blog/"}]},{"title":"Markdown语法","slug":"Markdown语法","date":"2023-07-18T17:41:30.743Z","updated":"2023-07-28T11:11:41.656Z","comments":true,"path":"2023/07/19/Markdown语法/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/19/Markdown%E8%AF%AD%E6%B3%95/","excerpt":"","text":"自动生成目录 甘特图 自动生成目录 CSDN中1@[TOC](linux网络配置 ) hexo 中1&lt;!-- toc --&gt; 甘特图","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://wangzhangyu.github.io/tags/markdown/"}]},{"title":"Linux服务器运维","slug":"Linux服务器运维","date":"2023-07-18T17:09:50.000Z","updated":"2023-07-27T17:09:52.000Z","comments":true,"path":"2023/07/19/Linux服务器运维/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/19/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/","excerpt":"","text":"新服务器部署 服务器基本信息 dell服务器开机挂载 关机与重启 修改root密码 node100 集群服务器开关机： 开机顺序： 关机顺序：（倒着来） 服务器安全 tomoplus图像显示问题 tomoplus license问题 创建账户 更改文件夹所有者、更改组 ssh问题 GPU: 服务器显存占用但是找不到pid GPU nvidia-smi tmp 空间不足 Ubuntu: 用户无法自动加载 .bashrc的问题 服务器换ip 学习链接 gantt dateFormat YYYY-MM-DD title 服务器购买 section 现有服务器 tomo 01 :done, des1, 2015-01-06,2020-12-04 tomo 02 :done, des2, 2015-01-06,2020-12-04 tomo 03 : des3, 2015-01-06,2022-12-04 amax : des4, 2019-01-06,2022-12-04 node100 : des5,2019-01-06,2022-12-04 dell : des6,2020-01-06,2022-12-04 新服务器部署 若采购新服务器，需要对home做单独分区，安装磁盘限额（可限制5G）。避免no sapce出现 服务器基本信息密码更新日期：2022&#x2F;12&#x2F;4 服务器 IP root密码 用途 属性 dell ******* ******* GPU 4块A100(40G左右显存) amax ******* ******* GPU 8块 GeForce GTX 1080（11G左右显存） node100 ******* ******* CPU 8个计算节点 tomo 03 ******* ******* CPU 服务器 dell服务器开机挂载data2挂载在amax上，dell服务器通过访问amax来共享data2的数据。所以dell服务器正常使用的前提是amax正常。dell服务器每次开机需要重新挂载data2，挂载命令A100挂载data3(node100服务器的存储)和data2 12mount -t nfs ***.***.***.***:/public/home /data3mount -t nfs ***.***.***.***:/data2 /data2/ ***分别是node100的IP，amax的IPAmax挂载A100上的文件 1mount -t nfs ***.***.***.***:/mnt/SCQR_data1 /mnt/SCQR_data1 ***为dell的IP或者修改&#x2F;etc&#x2F;fstab 12345678910111213141516(base) wangzy@dell:~$ cat /etc/fstab# /etc/fstab: static file system information.## Use &#x27;blkid&#x27; to print the universally unique identifier for a# device; this may be used with UUID= as a more robust way to name devices# that works even if disks are added and removed. See fstab(5).## &lt;file system&gt; &lt;mount point&gt; &lt;type&gt; &lt;options&gt; &lt;dump&gt; &lt;pass&gt;# / was on /dev/sda3 during installationUUID=6df9bb4a-766b-4ab1-92da-bad6179f800a / ext4 errors=remount-ro 0 1# /boot/efi was on /dev/sda1 during installationUUID=184B-1142 /boot/efi vfat umask=0077 0 1# swap was on /dev/sda2 during installationUUID=2e147d59-66aa-491e-a878-1e77aed61cce none swap sw 0 0192.168.0.3:/data2 /data2 nfs defaults 1 1 如果共享磁盘没有挂载，执行/etc/rc.locallink 关机与重启关机 poweroff, shutdown -h +1重启 reboot, shutdown -r +1对于集群服务器，可能需要同步 clusconf –sync-do &#x2F;etc&#x2F;rc.local 修改root密码 passwd root(直接登录root修改) sudo passwd（利用sudo账户修改） 忘记密码（重启服务器，单用户模式修改）： https://cloud.tencent.com/developer/article/1843568 http://m.blog.chinaunix.net/ui-21209618-id-4738916.html node100 集群服务器开关机：开机顺序：1.IB交换机（一般不用管）2.网络交换机（一般不用管）3.存储服务器4.管理节点5.计算节点 关机顺序：（倒着来）1.计算节点2.管理节点3.存储服务器4.网络交换机（一般不用管）5.IB交换机（一般不用管） 服务器安全fail2ban安装fail2ban sudo apt install fail2ban设置fail2ban配置策略sudo vi /etc/fail2ban/jail.local检查 Jails状况：sudo fail2ban-client status sshd封禁IP:sudo fail2ban-client set sshd banip 23.34.45.56解禁的IP:sudo fail2ban-client set sshd unbanip 23.34.45.56重启服务 sudo systemctl restart fail2ban停止服务 sudo systemctl stop fail2ban tomoplus图像显示问题ssh 连接是加X或Yssh -Y node1ssh -X node1运行xterm查看是否有图形界面弹出，如果没有，说明本次连接的shell不能显示图像 1[wangzy@node100 ~]$ xterm &amp; 解决方法：一般重启终端（如：重启Mobaxterm） tomoplus license问题tomoplus激活不需要root，任何普通账户都已运行下边的激活操作选择当年的Tomoplus版本*2022.lic 123456789[wangzy@node100 ~]$ cd ~[wangzy@node100 ~]$ cat .flexlmrcGEOTOMO_LICENSE_FILE=/public/software/Geotomo_all_versions/GeoTomo64_v63_Auto/GeoTomo64jre18/TomoPlus/Tomo3D/../../license:/public/software/Geotomo_all_versions/GeoTomo64_v63_Auto/GeoTomo64/license[wangzy@node100 ~]$ cd /public/software/Geotomo_all_versions/GeoTomo64_v63_Auto/GeoTomo64jre18/TomoPlus/Tomo3D/../../license[wangzy@node100 license]$ lsgeotomo license.v11.10 lmdown lmreread lmutil tomoplus_6pt3_vecon_4pt5_velmap_geothrust_4pt1_linux_USTC_node100_e8611f3264f8_31dec2021.liclicense.old lmdiag lmgrd lmstat README.txt tomoplus_6pt4_vecon_4pt5_velmap_geothrust_4pt1_linux_USTC_node100_e8611f3264f8_31dec2022.lic[wangzy@node100 license]$ ./lmgrd -c tomoplus_6pt4_vecon_4pt5_velmap_geothrust_4pt1_linux_USTC_node100_e8611f3264f8_31dec2022.lic 如果仍有问题，先关闭tomoplus守护进程，重新激活12[wangzy@node100 license]$ ./lmdown -c tomoplus_6pt4_vecon_4pt5_velmap_geothrust_4pt1_linux_USTC_node100_e8611f3264f8_31dec2022.lic[wangzy@node100 license]$ ./lmgrd -c tomoplus_6pt4_vecon_4pt5_velmap_geothrust_4pt1_linux_USTC_node100_e8611f3264f8_31dec2022.lic 如果重启不成功，遇到 Permission denied的情况，直接删掉文件&#x2F;var&#x2F;tmp&#x2F;lockgeotomo 创建账户 单节点服务器：dell, amax, tomo 03 adduser XXX（创建用户） userdel XXX 集群服务器： node100 clusconf -au XXX（创建用户） clusconf -du XXX (删除用户) 更改文件夹所有者、更改组更改文件夹所有者 chown wangzy –R wangzy&#x2F;更改文件夹所有组 chgrp users –R wangzy ssh问题查看一下home目录下有没有 .ssh 文件夹， 用 ls -al查看 (注：linux系统中以“.”开头的是隐藏文件)如果没有，就自己建立一个 ： mkdir .sshcd然后进入 .ssh，依次运行：1 ssh-keygen （命令后一直敲空格就行, 会生成几个文件）2 cat id_dsa.pub &gt;&gt; authorized_keys3 退出.ssh 至你的home， 运行 chmod -R 755 .ssh4 进入.ssh， chmod 600 * service sshd restart GPU: 服务器显存占用但是找不到pidfuser -v &#x2F;dev&#x2F;nvidia*fuser -k &#x2F;dev&#x2F;nvidia* Sudo 账户下操作 GPU nvidia-smi12345678910111213141516171819202122232425262728293031323334353637383940414243(base) wangzy@dell:~$ nvidia-smiTue Dec 6 15:40:01 2022+-----------------------------------------------------------------------------+| NVIDIA-SMI 515.86.01 Driver Version: 515.86.01 CUDA Version: 11.7 ||-------------------------------+----------------------+----------------------+| GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC || Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. || | | MIG M. ||===============================+======================+======================|| 0 NVIDIA A100-PCI... Off | 00000000:17:00.0 Off | 0 || N/A 34C P0 34W / 250W | 4MiB / 40960MiB | 0% Default || | | Disabled |+-------------------------------+----------------------+----------------------+| 1 NVIDIA A100-PCI... Off | 00000000:65:00.0 Off | 0 || N/A 34C P0 33W / 250W | 4MiB / 40960MiB | 0% Default || | | Disabled |+-------------------------------+----------------------+----------------------+| 2 NVIDIA A100-PCI... Off | 00000000:CA:00.0 Off | 0 || N/A 35C P0 38W / 250W | 4MiB / 40960MiB | 0% Default || | | Disabled |+-------------------------------+----------------------+----------------------+| 3 NVIDIA A100-PCI... Off | 00000000:E3:00.0 Off | 0 || N/A 34C P0 35W / 250W | 4MiB / 40960MiB | 0% Default || | | Disabled |+-------------------------------+----------------------+----------------------++-----------------------------------------------------------------------------+| Processes: || GPU GI CI PID Type Process name GPU Memory || ID ID Usage ||=============================================================================|| 0 N/A N/A 3413 G /usr/lib/xorg/Xorg 4MiB || 1 N/A N/A 3413 G /usr/lib/xorg/Xorg 4MiB || 2 N/A N/A 3413 G /usr/lib/xorg/Xorg 4MiB || 3 N/A N/A 3413 G /usr/lib/xorg/Xorg 4MiB |+-----------------------------------------------------------------------------+(base) wangzy@dell:~$ nvcc -Vnvcc: NVIDIA (R) Cuda compiler driverCopyright (c) 2005-2022 NVIDIA CorporationBuilt on Wed_Jun__8_16:49:14_PDT_2022Cuda compilation tools, release 11.7, V11.7.99Build cuda_11.7.r11.7/compiler.31442593_0 tmp 空间不足 原因：可能读取大量文件（IO需求很大），每打开一个文件，&#x2F;tmp都会有对文件的缓存 解决方案： 减少大量文件读取 删除&#x2F;tmp下的部分内容（容易误删） 增大&#x2F;tmp空间，拓展&#x2F;tmp Link1 Link2 Ubuntu: 用户无法自动加载 .bashrc的问题解决办法：在~&#x2F;.bash_profile里添加上：if [ -f ~&#x2F;.bashrc ] ; then source ~&#x2F;.bashrcfi 服务器换ip科大的DNS:202.38.64.1202.38.64.7用笔记本电脑连接网线测试 网口是否有问题，连接网络通，获取ip 常用命令链接： https://www.runoob.com/linux/linux-command-manual.html科大BBS Linux系统： http://bbs.ustc.edu.cn/cgi/bbsdoc?board=Linux清华水木社区Linux系统与应用： http://www.newsmth.net/bbsdoc.php?board=LinuxApp清华水木社区Linux开发与高级讨论： http://www.newsmth.net/bbsdoc.php?board=LinuxDevChinaUnix：http://www.chinaunix.net/ CSDN：https://bbs.csdn.net/forums/Linux鸟哥的Linux私房菜：http://www.runoob.com/linux/linux-command-manual.html Linux常用软件推荐集合汇总： http://www.it610.com/article/1929114.htmLinux指令大全： http://www.runoob.com/linux/linux-command-manual.html李会民 (中国科大超算中心) Linux操作系统使用基础: http://hmli.ustc.edu.cn/","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"Python Folium 绘制交互式地图","slug":"Python Folium","date":"2023-07-18T10:09:22.000Z","updated":"2023-07-18T10:09:26.000Z","comments":true,"path":"2023/07/18/Python Folium/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/18/Python%20Folium/","excerpt":"","text":"https://github.com/WangZhangyu/Interactive_map Foliumfolium是python非常好用的交互式地图工具包，今天我们用folium来绘制简单精美的地震分布热力图。我们选择川滇部分地区，蓝色方框圈定的区域进行绘制。橙色圆圈代表的是AETA 观测台站，黑色圆圈代表的是地震（ML3.5以上），黑色圆圈越大，震级越大。绘制地震分布的热力图，我们可以非常清晰的看到地震的集中分布情况。 绘制结果以.html的格式保存，我们可以对地图随意的放大缩小，当鼠标停留在黑色圆圈（地震）上时，地图会显示地震的发震时间和震级信息；当鼠标停留在橙色圆圈（台站）上时，会显示对应的台站名称。 安装Folium 库 1pip install folium 导入必要的库 1234import foliumimport pandas as pdimport webbrowserfrom folium.plugins import HeatMap 加载AETA台站的信息并显示 12345678910111213cdata = pd.read_csv(&#x27;StationInfo.csv&#x27;)for lat, lon,label in zip(cdata.Latitude, cdata.Longitude, cdata.Title): incidents.add_child( folium.CircleMarker( [lat, lon], radius=7, color=&#x27;yellow&#x27;, fill=True, fill_color=&#x27;red&#x27;, fill_opacity=0.4, tooltip=label ) ) 加载并绘制地震目录信息 12345678910111213141516eq = pd.read_csv(&#x27;eqlst.csv&#x27;)for lat, lon, mag, time in zip(eq.Latitude, eq.Longitude, eq.Magnitude,eq.Time): incidents.add_child([图片上传中...(catalog.jpg-6f9441-1618157345666-0)] folium.CircleMarker( [lat, lon], radius=(mag-3)*4, color=&#x27;black&#x27;, fill=True, fill_color=&#x27;black&#x27;, fill_opacity=0.5, weight = 0.001, stroke = False, tooltip= &#x27;%s ML %.f&#x27; % (time,mag) ) ) 绘制地震分布热力图 12heatdata = eq[[&#x27;Latitude&#x27;,&#x27;Longitude&#x27;,&#x27;Magnitude&#x27;]].values.tolist()HeatMap(heatdata).add_to(incidents) 完整代码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&quot;&quot;&quot;Created on Sun Apr 11 20:40:32 2021@author: Zhangyu Wang&quot;&quot;&quot;import foliumimport pandas as pdimport webbrowserfrom folium.plugins import HeatMap# Chuandain latitude and longitudelatitude = 28longitude = 102.5# instantiate a feature group for the incidents in the dataframeincidents = folium.map.FeatureGroup()# read stations cdata = pd.read_csv(&#x27;StationInfo.csv&#x27;)for lat, lon,label in zip(cdata.Latitude, cdata.Longitude, cdata.Title): incidents.add_child( folium.CircleMarker( [lat, lon], radius=7, color=&#x27;yellow&#x27;, fill=True, fill_color=&#x27;red&#x27;, fill_opacity=0.4, tooltip=label ) ) # read catalogeq = pd.read_csv(&#x27;eqlst.csv&#x27;)for lat, lon, mag, time in zip(eq.Latitude, eq.Longitude, eq.Magnitude,eq.Time): incidents.add_child( folium.CircleMarker( [lat, lon], radius=(mag-3)*4, color=&#x27;black&#x27;, fill=True, fill_color=&#x27;black&#x27;, fill_opacity=0.5, weight = 0.001, stroke = False, tooltip= &#x27;%s ML %.f&#x27; % (time,mag) ) ) # catalog heatmapheatdata = eq[[&#x27;Latitude&#x27;,&#x27;Longitude&#x27;,&#x27;Magnitude&#x27;]].values.tolist()HeatMap(heatdata).add_to(incidents)# add a single earthquakeincidents.add_child(folium.Marker([28.9, 103.3],icon=folium.Icon(color=&#x27;red&#x27;), tooltip=&#x27;M = 4.0&#x27;))# add area borderls = folium.PolyLine(locations=[[22,98],[22,107],[34,107],[34,98],[22,98]],color=&#x27;blue&#x27;)ls.add_to(incidents)# add incidents to mapmy_map = folium.Map(location=[latitude, longitude], zoom_start=6)my_map.add_child(incidents)# add latitude and longitude in the map when clickmy_map.add_child(folium.LatLngPopup())# save mapmy_map.save(&#x27;Chuandian_aeta.html&#x27;)webbrowser.open(&#x27;Chuandian_aeta.html&#x27;)","categories":[{"name":"python","slug":"python","permalink":"https://wangzhangyu.github.io/categories/python/"}],"tags":[]},{"title":"linux网络配置","slug":"linux网络配置","date":"2023-07-18T10:05:41.000Z","updated":"2023-07-18T10:05:47.000Z","comments":true,"path":"2023/07/18/linux网络配置/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/18/linux%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/","excerpt":"","text":"1. Interfaces配置 2. Ubuntu 桌面GUI界面配置 3. Netplan 4. 带界面的命令行 nmtui tips 参考 可以通过命令行，GUI界面等配置工具 1. Interfaces配置 &#x2F;etc&#x2F;network&#x2F;interfaces 文件里配置 123456auto enp10s0iface enp10s0 inet staticaddress 192.168.1.162netmask 255.255.255.0gateway 192.168.1.100dns-nameservers 1.0.0.1,1.1.1.1 保存并关闭文件。使用命令重启网络 带systemd的发行版1sudo systemctl restart networking 不带systemd的老版本1sudo /etc/init.d/networking restart 2. Ubuntu 桌面GUI界面配置系统-网络配置-点击 3. NetplanNetplan 是一个在某些 Linux 发行版上配置网络连接的命令行工具。Netplan 使用 YAML 描述文件来配置网络接口，然后，通过这些描述为任何给定的呈现工具生成必要的配置选项。Linux 上使用 Netplan 配置静态 IP 地址和 DHCP 地址&#x2F;etc&#x2F;netplan 文件夹下存放 Netplan 的新配置文件&#x2F;etc&#x2F;netplan&#x2F;01-netcfg.yaml 12345678910111213141516171819network: Version: 2 Renderer: networkd ethernets: DEVICE_NAME: Dhcp4: yes/no Addresses: [IP/NETMASK] Gateway: GATEWAY Nameservers: Addresses: [NAMESERVER, NAMESERVER] 其中： DEVICE_NAME 是需要配置设备的实际名称。 yes&#x2F; no 代表是否启用 dhcp4（动态获取） dhcp6 是否打开 IPv6 的 dhcp。 IP 是设备的 IP 地址。 NETMASK 是 IP 地址的掩码。 GATEWAY 是网关的地址。 NAMESERVER 是由逗号分开的 DNS 服务器列表 样例： 12345678910111213141516171819network: version: 2 renderer: networkd ethernets: ens33: dhcp4: no addresses: [192.168.1.230/24] gateway4: 192.168.1.254 nameservers: addresses: [8.8.4.4,8.8.8.8]掩码已经不用再配置为 255.255.255.0 这种形式。取而代之的是，掩码已被添加进了 IP 地址中。 测试配置 sudo netplan try 应用配置 sudo netplan apply 在 Netplan 上使用 DHCP123456789101112131415network: version: 2 renderer: networkd ethernets: ens5: Addresses: [] dhcp4: true optional: true 此时可以使用 ifconfig 命令得到动态分配的地址，然后重新配置静态地址。 4. 带界面的命令行 nmtui 在命令行输入nmtui tips 查看网卡对应的物理端口1ethtool -p enp10s0f0 指定对应的物理端口右侧绿灯闪烁，其他网卡灯熄灭 参考 https://blog.csdn.net/h4241778/article/details/110099003 http://t.zoukankan.com/xuliang-daydayup-p-12542746.html","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://wangzhangyu.github.io/tags/blog/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-07-18T09:44:32.957Z","updated":"2023-08-01T07:32:03.463Z","comments":true,"path":"2023/07/18/hello-world/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/18/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[]}],"categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"},{"name":"python","slug":"python","permalink":"https://wangzhangyu.github.io/categories/python/"},{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"},{"name":"macbook","slug":"macbook","permalink":"https://wangzhangyu.github.io/categories/macbook/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://wangzhangyu.github.io/tags/blog/"},{"name":"markdown","slug":"markdown","permalink":"https://wangzhangyu.github.io/tags/markdown/"}]}