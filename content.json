{"meta":{"title":"Hexo","subtitle":"","description":"","author":"Wang Zhangyu","url":"https://wangzhangyu.github.io","root":"/"},"pages":[{"title":"books","date":"2023-07-19T08:46:23.000Z","updated":"2023-07-19T08:49:26.596Z","comments":true,"path":"books/index.html","permalink":"https://wangzhangyu.github.io/books/index.html","excerpt":"","text":""},{"title":"links","date":"2023-07-19T08:46:35.000Z","updated":"2023-07-20T08:37:13.720Z","comments":true,"path":"links/index.html","permalink":"https://wangzhangyu.github.io/links/index.html","excerpt":"","text":""},{"title":"repository","date":"2023-07-19T08:46:09.000Z","updated":"2023-07-20T08:35:02.964Z","comments":false,"path":"repository/index.html","permalink":"https://wangzhangyu.github.io/repository/index.html","excerpt":"","text":""},{"title":"tags","date":"2023-07-19T08:24:16.000Z","updated":"2023-07-19T10:29:59.693Z","comments":true,"path":"tags/index.html","permalink":"https://wangzhangyu.github.io/tags/index.html","excerpt":"","text":""},{"title":"about","date":"2023-07-19T08:46:47.000Z","updated":"2023-07-20T12:14:11.277Z","comments":false,"path":"about/index.html","permalink":"https://wangzhangyu.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2023-07-19T08:23:11.000Z","updated":"2023-07-19T08:49:33.276Z","comments":true,"path":"categories/index.html","permalink":"https://wangzhangyu.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"conda, pip","slug":"anaconda","date":"2024-04-09T08:28:32.000Z","updated":"2024-04-09T11:09:31.448Z","comments":true,"path":"2024/04/09/anaconda/","link":"","permalink":"https://wangzhangyu.github.io/2024/04/09/anaconda/","excerpt":"","text":"Conda常用命令 😃 Conda 镜像管理 1. 命令行 2. 配置文件.condarc Pip 包管理器常用命令 Pip的源管理 1. 命令行 2. pip.conf文件 Conda常用命令 😃 操作 命令 查看虚拟环境 conda env list conda info -e conda info --envs 创建虚拟环境 conda create -n name python=3.9 激活虚拟环境 conda activate name 退出虚拟环境 conda deactivate 删除虚拟环境及包 conda remove -n name --all 导出虚拟环境配置 conda env export --name myenv &gt; myenv.yml conda env create -f myenv.yml conda list -e &gt; condalist.txt 导入安装包列表 conda install --yes --file condalist.txt 安装、更新、卸载包 安装：conda install numpy 更新：conda update numpy 卸载：conda uninstall numpy 清除缓存 conda clean -p conda clean -t conda clean -y --all Conda 镜像管理 1. 命令行 12345678910#设置清华镜像conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/#设置biocondaconda config --add channels biocondaconda config --add channels conda-forge#设置搜索时显示通道地址conda config --set show_channel_urls yes 追加conda-forge channel: conda config --add channels conda-forge 移除conda-forge channel conda config --remove channels conda-forge 查询当前配置中包含哪些channels conda config --get channels 2. 配置文件.condarc ~/.condarc 12345678910channels: - https://mirrors.ustc.edu.cn/anaconda/pkgs/free - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/ - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/peterjc123/ - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ - https://conda.anaconda.org/esri/linux-64/ - defaultsshow_channel_urls: true Pip 包管理器常用命令 Pip 是 Python 包管理器，用于安装和管理 Python 包。以下是一些常用的pip命令及其说明： 操作 命令 说明 安装包 pip install package_name 安装指定的 Python 包 指定版本安装包 pip install package_name==version 安装指定版本的 Python 包 更新包 pip install --upgrade package_name 更新已安装的 Python 包到最新版本 卸载包 pip uninstall package_name 卸载指定的 Python 包 列出已安装的包 pip list 列出当前环境中已安装的所有 Python 包 搜索包 pip search search_term 在 PyPI 中搜索符合条件的 Python 包 查看包详细信息 pip show package_name 显示指定 Python 包的详细信息 列出过时的包 pip list --outdated 列出当前环境中已安装的过时 Python 包 升级过时的包 pip install --upgrade package_name 更新当前环境中所有过时的 Python 包 从文件安装多个包 pip install -r requirements.txt 从指定的文件中安装多个 Python 包 导出已安装的包及版本信息 pip freeze &gt; requirements.txt 导出当前环境中已安装的包及其版本信息 Pip的源管理 1. 命令行 指定安装源 pip install package_name -i pip install package_name -i https://pypi.tuna.tsinghua.edu.cn/simple 2. pip.conf文件 ~/.pip/pip.conf 123456789[global]timeout = 10index-url = http://pypi.mirrors.ustc.edu.cn/simple/index-index-url = http://pypi.tuna.tsinghua.edu.cn/simple/[install]trusted-host = pypi.tuna.tsinghua.edu.cn pypi.douban.com pypi.mirrors.ustc.edu.cn 参考：https://blog.csdn.net/chenxy_bwave/article/details/119996001 https://mirrors.tuna.tsinghua.edu.cn/help/pypi/","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[{"name":"conda","slug":"conda","permalink":"https://wangzhangyu.github.io/tags/conda/"}]},{"title":"nohup用法","slug":"nohup用法","date":"2024-04-08T09:01:51.000Z","updated":"2024-04-08T13:19:32.113Z","comments":true,"path":"2024/04/08/nohup用法/","link":"","permalink":"https://wangzhangyu.github.io/2024/04/08/nohup%E7%94%A8%E6%B3%95/","excerpt":"","text":"SIGHUP信号 nohup, disown 后台运行命令 &amp; 输出重定向 nohup,&amp;,输出重定向 命令 用法 说明 jobs jobs -l 查看任务详情 bg bg %工作ID 将工作ID任务调入后台运行 fg fg %工作ID 将工作ID任务调入前台运行 kill kill -n [ PID 或 %工作ID ] 向任务发送信号 &amp; command-line &amp; 将任务立即放入后台运行 nohup nohup command-line 忽视 SIGHUP 信号 disown command-line disown -h 或 disown -h %工作ID 忽视 SIGHUP 信号 SIGHUP信号 nohup和disown会忽视SIGHUP信号 nohup, disown 让程序无视 SIGHUP 信号 这两个命令的效果是一致的，都是通过将程序挂载到另外的进程下（最典型的就是1号系统进程），使得程序不受当前终端的 SIGHUP 信号影响。表现出来的结果就是当断线重连后，利用 pstree -p 命令显示进程树，会发现程序已经移动到别的进程下了： 1234# 当前 bash shell 进程号是 3616 ， running.sh 程序进程号是 3504$ pstree -p 3504init(1)─┬─init(3403)───bash(3504)───sleep(3644) ├─init(3614)───init(3615)───bash(3616)───pstree(3645) 后台运行命令 &amp; 如果想程序一开始就进入后台运行，可以通过 &amp; 命令; 如果程序运行后，想把程序放后台，通过 CTRL+Z 暂停任务，配合 bg 命令可以将任务放入后台。 1bg %1 输出重定向 1234567891011121314# 将标准输出1定向到 file.out 标准错误输出2定向到 file.err$ bash running.sh 1&gt; file.out 2&gt; file.err# 或者将1与2合并定向到 file.all$ bash running.sh 1&gt; file.all 2&gt;&amp;1# 只把1定向到 file.out 2还是保持输出到屏幕$ bash running.sh 1&gt; file.out# 如果 &gt; 符号前没有加描述符，默认为标准输出1$ bash running.sh &gt; file.out# 重定向到 /dev/null , /dev/null 就像一个无底洞，可以无限往里面扔东西，坏处就是程序输出了啥咱也不知道$ bash running.sh &gt; /dev/null 2&gt;&amp;1 参考：https://zhuanlan.zhihu.com/p/446891442","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"Visual Studio Code 配置","slug":"vscode配置","date":"2024-04-07T08:16:29.000Z","updated":"2024-04-08T06:39:37.748Z","comments":true,"path":"2024/04/07/vscode配置/","link":"","permalink":"https://wangzhangyu.github.io/2024/04/07/vscode%E9%85%8D%E7%BD%AE/","excerpt":"","text":"vs code自动更新后无法正常使用remote ssh插件，连接一直卡在“正在下载vs code 服务器&quot; vs code当前版本: 1.88.0 (Universal) 观察remote ssh输出日志： 打开调试-输出-remote ssh，发现确实卡在下载的过程 1[16:19:20.211] [server] Installing and setting up Visual Studio Code Server... 解决方案： 降低vs code版本，使用1.85版本 同时删除.ssh文件夹中的known_hosts，重新安装remote ssh插件 下载地址：https://code.visualstudio.com/updates/v1_85 https://github.com/microsoft/vscode/issues/203967 记录下vs code安装的插件 macos中安装code 打开Visual Studio通过（⇧⌘P）打开命令面板，然后键入以找到Shell命令：shell command install code 下载已安装的extension名称 导出到extensions文本 1code --list-extensions &gt; extensions.txt 123456789101112131415161718192021antonreshetov.masscode-assistantecmel.vscode-html-cssgithub.copilotgithub.copilot-chatjames-yu.latex-workshoplextudio.restructuredtextms-ceintl.vscode-language-pack-zh-hansms-python.debugpyms-python.pythonms-python.vscode-pylancems-toolsai.jupyterms-toolsai.jupyter-keymapms-toolsai.jupyter-renderersms-toolsai.vscode-jupyter-cell-tagsms-toolsai.vscode-jupyter-slideshowms-vscode-remote.remote-sshms-vscode-remote.remote-ssh-editms-vscode.remote-explorertrond-snekvik.simple-rstvue.volarzainchen.json","categories":[{"name":"macbook","slug":"macbook","permalink":"https://wangzhangyu.github.io/categories/macbook/"}],"tags":[]},{"title":"Git与Github使用","slug":"git使用","date":"2024-04-04T10:58:44.000Z","updated":"2024-04-08T05:51:32.911Z","comments":true,"path":"2024/04/04/git使用/","link":"","permalink":"https://wangzhangyu.github.io/2024/04/04/git%E4%BD%BF%E7%94%A8/","excerpt":"","text":"Git基本命令 GitHub操作流程，远程推送 创建.gitignore文件 Github大文件上传 Git 标签 Github配置ssh Github加速 Git基本命令 命令 说明 git clone &lt;repo&gt; &lt;directory&gt; 从现有 Git 仓库中拷贝项目 git add . 添加所有更改到暂存区 git commit -m &quot;message&quot; 提交更改到版本库 git status 查看当前状态 git branch 查看本地所有分支 git branch -r 查看远程所有分支 git branch -a 查看本地和远程所有分支 git branch &lt;branchname&gt; 新建分支 git branch [-f] &lt;branchname&gt; 新建分支，但不切换分支，仍保持在原分支 git checkout &lt;branchname&gt; 切换分支 git merge &lt;branchname&gt; 合并分支 git branch -m main 重命名默认的 master 分支为 main 分支 git branch (-d | -D) &lt;branchname&gt; 删除分支 git branch -d -r &lt;branchname&gt; 删除远程分支 git remote add [shortname] [url] 添加远程库 git reset HEAD^ 回退所有内容到上一个版本 git reset HEAD^ hello.php 回退 hello.php 文件的版本到上一个版本 git reset 052e 回退到指定版本 git tag -a v1.0 创建标签 git log 查看提交历史 git diff 比较文件的不同，即暂存区和工作区的差异 git fetch 从远程获取代码库 git pull 下载远程代码并合并 git push 上传远程代码并合并 git remote 远程仓库操作 GitHub操作流程，远程推送 Github端：Github上创建一个新仓库创建一个空的仓库，不需要添加readme.md，空的就可以 服务器端 create a new repository on the command line 1234567echo &quot;# test&quot; &gt;&gt; README.mdgit initgit add README.mdgit commit -m &quot;first commit&quot;git branch -M maingit remote add origin git@github.com:WangZhangyu/test.gitgit push -u origin main push an existing repository from the command line 123git remote add origin git@github.com:WangZhangyu/test.gitgit branch -M maingit push -u origin main 123456git init //把这个目录变成Git可以管理的仓库git add README.md //文件添加到仓库git add . //不但可以跟单一文件，还可以跟通配符，更可以跟目录。一个点就把当前目录下所有未追踪的文件全部add了 git commit -m &quot;first commit&quot; //把文件提交到仓库git remote add origin git@github.com:WangZhangyu/test.git //关联远程仓库git push -u origin master //把本地库的所有内容推送到远程库上 GitHub已有仓库和内容，本地没有 1git clone &lt;repo&gt; &lt;directory&gt; master是git的默认分支，main是github的默认分支,所以需要在git中把master分支重命名为main分支。在mac中git默认分支为main，无需改动。 git push -u 命令用于将本地分支的更新推送到远程仓库，并将本地分支与远程分支进行关联。 git push: 将本地仓库的提交推送到远程仓库。 -u 或 --set-upstream: 设置本地分支与远程分支的关联关系。一旦关联，之后使用 git push 命令时，只需要输入 git push 即可，Git 将自动推送到已经设置的远程分支。 通常情况下，第一次推送本地分支到远程分支时，需要使用 -u 选项来建立本地分支与远程分支的关联。这样设置后，以后再次推送时，只需使用 git push 命令即可，Git 将根据之前建立的关联关系自动推送到对应的远程分支。 创建.gitignore文件 有些文件不想提交，可以创建并编辑.gitignore文件 .gitignore文件，Git会自动忽略这些文件，不进行提交 1234567891011# dir 不需要提交的目录/SAC# file 不需要提交的文件config.ini# log 不需要提交的任意包含后缀名为log的文件*.log# Package Files 不需要提交的任意包含后缀名为gz的文件*.gz Git忽略文件的原则忽略操作系统自动生成的文件，比如缩略图等；忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如产生的.log日志文件；忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。 Github大文件上传 GitHub默认不支持100MB以上的文件 安装 Git 大文件存储（Git LFS） Git LFS(Git Large File Storage)，即Git大文件存储技术，相当于Git的一种插件式增强工具，简单讲，它是在Git仓库使用这些文件的 指针代替 实际文件，而把实际文件存储在远程端LFS服务器，同时在本地仓库中实时追踪这些文件的变动。 Ubuntu下安装lfs sudo apt-get install git-lfs 初始化lfs，git lfs install 把大文件添加到lfs管理文件：git lfs track *.pkl文件夹：git lsf track model此时会生成一个.gitattributes文件，记录track的大文件 查看lfs追踪了哪些文件：git lfs ls-files 把新的文件添加到缓存区 git add .gitattributes 把提交缓存区内的文件到本地仓库：git commit -m &quot;add .gitattributes&quot; 将本地的大型模型通过git推送到gitlfs中管理：git push origin main https://zhuanlan.zhihu.com/p/444203121 Git 标签 如果你达到一个重要的阶段，并希望永远记住那个特别的提交快照，你可以使用 git tag 给它打上标签。 1git tag -a v1.0 Github配置ssh https://www.runoob.com/git/git-remote-repo.html Github加速 Github加速 – 修改/etc/host文件 123456789101112131415161718192021222324252627282930313233343536373839# update: 20220222# Github Hosts# domain: github.com140.82.113.4 github.com140.82.114.9 nodeload.github.com140.82.112.5 api.github.com140.82.112.10 codeload.github.com185.199.108.133 raw.github.com185.199.108.153 training.github.com185.199.108.153 assets-cdn.github.com185.199.108.153 documentcloud.github.com140.82.114.17 help.github.com# domain: githubstatus.com185.199.108.153 githubstatus.com# domain: fastly.net199.232.69.194 github.global.ssl.fastly.net# domain: githubusercontent.com185.199.108.133 raw.githubusercontent.com185.199.108.154 pkg-containers.githubusercontent.com185.199.108.133 cloud.githubusercontent.com185.199.108.133 gist.githubusercontent.com185.199.108.133 marketplace-screenshots.githubusercontent.com185.199.108.133 repository-images.githubusercontent.com185.199.108.133 user-images.githubusercontent.com185.199.108.133 desktop.githubusercontent.com185.199.108.133 avatars.githubusercontent.com185.199.108.133 avatars0.githubusercontent.com185.199.108.133 avatars1.githubusercontent.com185.199.108.133 avatars2.githubusercontent.com185.199.108.133 avatars3.githubusercontent.com185.199.108.133 avatars4.githubusercontent.com185.199.108.133 avatars5.githubusercontent.com185.199.108.133 avatars6.githubusercontent.com185.199.108.133 avatars7.githubusercontent.com185.199.108.133 avatars8.githubusercontent.com# End of the section 参考： https://blog.csdn.net/gongdamrgao/article/details/115032436 https://zhuanlan.zhihu.com/p/107334179 https://zhuanlan.zhihu.com/p/52885189 https://www.runoob.com/git/git-reset.html","categories":[{"name":"Git","slug":"Git","permalink":"https://wangzhangyu.github.io/categories/Git/"}],"tags":[]},{"title":"linux 包管理器rpm，yum，apt，dpkg，brew","slug":"linux包管理器","date":"2024-03-28T13:30:27.000Z","updated":"2024-04-08T06:42:40.660Z","comments":true,"path":"2024/03/28/linux包管理器/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/28/linux%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/","excerpt":"","text":"rpm yum apt dpkg brew 区别 RedHat系列: Redhat、Centos、Fedora等 常见的安装包格式 rpm包,安装rpm包的命令是“rpm -参数” 包管理工具 yum 支持tar包 Debian系列: Debian、Ubuntu等 常见的安装包格式 deb包,安装deb包的命令是“dpkg -参数” 包管理工具 apt-get 支持tar包 参考：https://blog.csdn.net/bandaoyu/article/details/83312230","categories":[],"tags":[]},{"title":"搭建影音存储","slug":"搭建影音存储","date":"2024-03-27T16:45:59.000Z","updated":"2024-04-08T06:43:55.591Z","comments":true,"path":"2024/03/28/搭建影音存储/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/28/%E6%90%AD%E5%BB%BA%E5%BD%B1%E9%9F%B3%E5%AD%98%E5%82%A8/","excerpt":"","text":"在旧电脑上安装centos7.9 更新系统 安装qbittorrent 123456789101112131415# 安装 qbittorrent和qbittorrent-noxsudo yum install qbittorrentsudo yum install qbittorrent-nox# 启动qbittorrent-noxqbittorrent-nox# 查看是否启动成功ps -ef | grep qbittorrent-nox# 关闭 qbittorrent-noxpkill -9 qbittorrent-nox# 指定端口启动qbittorrent-noxqbittorrent-nox --webui-port=8080 端口映射路由器端配置nat 华为路由器-网络设置-安全防护-NAT配置-端口映射 安装docker 12#安装工具包sudo yum install -y yum-utils device-mapper-persistent-data lvm2 12#设置yum仓库sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 123456789#通过yum安装Dockersudo yum install docker-ce docker-ce-cli containerd.io#启动Dockersudo systemctl start docker#设置Docker开机自启sudo systemctl enable docker#查看Docker版本sudo docker version https://blog.csdn.net/qq_43721032/article/details/119134118 用docker安装alist 12# 安装alist容器docker run -d --restart=always -v /home/alist:/opt/alist/data -p 5244:5244 --name=&quot;alist&quot; xhofe/alist:latest 1234# 进入容器docker exec -it alist sh #/bin/sh# 修改alist密码./alist admin set NEW_PASSWORD 1234docker ps -a #命令列出所有容器docker stop &lt;CONTAINER ID|NAME&gt; #停止容器docker rm &lt;CONTAINER ID|NAME&gt; &lt;CONTAINER ID|NAME&gt; #删除单个或多个容器。docker rm $(docker ps -a -q) #一次删除所有停止的容器 https://blog.csdn.net/u010190198/article/details/134056996 https://www.cnblogs.com/law148/p/16800764.html 用alist挂载阿里云盘选择阿里云盘open 挂载后局域网内可以访问，http://192.168.3.7:5244/ali https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html 使用davfs2把alist挂载到服务器上 davfs2是linux的一种文件系统 123# 安装davfs2sudo yum updatesudo yum install davfs2 -y 安装完成后，我们需要对davfs2进行适配Alist的配置。通过以下命令编辑davfs2的配置文件： 1sudo vi /etc/davfs2/davfs2.conf 在配置文件中找到 ignore_dav_header 这一项。如果前面有注释符号，请删除它，并把该项的值设置为 1： 1ignore_dav_header 1 修改davfs2缓存大小 cache_size = 10000 重启davfs2 systemctl restart davfs2.service 挂载 sudo mount -t davfs http://ip或者域名:端口号/dav /mnt/webdav 12345678[wangzy@localhost a]$ sudo mount -t davfs localhost:5244/dav /mnt/webdavPlease enter the username to authenticate with serverlocalhost:5244/dav or hit enter for none.Username: adminPlease enter the password to authenticate user admin with serverlocalhost:5244/dav or hit enter for none.Password:/sbin/mount.davfs: Warning: can&#x27;t write entry into mtab, but will mount the file system anyway https://dashen.wang/5684.html 或者直接安装阿里云盘安装 1234wget https://github.com/tickstep/aliyunpan/releases/download/v0.3.0/aliyunpan-v0.3.0-linux-amd64.zipunzip aliyunpan-v0.3.0-linux-amd64.zipcd aliyunpan-v0.3.0-linux-amd64./aliyunpan 使用 12345[tickstep@MacPro ~]$ aliyunpan提示: 方向键上下可切换历史命令.提示: Ctrl + A / E 跳转命令 首 / 尾.提示: 输入 help 获取帮助.aliyunpan &gt; 查看帮助 12345678910111213141516aliyunpan &gt; help 阿里云盘: album, abm 相簿(Beta) cd 切换工作目录 download, d 下载文件/目录 ls, l, ll 列出目录 mkdir 创建目录 mv 移动文件/目录 pwd 输出工作目录 recycle 回收站 rename 重命名文件 rm 删除文件/目录 share 分享文件/目录 sync 同步备份功能 upload, u 上传文件/目录 登录账号 123456aliyunpan &gt; login请在浏览器打开以下链接进行登录，链接有效时间为5分钟。注意：你需要进行一次授权一次扫码的两次登录。https://openapi.alipan.com/oauth/authorize?client_id=cf9f70e8fc61430f8ec5ab5cadf31375&amp;redirect_uri=https%3A%2F%2Fapi.tickstep.com%2Fauth%2Ftickstep%2Faliyunpan%2Ftoken%2Fopenapi%2F8206f0.....fb5db6b40336%2Fauth&amp;scope=user:base,file:all:read,file:all:write阿里云盘登录成功: tickstepaliyunpan:/ tickstep$ 上传 1234567891011121314aliyunpan:/ tickstep$ upload /Users/tickstep/Downloads/apt.zip /tmp[0] 当前文件上传最大并发量为: 10, 上传分片大小为: 10.00MB[1] 加入上传队列: /Users/tickstep/Downloads/apt.zip[1] 2022-08-13 13:41:22 准备上传: /Users/tickstep/Downloads/apt.zip =&gt; /tmp/apt.zip[1] 2022-08-13 13:41:22 正在检测和创建云盘文件夹: /tmp[1] 2022-08-13 13:41:22 正在计算文件SHA1: /Users/tickstep/Downloads/apt.zip[1] 2022-08-13 13:41:22 检测秒传中, 请稍候...[1] 2022-08-13 13:41:22 秒传失败，开始正常上传文件[1] ↑ 21.00MB/21.00MB 702.53KB/s(702.70KB/s) in 15s ............[1] 2022-08-13 13:41:22 上传文件成功, 保存到网盘路径: /tmp/apt.zip[1] 2022-08-13 13:41:22 文件上传结果： 成功！ 耗时 18秒上传结束, 时间: 18秒, 数据总量: 21.00MB 下载 12345678910111213141516171819aliyunpan:/ tickstep$ download IMG_0106.JPG[0] 当前文件下载最大并发量为: 5, 下载缓存为: 64.00KB[1] 加入下载队列: /IMG_0106.JPG[1] ----文件ID: 60bc44f855814e19692a4958b4a8823a1a06e5de文件名: IMG_0106.JPG文件类型: 文件文件路径: /IMG_0106.JPG[1] 准备下载: /IMG_0106.JPG[1] 将会下载到路径: /root/Downloads/4d001d48564f43b..62874f04bbe6/IMG_0106.JPG[1] 下载开始[1] ↓ 704.00KB/1.48MB 0B/s(1.69MB/s) in 1.88s, left - ............[1] 下载完成, 保存位置: /root/Downloads/4d001d48564f43b..62874f04bbe6/IMG_0106.JPG[1] 检验文件有效性成功: /root/Downloads/4d001d48564f43b..62874f04bbe6/IMG_0106.JPG下载结束, 时间: 4秒, 数据总量: 1.48MBaliyunpan:/ tickstep$ https://github.com/tickstep/aliyunpan","categories":[],"tags":[]},{"title":"写一个alist守护程序","slug":"写一个alist守护程序","date":"2024-03-25T05:42:08.000Z","updated":"2024-03-27T03:46:41.078Z","comments":true,"path":"2024/03/25/写一个alist守护程序/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/25/%E5%86%99%E4%B8%80%E4%B8%AAalist%E5%AE%88%E6%8A%A4%E7%A8%8B%E5%BA%8F/","excerpt":"","text":"alist守护程序，包括alist的启动，停止，重启和状态服务 123456789101112131415161718192021222324252627282930313233343536#!/bin/bashalist_process=&quot;/Applications/alist/alist server&quot;start_alist() &#123; nohup $alist_process &gt; /dev/null &amp; echo &quot;Alist started.&quot;&#125;stop_alist() &#123; echo &quot;Stopping alist...&quot; pkill -x &quot;alist&quot;&#125;check_alist_status() &#123; if pgrep -x &quot;alist&quot; &gt; /dev/null; then echo &quot;Alist is running.&quot; else echo &quot;Alist is not running.&quot; fi&#125;if [ &quot;$1&quot; == &quot;start&quot; ]; then start_alistelif [ &quot;$1&quot; == &quot;stop&quot; ]; then stop_alistelif [ &quot;$1&quot; == &quot;restart&quot; ]; then stop_alist sleep 2 # 等待一段时间以确保 &quot;alist&quot; 进程已经终止 start_alistelif [ &quot;$1&quot; == &quot;status&quot; ]; then check_alist_statuselse echo &quot;Usage: $0 &#123;start|stop|restart|status&#125;&quot; exit 1fi 脚本保存为alist_daemon.sh 配置别名 12# aliasalias alist=&quot;/Applications/alist/alist_daemon.sh&quot; 实际运行 123456789(base) wangzy@macbook alist % alist Usage: /Applications/alist/alist_daemon.sh &#123;start|stop|restart|status&#125;(base) wangzy@macbook alist % alist statusAlist is not running.(base) wangzy@macbook alist % alist start Alist started.(base) wangzy@macbook alist % alist statusAlist is running. Alist有官方的守护程序代码 Linux下, 编辑 /usr/lib/systemd/system/alist.service 并添加如下内容，其中 path_alist 为 AList 所在的路径 123456789101112[Unit]Description=alistAfter=network.target [Service]Type=simpleWorkingDirectory=path_alistExecStart=path_alist/alist serverRestart=on-failure [Install]WantedBy=multi-user.target 然后，执行 systemctl daemon-reload 重载配置，现在你可以使用这些命令来管理程序： 启动: systemctl start alist 关闭: systemctl stop alist 配置开机自启: systemctl enable alist 取消开机自启: systemctl disable alist 状态: systemctl status alist 重启: systemctl restart alist 参考：https://alist.nn.ci/zh/guide/install/manual.html#守护进程","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[{"name":"alist","slug":"alist","permalink":"https://wangzhangyu.github.io/tags/alist/"}]},{"title":"端口映射","slug":"端口映射","date":"2024-03-24T14:20:40.000Z","updated":"2024-03-27T07:39:06.918Z","comments":true,"path":"2024/03/24/端口映射/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/24/%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/","excerpt":"","text":"通过路由器端口映射，对局域网内服务器进行ssh登录 进行IP与MAC绑定 配置端口映射 【转发规则】-&gt;【虚拟服务器】 华为路由器-网络设置-安全防护-NAT配置-端口映射 内网端口映射为路由器端口，相当于内网穿透 内网的一台电脑要上因特网对外开放服务或接收数据，就需要端口映射。 端口映射分为动态和静态。 动态端口映射 内网中的一台电脑要访问新浪网，会向nat网关发送数据包，包头中包括对方(就是新浪网)IP、端口和本机IP、端口，nat网关会把本机IP、端口替换成自己的公网IP、一个未使用的端口，并且会记下这个映射关系，为以后转发数据包使用。然后再把数据发给新浪网，新浪网收到数据后做出反应，发送数据到nat网关的那个未使用的端口，然后nat网关将数据转发给内网中的那台电脑，实现内网和公网的通讯.当连接关闭时，nat网关会释放分配给这条连接的端口，以便以后的连接可以继续使用。动态端口映射其实也就是nat网关的工作方式。 静态端口映射 就是在nat网关上开放一个固定的端口，然后设定此端口收到的数据要转发给内网哪个IP和端口，不管有没有连接，这个映射关系都会一直存在。就可以让公网主动访问内网的一个电脑。 什么是nat 简单地说，nat就是在局域网内部网络中使用内部地址，而当内部节点要与外部网络进行通讯时，就在网关（可以理解为出口，打个比方就像院子的门一样）处，将内部地址替换成公用地址，从而在外部公网（internet）上正常使用，nat可以使多台计算机共享Internet连接，这一功能很好地解决了公共 IP地址紧缺的问题。通过这种方法，你可以只申请一个合法IP地址，就把整个局域网中的计算机接入Internet中。这时，nat屏蔽了内部网络，所有内部网计算机对于公共网络来说是不可见的，而内部网计算机用户通常不会意识到nat的存在。 nat内网穿透是什么? 常说的端口映射是NAT的一种，其功能就是把在公网的地址转翻译成私有地址， 采用路由方式的ADSL宽带路由器拥有一个动态或固定的公网IP，ADSL直接接在HUB或交换机上，所有的电脑共享上网。在局域网内部的任一PC或服务器上运行到内网穿透客户端，此时域名解析到的IP地址是局域网网关出口处的公网IP地址，再在网关处做端口映射指向监控设备即可。 参考： https://blog.csdn.net/qq_40156289/article/details/109540064 https://blog.csdn.net/wangweiwells/article/details/99004658 花生壳内网穿透 https://www.zhihu.com/question/419146871/answer/1462241036","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"macbook网络间歇性断流","slug":"macbook网络间歇性断流","date":"2024-03-24T07:35:29.000Z","updated":"2024-03-27T07:42:42.942Z","comments":true,"path":"2024/03/24/macbook网络间歇性断流/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/24/macbook%E7%BD%91%E7%BB%9C%E9%97%B4%E6%AD%87%E6%80%A7%E6%96%AD%E6%B5%81/","excerpt":"","text":"Terminal中直接开启关闭AWDL， DISABLE 1sudo ifconfig awdl0 down ENABLE: 1sudo ifconfig awdl0 up 或者下载 WiFriedX 小工具，运行后勾选“Disable AWDL/AirDrop”，禁用 AWDL 服务 试了很多方法都不行，最后发现不是电脑的问题，是网络通登录验证的问题。网络通密码太弱了，换密码问题解决。 参考：https://zhuanlan.zhihu.com/p/441284532","categories":[{"name":"macbook","slug":"macbook","permalink":"https://wangzhangyu.github.io/categories/macbook/"}],"tags":[]},{"title":"ssh配置","slug":"ssh配置","date":"2024-03-23T06:16:38.000Z","updated":"2024-03-26T13:25:25.980Z","comments":true,"path":"2024/03/23/ssh配置/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/23/ssh%E9%85%8D%E7%BD%AE/","excerpt":"","text":"ssh安装 ssh配置文件 sshd_config ssh免密登录 在目标服务器中 在本地服务器 ssh跳板 直接跳转 ProxyJump跳转 ProxyCommand跳转 常见问题 ssh的用法 ssh安装 ssh安装 sudo apt install openssh-server 查看ssh服务状态 sudo systemctl status ssh 确保防火墙打开了 SSH 端口 sudo ufw allow ssh 使用ssh连接远程服务器 ssh username@ip_address 禁用ssh sudo systemctl disable --now ssh 启用ssh sudo systemctl enable --now ssh ssh配置文件 sshd_config 配置文件位置/etc/ssh/sshd_config 可调整一些重要的配置，如禁止root远程登录等。 12345678910111213141516171819# Logging #SyslogFacility AUTH SyslogFacility AUTHPRIV &lt;==设定在记录来自sshd的消息的时候，是否给出“facility code” #LogLevel INFO &lt;==日志记录级别，默认为info # Authentication: #LoginGraceTime 2m &lt;==限定用户认证时间为2min #PermitRootLogin yes &lt;==是否允许root账户ssh登录，生产环境中建议改成no，使用普通账户ssh登录 #StrictModes yes &lt;==设置ssh在接收登录请求之前是否检查用户根目录和rhosts文件的权限和所有权，建议开启 #MaxAuthTries 6 &lt;==指定每个连接最大允许的认证次数。默认值是 6 #MaxSessions 10 &lt;==最大允许保持多少个连接。默认值是 10 #PubkeyAuthentication yes &lt;==是否开启公钥验证 # The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2 # but this is overridden so installations will only check .ssh/authorized_keys AuthorizedKeysFile .ssh/authorized_keys &lt;==公钥验证文件路径 PasswordAuthentication yes &lt;==是否允许密码验证，生产环境中建议改成no，只用密钥登录 ssh配置文件详解https://www.jianshu.com/p/e87bb207977c 重启sshd服务使刚修改的配置文件生效systemctl restart sshd ssh免密登录 在目标服务器中 查看home目录下有没有 .ssh 文件夹， 用 ls -al查看 (注：linux系统中以“.”开头的是隐藏文件) 如果没有，就自己建立一个 ： mkdir .ssh cd然后进入 .ssh，依次运行： ssh-keygen （命令后一直敲空格就行, 会生成几个文件） cat id_dsa.pub &gt;&gt; authorized_keys 退出.ssh 至你的home， 运行 chmod -R 755 .ssh 进入.ssh， chmod 600 * -rw——- (600) 只有拥有者有读写权限。 -rwxr-xr-x (755) 拥有者有读、写、执行权限；而属组用户和其他用户只有读、执行权限。 /etc/host.allow和/etc/hosts.deny 这两个文件时控制远程访问设置的，通过该设置可以允许或者拒绝某个ip或者ip段访问linux的某项服务。我们可以用于限制访问服务器sshd服务的源地址，host.allow文件对应白名单，hosts.deny文件对应黑名单 在本地服务器 在本地服务器配置config文件 ~/.ssh/config 1234567Host * Port 22Host remoteserver HostName remote.example.com User test Port 22 配置完成后ssh remoteserver可直接跳转远程服务器 ssh跳板 直接跳转 1ssh -A -J user@jump-server:port user@destination-server:port 为了方便，可配置config文件，设置静态跳转 ProxyJump跳转 12345678### First jumphost. Directly reachableHost vps1 HostName vps1.example.org### Host to jump to via jumphost1.example.orgHost contabo HostName contabo.example.org ProxyJump vps1 ProxyCommand跳转 12345678910Host tiaoban # 任意名字，随便使用 HostName 跳板机的 IP，支持域名 Port 22 # 跳板机端口 User username_tiaoban # 跳板机用户Host target # 同样，任意名字，随便起 HostName 目标服务器 IP # 真正登陆的服务器，不支持域名必须IP地址 Port 22 # 服务器的端口 User username # 服务器的用户 ProxyCommand ssh tiaoban -W %h:%p 常见问题 查看ssh的端口是否开放 如果发现root权限无法修改sshd_config文件，考虑服务器可能已经被入侵 ssh的用法 ssh -p ssh user@ip -L localhost:8888:localhost:8080 端口转发 参考： https://blog.csdn.net/antony1776/article/details/130180372 https://zhuanlan.zhihu.com/p/74193910","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"linux基本命令","slug":"linux基本命令","date":"2024-03-22T15:45:39.000Z","updated":"2024-03-28T11:36:36.153Z","comments":true,"path":"2024/03/22/linux基本命令/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/22/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/","excerpt":"","text":"系统相关 进程相关 网络 文件相关 传输操作 权限与扩展属性 磁盘挂载和空间查看 打包与解压 三剑客 启动服务 linux系统的文件结构 一些常见的文件位置 系统相关 命令 说明 lsb_release -a 查看Ubuntu版本 uname -a 查看操作系统详细信息 top 或 htop 查看CPU使用情况 nvidia-smi 或 nvtop 查看GPU使用情况 nvcc -V 查看CUDA版本 yum install xxx(centos)或 apt install xxx(ubuntu) 安装软件 shutdown -h now 或 poweroff 关机 shutdown -r now 或 reboot 重启 whoami 显示当前用户名 which 在PATH变量指定的路径中搜索可执行文件的位置 whereis 在标准位置中搜索可执行文件、源码文件和帮助文件的位置 date 显示当前日期和时间 cal 显示当前月份的日历 uptime 显示系统的运行时间和平均负载 history 显示历史命令记录 man 显示命令的使用手册 info 显示命令的更详细的使用信息 ln 创建链接 find 在文件系统中搜索文件 locate 使用数据库快速搜索文件 ssh 远程登录另一台计算机 echo 输出文本内容 hostname 显示或设置系统主机名 w 显示当前登录用户信息 last 显示最近登录用户的信息 lastb 显示失败的登录尝试信息 s-tui Linux下监控CPU温度、频率、功耗 man man 获取关于特定命令或主题的详细信息 进程相关 命令 说明 ps -ef | grep xxxx 查看某个进程状态 kill -9 xxxx 杀掉进程 pkill -l 显示所有可用的信号列表 pkill -e &lt;进程名&gt; 精确匹配进程名称，只终止完全匹配的进程 pkill -f &lt;进程参数&gt; 匹配进程名及其参数，定位带有特定参数的进程 pkill -u &lt;用户ID&gt; 根据进程的有效用户ID（EUID）来定位和终止进程 pkill -g &lt;进程组ID&gt; 根据进程组ID来定位和终止进程 pkill -t &lt;终端ID&gt; 根据终端ID来定位和终止进程 pkill -c &lt;进程名&gt; 显示匹配到的进程数量，而不执行终止操作 pkill -x &lt;进程名&gt; 仅匹配完全相同的进程名，不会匹配到子进程 pkill -n &lt;进程名&gt; 终止最新的一个匹配进程 网络 命令 说明 ping 测试与另一台计算机的连接情况 traceroute 显示到目标主机的路径 ifconfig 显示和配置网络接口信息 netstat 显示网络连接、路由表和网络接口状态 route 显示和配置路由表信息 iptables -S 显示当前的iptables规则 ufw 用于管理Uncomplicated Firewall (UFW)的命令 curl 用于向服务器发送HTTP请求并显示返回的数据 wget 用于从指定URL下载文件 telnet &lt;hostname or IP address&gt; &lt;port&gt; 在命令行中使用 Telnet 协议连接远程主机；测试IP端口 netcat 用于网络通信的工具，可以用作端口扫描、端口监听等功能 ufw 命令 说明 sudo ufw enable 启用防火墙 sudo ufw disable 禁用防火墙 sudo ufw allow &lt;port&gt; 开放指定端口（允许特定端口的传入连接） sudo ufw deny &lt;port&gt; 关闭指定端口（禁止特定端口的传入连接） sudo ufw allow from &lt;IP_address&gt; 允许特定IP地址的访问 sudo ufw deny from &lt;IP_address&gt; 拒绝特定IP地址的访问 sudo ufw allow ssh 允许SSH服务的访问 sudo ufw status 查看当前防火墙规则状态 文件相关 命令 说明 touch file 创建名为file的空文件 cat file 显示文件的全部内容 tail file 显示文件的末尾几行 head file 显示文件的前几行 more file 逐页显示文件内容，空格键向下翻页 less file 逐页显示文件内容，可以上下翻页、搜索等交互式操作 传输操作 传输操作 命令 说明 复制文件 cp 将文件或目录复制到另一个位置 移动文件 mv 将文件或目录从一个位置移动到另一个位置，也可用于重命名文件或目录 远程复制 scp 安全地将文件从本地系统复制到远程系统，或者从远程系统复制到本地系统 同步文件 rsync 在本地系统和远程系统之间同步文件和目录，可以进行增量复制并保持文件权限 权限与扩展属性 权限操作 命令 说明 更改所有者 chown 将文件或目录的所有者更改为指定用户或用户组 更改组 chgrp 将文件或目录的所属组更改为指定的用户组 更改权限 chmod 更改文件或目录的权限，控制文件的读、写、执行权限以及特殊权限位的设置 修改扩展属性 chattr +iau 修改文件或目录的扩展属性，添加、删除或修改指定的扩展属性 显示扩展属性 lsattr 显示文件或目录的扩展属性 磁盘挂载和空间查看 挂载操作 命令 说明 挂载文件系统 mount /dev/sdb1 /mnt 将文件系统挂载到指定的挂载点 卸载文件系统 umount /dev/sdb1 或 umount /mnt 卸载已经挂载的文件系统，通常用 umount 挂载点 命令，例如 umount /mnt 查看磁盘空间 df -h 查看文件系统的磁盘空间使用情况 查看目录空间 du -h 或 du -h --max-depth=1 查看指定目录或文件的磁盘空间使用情况 查看内存使用 free -h 查看系统内存使用情况 查看磁盘分区 fdisk -l 查看系统的磁盘分区信息 打包与解压 操作 命令 说明 打包 tar -zcvf 使用gzip压缩将文件或目录打包为.tar.gz文件 解压 tar -zxvf 解压缩.tar.gz文件，同时调用gzip解压缩命令 解压 unzip 解压缩.zip文件 压缩 gzip 压缩和解压文件（使用gzip格式） 压缩 zip 压缩和解压文件（使用zip格式） 解压 unzip 解压zip格式的文件 三剑客 工具名称 说明 awk 用于文本处理和数据提取的强大工具 grep 用于搜索文本中的指定模式，并输出匹配行 sed 用于对文本进行流式文本编辑和转换的工具 启动服务 启动服务操作 命令 说明 systemd systemctl start 启动指定服务，例如 systemctl start service_name service service 启动指定服务，例如 service service_name start linux系统的文件结构 Linux根目录下各目录 说明 /bin 二进制文件，系统常规命令 /boot 系统启动分区，系统启动时读取的文件 /dev 设备文件 /etc 大多数配置文件 /home 普通用户的家目录 /lib 32位函数库 /lib64 64位库 /media 手动临时挂载点 /mnt 手动临时挂载点 /opt 第三方软件安装位置 /proc 进程信息及硬件信息 /root 临时设备的默认挂载点 /run 系统运行时数据 /sbin 系统管理命令 /srv 数据 /var 可变数据（例如日志、邮件等） /sys 内核相关信息 /tmp 临时文件 /usr 用户相关设定 一些常见的文件位置 文件/目录 位置 /etc/passwd 包含系统上所有用户的基本信息 /etc/shadow 包含系统上所有用户的加密密码 /etc/group 包含系统上所有用户组的信息 /etc/hostname 包含主机名 /etc/hosts 包含IP地址和主机名的映射 /etc/resolv.conf 包含DNS解析器的配置信息 /etc/fstab 包含文件系统挂载信息 /etc/ssh/sshd_config SSH服务器的配置文件 /etc/profile 用户的全局Shell配置文件 /var/log 包含系统日志文件的目录 /var/spool/mail 包含用户邮件的目录 /var/run 包含系统运行时的临时文件 /var/www/html Web服务器的根目录（通常是Apache或Nginx） /usr/bin 包含大多数用户可执行文件的目录 /usr/sbin 包含系统管理员可执行文件的目录 /usr/lib 包含大多数系统库的目录 /usr/local/bin 包含用户安装的软件可执行文件的目录 /usr/local/lib 包含用户安装的软件库的目录 参考： https://blog.csdn.net/m0_46422300/article/details/104645072 https://www.ruanyifeng.com/blog/developer/","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/tags/Linux/"}]},{"title":"可执行文件报错：“No such file or directory”","slug":"文件不存在","date":"2024-03-20T11:24:41.000Z","updated":"2024-03-20T11:36:56.093Z","comments":true,"path":"2024/03/20/文件不存在/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/20/%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8/","excerpt":"","text":"问题描述：linux系统被入侵后，之前的一个可执行文件，现在无法运行了。很奇怪输入命令报错 1No such file or directory 重装一些依赖文件 1apt-get install lsb-core 安装后恢复正常 参考： https://www.jianshu.com/p/61f4d7385762","categories":[],"tags":[]},{"title":"nfs","slug":"nfs","date":"2024-03-18T05:38:04.000Z","updated":"2024-03-18T05:40:51.017Z","comments":true,"path":"2024/03/18/nfs/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/18/nfs/","excerpt":"","text":"NFS服务器的启动与停止 启动NFS服务器 需要启动portmap和nfs两个服务，并且portmap一定要先于nfs启动; $service portmap start 或者 $/etc/init.d/portmap start $service nfs start 或者 $/etc/init.d/nfs start 如果需要重新启动NFS服务，执行命令： $service nfs restart 查看NFS服务当前的状态，执行命令: $service nfs status NFS的资源共享配置/etc/exports文件 参考：https://blog.csdn.net/weixin_42400980/article/details/80596204","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"谷歌两步验证","slug":"谷歌两步验证","date":"2024-03-15T13:57:15.000Z","updated":"2024-03-15T14:10:13.050Z","comments":true,"path":"2024/03/15/谷歌两步验证/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/15/%E8%B0%B7%E6%AD%8C%E4%B8%A4%E6%AD%A5%E9%AA%8C%E8%AF%81/","excerpt":"","text":"谷歌二次登录验证 – 安全防护 Ubuntu 安装google-authenticator sudo apt install libpam-google-authenticator 修改配置文件echo &quot;auth required pam_google_authenticator.so&quot; &gt;&gt; /etc/pam.d/sshd sed -i 's/^ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config 重启sshd，完成配置systemctl restart sshd 对个人用户，进入主目录下执行 google-authenticator,生成验证二维码 下载谷歌authrnticator绑定二维码","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"linux病毒检查","slug":"linux病毒检查","date":"2024-03-15T02:55:35.000Z","updated":"2024-03-15T03:13:35.283Z","comments":true,"path":"2024/03/15/linux病毒检查/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/15/linux%E7%97%85%E6%AF%92%E6%A3%80%E6%9F%A5/","excerpt":"","text":"chkrootkit 轻量级软件特点：检测系统命令是否正常这是一个轻量级程序，这意味着它不会影响系统性能。它还可以检测各种其他恶意软件和木马，如后门、TinyNDS 等。 安装 sudo apt install chkrootkit 使用 sudo chkrootkit not infected 表示未感染 infected 为感染 clamav 简介：ClamAV 是一款开源防病毒软件，可检测病毒、恶意软件、特洛伊木马和其他威胁，它也免费提供，这使其成为 Linux 上最好的防病毒软件之一。特点：ClamAV 具有命令行扫描程序，这意味着它可以扫描主要文件类型中的蠕虫、病毒和特洛伊木马。为确保安全并保持最新状态，病毒库一天会更新多次。它具有对不同存档格式的内置支持，包括 Zip、OLE2、SIS、Dmg、RAR、BinHex、Gzip、Tar、Bzip2、、Cabinet、CHM 等 安装 sudo apt-get install clamav 使用 更新病毒库freshclam 启动服务 sudo systemctl start clamd@scan sudo systemctl enable clamd@scan 参考： https://zhuanlan.zhihu.com/p/586992717 https://zhuanlan.zhihu.com/p/514221945 https://zhuanlan.zhihu.com/p/266731354","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"/etc/passwd文件误删除","slug":"passwd误删除","date":"2024-03-14T10:30:45.000Z","updated":"2024-03-15T03:12:29.358Z","comments":true,"path":"2024/03/14/passwd误删除/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/14/passwd%E8%AF%AF%E5%88%A0%E9%99%A4/","excerpt":"","text":"/etc/passwd文件误删除 不要关机重启，有备份文件。 /etc/passwd- 参考备份文件恢复 参考网址： https://blog.csdn.net/zheng_weichao/article/details/109264080 https://www.linuxprobe.com/explain-etc-passwd.html","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"服务器被入侵","slug":"服务器","date":"2024-03-14T04:58:31.000Z","updated":"2024-03-15T03:12:22.735Z","comments":true,"path":"2024/03/14/服务器/","link":"","permalink":"https://wangzhangyu.github.io/2024/03/14/%E6%9C%8D%E5%8A%A1%E5%99%A8/","excerpt":"","text":"服务器被入侵的几种端倪 登录日志被篡改或删除使用lastb，last查看日志，发现日志是空的 lsattr，chattr命令失效，一般是被黑客篡改，移动并重命名。 root下的免密配置无法删除解决方法，下载原始的.c文件，重新编译执行 下载chattr.c文件，https://github.com/posborne/linux-programming-interface-exercises/blob/master/15-file-attributes/chattr.c 编译chattr.c cc chattr.c 生成a.out文件重命名文件参考： https://blog.csdn.net/JunyouYH/article/details/117064066 top，nvidia-smi查看，CPU或者GPU被不明程序长时间占用基本上是被挖矿了，可以查看定时任务看看有没有异常，crontab -l","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"Tensorboard","slug":"tensorboard","date":"2023-08-01T08:08:12.000Z","updated":"2023-08-01T08:10:43.749Z","comments":true,"path":"2023/08/01/tensorboard/","link":"","permalink":"https://wangzhangyu.github.io/2023/08/01/tensorboard/","excerpt":"","text":"ref: https://zhuanlan.zhihu.com/p/471198169 功能 TensorBoard 是一组用于数据可视化的工具。它包含在流行的开源机器学习库 Tensorflow 中。TensorBoard 的主要功能包括： 可视化模型的网络架构 跟踪模型指标，如损失和准确性等 检查机器学习工作流程中权重、偏差和其他组件的直方图 显示非表格数据，包括图像、文本和音频 将高维嵌入投影到低维空间 安装 使用conda进行Python包管理。安装指令 1conda install tensorboard 对于pytorch用户来说，还需安装TensorBoardX 1conda install tensorboardx 需要注意的是，TensorBoardX只是TensorBoard的一个前端，只支持记录功能，要进行可视化必须安装TensorBoard。 本地使用 要启动 TensorBoard，打开终端或命令提示符并运行： 1tensorboard --logdir=&lt;directory_name&gt; 将 directory_name 标记替换为保存数据的目录。 默认是“logs”。 在 Jupyter Notebooks 中使用 TensorBoard 如果想在 Jupyter Notebooks 中使用 TensorBoard，可以使用以下命令： 1%load_ext tensorboard 运行这行代码将加载 TensorBoard并允许我们将其用于可视化。 加载扩展后，我们现在可以启动 TensorBoard： 1%tensorboard --logdir logs 远程使用 使用远程服务器，没有浏览器也没有可视化桌面，那怎么才能使用TensorBoard呢？ 我们可以通过SSH端口转发，将远程端口映射到本地端口，命令如： 1ssh -L 16007:127.0.0.1:6007 username@serverip 其中，16007是本地想用的端口，6007是远程端口（TensorBoard所用端口），username和serverip为用户名和服务器ip地址。远程服务器中找到tensorboard所在目录并运行 1tensorboard --logdir ./tensorboard --port 6007 然后，打开本地浏览器，输入http://127.0.0.1:16007/就可以成功访问了。 另一种方法 1tensorboard --logdir logs --bind_all –bind_all的作用是to expose to the network","categories":[{"name":"python","slug":"python","permalink":"https://wangzhangyu.github.io/categories/python/"}],"tags":[]},{"title":"数据下载","slug":"download-web","date":"2023-08-01T08:03:15.000Z","updated":"2023-08-03T03:04:55.958Z","comments":true,"path":"2023/08/01/download-web/","link":"","permalink":"https://wangzhangyu.github.io/2023/08/01/download-web/","excerpt":"","text":"ustc 地震学算法与程序 https://seismo.training.ustc.edu.cn/programme/list.htm Ubuntu系统 Ubuntu下载链接：http://releases.ubuntu.com/ 旧版下载链接：http://old-releases.ubuntu.com/releases/","categories":[],"tags":[]},{"title":"Hexon -- 管理hexo的GUI工具","slug":"test","date":"2023-07-30T07:51:03.505Z","updated":"2023-08-01T07:33:23.522Z","comments":true,"path":"2023/07/30/test/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/30/test/","excerpt":"","text":"Hexon is a GUI for hexo with git, run commands and manage content for you. 下载链接：https://github.com/gethexon/hexon 界面清爽 可移植 部署迅速","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://wangzhangyu.github.io/tags/blog/"}]},{"title":"scp传输文件如何设置nohup后台运行？","slug":"scp","date":"2023-07-29T05:51:36.000Z","updated":"2023-07-29T06:10:07.312Z","comments":true,"path":"2023/07/29/scp/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/29/scp/","excerpt":"","text":"已经配置了ssh免密登录 ssh免密登录，scp也是免密的用scp传输文件时可以直接在命令前加nohup，命令后加&amp; nohup scp -r *** host:ip &amp; 未配置免密登录 Linux后台任务管理 ：jobs、fg、bg、kill、ps、nohup、disown、&amp; CTRL + C ：终止程序运行 CTRL + Z ：程序暂停运行 正常运行命令： 可以是scp，也可以是其他任何需要执行的命令 scp -r *** host:ip 此时程序的执行状态是在台前 暂停任务 键盘输入CTRL + Z，暂停任务 查看jobs jobs bg将其放入后台 bg %1 disown -h 忽略任务的HUP信号 disown -h %1 检查 关闭session，新建会话 ps -ef|grep scp 参考link1,link2","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"macbook的一些配置和实用插件","slug":"macbook-plug","date":"2023-07-28T10:00:50.360Z","updated":"2024-03-24T10:31:12.153Z","comments":true,"path":"2023/07/28/macbook-plug/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/28/macbook-plug/","excerpt":"","text":"鼠标插件 文献管理 文件下载 新建文件 解压文件 软件卸载 分屏软件 好用的终端软件 ssh 免密登录配置 多设备同步 写markdown 码代码 触发角设置 电源 其他 影音 鼠标插件 mac鼠标与windows的鼠标滑动指令相反，可用一些插件来帮助实现windows模式 mos mac mouse fix 文献管理 Zotero+webdav Zotero Teracloud （日本，墙内） 文件下载 qBittorrent 简单易用的跨平台BT，PT客户端 新建文件 mac没有新建文件的命令，可以使用第三方插件来完成 超级右键lite 永久免费版本: 可以右键新建word文档 解压文件 Mac上好用的解压软件 The Unarchiver 软件卸载 听说这一款挺有效果，但是测试仍然有残留。 比如之前装了罗技的鼠标管理软件Logitech Options，但是可能软件的适配有问题，导致CPU占用过大。我用Appcleaner卸载这个软件，但是发现配置文件仍然存在。 Appcleaner：彻底清除app及其残留文件 分屏软件 Rectangle：拖拽窗口自动分屏 好用的终端软件 iterm ssh 免密登录配置 参考link ssh-keygen -t rsa chmod 600 ~/.ssh/id_rsa.pub ssh-copy-id user@ip.com touch ~/.ssh/config 12345678910#自定义主机名称，写上好记的就行了。Host goodjob#SSH连接的地址，IP或者是域名HostName ip.cn#SSH远程登录的名称User user#SSH的端口默认是22Port 22#指向私钥的位置,这里写你自己的地址。IdentityFile ~/.ssh/id_rsa 多设备同步 坚果云 cloudmounter+阿里云盘/夸克网盘 写markdown Typora 码代码 VS code Sublime Text 触发角设置 只设置右下角为触发角，当鼠标滑到右下角，触发返回桌面。 电源 macbook使用快一年了，电池健康度剩下93%。这和使用习惯有关，平时大部分时间插着电源使用让电池一直保持满电状态是不好的。锂电池的电池容量维持在30%～80%对电池健康最好，平时不需要充满电。 Aldente 当电池电量达到设定的限值时关闭充电，当电量低于设定的限值时，启动充电。 其他 grammarly: 语法改错 blackhole: 录制屏幕的时候可以录制电脑自己输出的声音 影音 vidhub+阿里云盘/夸克网盘 https://zh.okaapps.com/blog/6544cbf9948009206c562b9f https://alist.nn.ci/zh/faq/howto.html 下载alist https://github.com/alist-org/alist/releases 安装alist https://www.cnblogs.com/doubleuch/p/16931230.html","categories":[{"name":"macbook","slug":"macbook","permalink":"https://wangzhangyu.github.io/categories/macbook/"}],"tags":[]},{"title":"云服务器搭建个人网站","slug":"云服务器搭建个人网站","date":"2023-07-25T08:29:10.000Z","updated":"2023-08-01T08:03:50.480Z","comments":true,"path":"2023/07/25/云服务器搭建个人网站/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/25/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/","excerpt":"","text":"个人服务器建网站流程一时兴起搭建个人网页，记录一下整个流程… 购买云服务器： 腾讯云 CPU: 2核 内存: 2GB 价格：首年有优惠 安装wordpress 系统：Linux Ubuntu 20.04 LTS 网站架构：Apache2 + Php + MySQL + WordPress (6.0.2) 腾讯云服务器提供极速建站，可选–“应用镜像”-&gt;“Wordpress”,非常方便但我还是选择从零开始安装，可以参考https://zhuanlan.zhihu.com/p/270230445 购买域名 腾讯云域名申请 域名备案 域名解析 绑定域名和云服务器公网IP 使用了快一年，续费云主机挺贵的，一年要500多。","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://wangzhangyu.github.io/tags/blog/"}]},{"title":"gitalk 第三方评论","slug":"gitalk","date":"2023-07-20T11:42:20.000Z","updated":"2023-07-28T11:29:42.168Z","comments":true,"path":"2023/07/20/gitalk/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/20/gitalk/","excerpt":"","text":"使用Gitalk的常见问题 问题： 未找到相关的 Issues 进行评论，请联系@作者初始化创建 打开文章页面登录作者github账号 问题： 403错误或network错误 代理失效 原因是：主题模版中的cors-anywhere反向代理已不支持直接使用，Gitalk的默认proxy为 1Default: https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token. cloudflare 参考文章： https://blog.csdn.net/nocodeis/article/details/117826704 借用某位博客的代理 使用文章中的方法构建的代理仍然报错network error, 应该还是代理没有设置好。 没有办法只能借用别的代理设置了，方法不是很可取，但可以临时用用。参考下边的方式 找到一个集成了Gitalk的博客 打开浏览器的开发者模式 选择network项，在filter中输入access 此时在博客的评论区中登录自己的Github账号 在Request URL栏中，选择带有https://github.com/login/oauth/access_token的地址，这串拼接出来的地址就是代理地址，可以直接加入到proxy中 现在评论功能就正常了。 ref： https://github.com/ppoffice/hexo-theme-icarus/issues/478 https://juejin.cn/post/6956892118363144229","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[]},{"title":"Hexo添加插件","slug":"comment","date":"2023-07-20T09:36:23.000Z","updated":"2024-04-09T10:32:28.929Z","comments":true,"path":"2023/07/20/comment/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/20/comment/","excerpt":"","text":"添加评论 https://wangzhangyu.github.io/2023/07/20/gitalk/ 添加相册 https://blog.csdn.net/weixin_43347550/article/details/120191200 使用更高级的markdown渲染器 https://blog.csdn.net/qq_42951560/article/details/123596899 在themes\\pure\\source\\css\\style.css文件末尾 123456789101112131415161718192021222324 .tips &#123; padding-left: 10px; background-color : rgba(52,152,219,.3); border-left:4px solid rgb(52,152,219); color: darken(rgb(52,152,219),20%);&#125;.success &#123; padding-left: 10px; background-color :rgba(46,204,113,.3); border-left :4px solid rgb(46,204,113); color: darken(rgb(46,204,113),20%);&#125;.warning &#123; padding-left: 10px; background-color :rgba(241,196,15,.3); border-left :4px solid rgb(241,196,15); color: darken(rgb(241,196,15),20%);&#125;.danger &#123; padding-left: 10px; background-color :rgba(231,76,60,.3); border-left: 4px solid rgb(231,76,60); color: darken(rgb(231,76,60),20%);&#125; 提示 这是一个提示 注意 这是一个警告 警告 这是一个危险信号 成功 这是一个成功信号 12345678910111213141516171819::: tips**提示**这是一个提示:::::: warning**注意**这是一个警告:::::: danger**警告**这是一个危险信号:::::: success**成功**这是一个成功信号::: 📡 当发现安装后插件不起作用时，清除一下hexo的缓存 1hexo clean","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://wangzhangyu.github.io/tags/blog/"}]},{"title":"Hexo博客主题","slug":"hexo博客主题","date":"2023-07-19T05:19:19.691Z","updated":"2024-03-23T05:30:34.404Z","comments":true,"path":"2023/07/19/hexo博客主题/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/19/hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98/","excerpt":"","text":"博客主题 hexo-theme-pure 下载链接 https://github.com/cofess/hexo-theme-pure Hexo个人博客部署到Github 参考 git, hexo and Node.js 写作搭档 hexo+hexon+typora hexon管理博客的开源代码","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://wangzhangyu.github.io/tags/blog/"}]},{"title":"Markdown语法","slug":"Markdown语法","date":"2023-07-18T17:41:30.743Z","updated":"2023-07-28T11:11:41.656Z","comments":true,"path":"2023/07/19/Markdown语法/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/19/Markdown%E8%AF%AD%E6%B3%95/","excerpt":"","text":"自动生成目录 甘特图 自动生成目录 CSDN中 1@[TOC](linux网络配置 ) hexo 中 1&lt;!-- toc --&gt; 甘特图","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://wangzhangyu.github.io/tags/markdown/"}]},{"title":"Linux服务器运维","slug":"Linux服务器运维","date":"2023-07-18T17:09:50.000Z","updated":"2023-07-27T17:09:52.000Z","comments":true,"path":"2023/07/19/Linux服务器运维/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/19/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/","excerpt":"","text":"新服务器部署 服务器基本信息 dell服务器开机挂载 关机与重启 修改root密码 node100 集群服务器开关机： 开机顺序： 关机顺序：（倒着来） 服务器安全 tomoplus图像显示问题 tomoplus license问题 创建账户 更改文件夹所有者、更改组 ssh问题 GPU: 服务器显存占用但是找不到pid GPU nvidia-smi tmp 空间不足 Ubuntu: 用户无法自动加载 .bashrc的问题 设置网络代理 VPN 服务器换ip 学习链接 gantt dateFormat YYYY-MM-DD title 服务器购买 section 现有服务器 tomo 01 :done, des1, 2015-01-06,2020-12-04 tomo 02 :done, des2, 2015-01-06,2020-12-04 tomo 03 : des3, 2015-01-06,2022-12-04 amax : des4, 2019-01-06,2022-12-04 node100 : des5,2019-01-06,2022-12-04 dell : des6,2020-01-06,2022-12-04 新服务器部署 若采购新服务器，需要对home做单独分区，安装磁盘限额（可限制5G）。避免no sapce出现 服务器基本信息 密码更新日期：2022/12/4 服务器 IP root密码 用途 属性 dell ******* ******* GPU 4块A100(40G左右显存) amax ******* ******* GPU 8块 GeForce GTX 1080（11G左右显存） node100 ******* ******* CPU 8个计算节点 tomo 03 ******* ******* CPU 服务器 dell服务器开机挂载 data2挂载在amax上，dell服务器通过访问amax来共享data2的数据。所以dell服务器正常使用的前提是amax正常。dell服务器每次开机需要重新挂载data2，挂载命令 A100挂载data3(node100服务器的存储)和data2 12mount -t nfs ***.***.***.***:/public/home /data3mount -t nfs ***.***.***.***:/data2 /data2/ ***分别是node100的IP，amax的IP Amax挂载A100上的文件 1mount -t nfs ***.***.***.***:/mnt/SCQR_data1 /mnt/SCQR_data1 ***为dell的IP 或者修改/etc/fstab 12345678910111213141516(base) wangzy@dell:~$ cat /etc/fstab# /etc/fstab: static file system information.## Use &#x27;blkid&#x27; to print the universally unique identifier for a# device; this may be used with UUID= as a more robust way to name devices# that works even if disks are added and removed. See fstab(5).## &lt;file system&gt; &lt;mount point&gt; &lt;type&gt; &lt;options&gt; &lt;dump&gt; &lt;pass&gt;# / was on /dev/sda3 during installationUUID=6df9bb4a-766b-4ab1-92da-bad6179f800a / ext4 errors=remount-ro 0 1# /boot/efi was on /dev/sda1 during installationUUID=184B-1142 /boot/efi vfat umask=0077 0 1# swap was on /dev/sda2 during installationUUID=2e147d59-66aa-491e-a878-1e77aed61cce none swap sw 0 0192.168.0.3:/data2 /data2 nfs defaults 1 1 如果共享磁盘没有挂载，执行/etc/rc.local link 关机与重启 关机 poweroff, shutdown -h +1 重启 reboot, shutdown -r +1 对于集群服务器，可能需要同步 clusconf --sync-do /etc/rc.local 修改root密码 passwd root(直接登录root修改) sudo passwd（利用sudo账户修改） 忘记密码（重启服务器，单用户模式修改）： https://cloud.tencent.com/developer/article/1843568 http://m.blog.chinaunix.net/ui-21209618-id-4738916.html node100 集群服务器开关机： 开机顺序： 1.IB交换机（一般不用管） 2.网络交换机（一般不用管） 3.存储服务器 4.管理节点 5.计算节点 关机顺序：（倒着来） 1.计算节点 2.管理节点 3.存储服务器 4.网络交换机（一般不用管） 5.IB交换机（一般不用管） 服务器安全 fail2ban 安装fail2ban sudo apt install fail2ban 设置fail2ban配置策略sudo vi /etc/fail2ban/jail.local检查 Jails状况：sudo fail2ban-client status sshd封禁IP:sudo fail2ban-client set sshd banip 23.34.45.56 解禁的IP:sudo fail2ban-client set sshd unbanip 23.34.45.56 重启服务 sudo systemctl restart fail2ban 停止服务 sudo systemctl stop fail2ban tomoplus图像显示问题 ssh 连接是加X或Y ssh -Y node1 ssh -X node1 运行xterm查看是否有图形界面弹出，如果没有，说明本次连接的shell不能显示图像 1[wangzy@node100 ~]$ xterm &amp; 解决方法：一般重启终端（如：重启Mobaxterm） tomoplus license问题 tomoplus激活不需要root，任何普通账户都已运行下边的激活操作选择当年的Tomoplus版本*2022.lic 123456789[wangzy@node100 ~]$ cd ~[wangzy@node100 ~]$ cat .flexlmrcGEOTOMO_LICENSE_FILE=/public/software/Geotomo_all_versions/GeoTomo64_v63_Auto/GeoTomo64jre18/TomoPlus/Tomo3D/../../license:/public/software/Geotomo_all_versions/GeoTomo64_v63_Auto/GeoTomo64/license[wangzy@node100 ~]$ cd /public/software/Geotomo_all_versions/GeoTomo64_v63_Auto/GeoTomo64jre18/TomoPlus/Tomo3D/../../license[wangzy@node100 license]$ lsgeotomo license.v11.10 lmdown lmreread lmutil tomoplus_6pt3_vecon_4pt5_velmap_geothrust_4pt1_linux_USTC_node100_e8611f3264f8_31dec2021.liclicense.old lmdiag lmgrd lmstat README.txt tomoplus_6pt4_vecon_4pt5_velmap_geothrust_4pt1_linux_USTC_node100_e8611f3264f8_31dec2022.lic[wangzy@node100 license]$ ./lmgrd -c tomoplus_6pt4_vecon_4pt5_velmap_geothrust_4pt1_linux_USTC_node100_e8611f3264f8_31dec2022.lic 如果仍有问题，先关闭tomoplus守护进程，重新激活 12[wangzy@node100 license]$ ./lmdown -c tomoplus_6pt4_vecon_4pt5_velmap_geothrust_4pt1_linux_USTC_node100_e8611f3264f8_31dec2022.lic[wangzy@node100 license]$ ./lmgrd -c tomoplus_6pt4_vecon_4pt5_velmap_geothrust_4pt1_linux_USTC_node100_e8611f3264f8_31dec2022.lic 如果重启不成功，遇到 Permission denied的情况，直接删掉文件/var/tmp/lockgeotomo 创建账户 单节点服务器：dell, amax, tomo 03 adduser XXX（创建用户） userdel XXX 集群服务器： node100 clusconf -au XXX（创建用户） clusconf -du XXX (删除用户) 更改文件夹所有者、更改组 更改文件夹所有者 chown wangzy –R wangzy/ 更改文件夹所有组 chgrp users –R wangzy ssh问题 查看一下home目录下有没有 .ssh 文件夹， 用 ls -al查看 (注：linux系统中以“.”开头的是隐藏文件) 如果没有，就自己建立一个 ： mkdir .ssh cd然后进入 .ssh，依次运行： 1 ssh-keygen （命令后一直敲空格就行, 会生成几个文件） 2 cat id_dsa.pub &gt;&gt; authorized_keys 3 退出.ssh 至你的home， 运行 chmod -R 755 .ssh 4 进入.ssh， chmod 600 * 常见的权限表示形式: -rw------- (600) 只有拥有者有读写权限。 -rw-r–r-- (644) 只有拥有者有读写权限；而属组用户和其他用户只有读权限。 -rwx------ (700) 只有拥有者有读、写、执行权限。 -rwxr-xr-x (755) 拥有者有读、写、执行权限；而属组用户和其他用户只有读、执行权限。 -rwx–x–x (711) 拥有者有读、写、执行权限；而属组用户和其他用户只有执行权限。 -rw-rw-rw- (666) 所有用户都有文件读、写权限。 -rwxrwxrwx (777) 所有用户都有读、写、执行权限。 service sshd restart GPU: 服务器显存占用但是找不到pid fuser -v /dev/nvidia* fuser -k /dev/nvidia* Sudo 账户下操作 GPU nvidia-smi 12345678910111213141516171819202122232425262728293031323334353637383940414243(base) wangzy@dell:~$ nvidia-smiTue Dec 6 15:40:01 2022+-----------------------------------------------------------------------------+| NVIDIA-SMI 515.86.01 Driver Version: 515.86.01 CUDA Version: 11.7 ||-------------------------------+----------------------+----------------------+| GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC || Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. || | | MIG M. ||===============================+======================+======================|| 0 NVIDIA A100-PCI... Off | 00000000:17:00.0 Off | 0 || N/A 34C P0 34W / 250W | 4MiB / 40960MiB | 0% Default || | | Disabled |+-------------------------------+----------------------+----------------------+| 1 NVIDIA A100-PCI... Off | 00000000:65:00.0 Off | 0 || N/A 34C P0 33W / 250W | 4MiB / 40960MiB | 0% Default || | | Disabled |+-------------------------------+----------------------+----------------------+| 2 NVIDIA A100-PCI... Off | 00000000:CA:00.0 Off | 0 || N/A 35C P0 38W / 250W | 4MiB / 40960MiB | 0% Default || | | Disabled |+-------------------------------+----------------------+----------------------+| 3 NVIDIA A100-PCI... Off | 00000000:E3:00.0 Off | 0 || N/A 34C P0 35W / 250W | 4MiB / 40960MiB | 0% Default || | | Disabled |+-------------------------------+----------------------+----------------------++-----------------------------------------------------------------------------+| Processes: || GPU GI CI PID Type Process name GPU Memory || ID ID Usage ||=============================================================================|| 0 N/A N/A 3413 G /usr/lib/xorg/Xorg 4MiB || 1 N/A N/A 3413 G /usr/lib/xorg/Xorg 4MiB || 2 N/A N/A 3413 G /usr/lib/xorg/Xorg 4MiB || 3 N/A N/A 3413 G /usr/lib/xorg/Xorg 4MiB |+-----------------------------------------------------------------------------+(base) wangzy@dell:~$ nvcc -Vnvcc: NVIDIA (R) Cuda compiler driverCopyright (c) 2005-2022 NVIDIA CorporationBuilt on Wed_Jun__8_16:49:14_PDT_2022Cuda compilation tools, release 11.7, V11.7.99Build cuda_11.7.r11.7/compiler.31442593_0 tmp 空间不足 原因：可能读取大量文件（IO需求很大），每打开一个文件，/tmp都会有对文件的缓存 解决方案： 减少大量文件读取 删除/tmp下的部分内容（容易误删） 增大/tmp空间，拓展/tmp Link1 Link2 Ubuntu: 用户无法自动加载 .bashrc的问题 解决办法：在~/.bash_profile里添加上： if [ -f ~/.bashrc ] ; then source ~/.bashrc fi 设置网络代理 VPN IKUUU VPN Google helper 如何在“终端”设置网络代理？设置代理 export http_proxy=http://localhost:7890 export https_proxy=http://localhost:7890 取消代理 unset http_proxy unset https_proxy 服务器换ip 科大的DNS: 202.38.64.1 202.38.64.7 用笔记本电脑连接网线测试 网口是否有问题，连接网络通，获取ip 常用命令链接： https://www.runoob.com/linux/linux-command-manual.html 科大BBS Linux系统： http://bbs.ustc.edu.cn/cgi/bbsdoc?board=Linux 清华水木社区Linux系统与应用： http://www.newsmth.net/bbsdoc.php?board=LinuxApp 清华水木社区Linux开发与高级讨论： http://www.newsmth.net/bbsdoc.php?board=LinuxDev ChinaUnix：http://www.chinaunix.net/ CSDN：https://bbs.csdn.net/forums/Linux 鸟哥的Linux私房菜：http://www.runoob.com/linux/linux-command-manual.html Linux 常用软件推荐集合汇总： http://www.it610.com/article/1929114.htm Linux指令大全： http://www.runoob.com/linux/linux-command-manual.html 李会民 (中国科大超算中心) Linux操作系统使用基础: http://hmli.ustc.edu.cn/ 关于Linux运维常见故障排查和处理的33个技巧汇总 https://blog.csdn.net/u011001084/article/details/79419721","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[]},{"title":"Python Folium 绘制交互式地图","slug":"Python Folium","date":"2023-07-18T10:09:22.000Z","updated":"2023-07-18T10:09:26.000Z","comments":true,"path":"2023/07/18/Python Folium/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/18/Python%20Folium/","excerpt":"","text":"https://github.com/WangZhangyu/Interactive_map Folium folium是python非常好用的交互式地图工具包，今天我们用folium来绘制简单精美的地震分布热力图。我们选择川滇部分地区，蓝色方框圈定的区域进行绘制。橙色圆圈代表的是AETA 观测台站，黑色圆圈代表的是地震（ML3.5以上），黑色圆圈越大，震级越大。绘制地震分布的热力图，我们可以非常清晰的看到地震的集中分布情况。 绘制结果以.html的格式保存，我们可以对地图随意的放大缩小，当鼠标停留在黑色圆圈（地震）上时，地图会显示地震的发震时间和震级信息；当鼠标停留在橙色圆圈（台站）上时，会显示对应的台站名称。 安装Folium 库 1pip install folium 导入必要的库 1234import foliumimport pandas as pdimport webbrowserfrom folium.plugins import HeatMap 加载AETA台站的信息并显示 12345678910111213cdata = pd.read_csv(&#x27;StationInfo.csv&#x27;)for lat, lon,label in zip(cdata.Latitude, cdata.Longitude, cdata.Title): incidents.add_child( folium.CircleMarker( [lat, lon], radius=7, color=&#x27;yellow&#x27;, fill=True, fill_color=&#x27;red&#x27;, fill_opacity=0.4, tooltip=label ) ) 加载并绘制地震目录信息 12345678910111213141516eq = pd.read_csv(&#x27;eqlst.csv&#x27;)for lat, lon, mag, time in zip(eq.Latitude, eq.Longitude, eq.Magnitude,eq.Time): incidents.add_child([图片上传中...(catalog.jpg-6f9441-1618157345666-0)] folium.CircleMarker( [lat, lon], radius=(mag-3)*4, color=&#x27;black&#x27;, fill=True, fill_color=&#x27;black&#x27;, fill_opacity=0.5, weight = 0.001, stroke = False, tooltip= &#x27;%s ML %.f&#x27; % (time,mag) ) ) 绘制地震分布热力图 12heatdata = eq[[&#x27;Latitude&#x27;,&#x27;Longitude&#x27;,&#x27;Magnitude&#x27;]].values.tolist()HeatMap(heatdata).add_to(incidents) 完整代码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&quot;&quot;&quot;Created on Sun Apr 11 20:40:32 2021@author: Zhangyu Wang&quot;&quot;&quot;import foliumimport pandas as pdimport webbrowserfrom folium.plugins import HeatMap# Chuandain latitude and longitudelatitude = 28longitude = 102.5# instantiate a feature group for the incidents in the dataframeincidents = folium.map.FeatureGroup()# read stations cdata = pd.read_csv(&#x27;StationInfo.csv&#x27;)for lat, lon,label in zip(cdata.Latitude, cdata.Longitude, cdata.Title): incidents.add_child( folium.CircleMarker( [lat, lon], radius=7, color=&#x27;yellow&#x27;, fill=True, fill_color=&#x27;red&#x27;, fill_opacity=0.4, tooltip=label ) ) # read catalogeq = pd.read_csv(&#x27;eqlst.csv&#x27;)for lat, lon, mag, time in zip(eq.Latitude, eq.Longitude, eq.Magnitude,eq.Time): incidents.add_child( folium.CircleMarker( [lat, lon], radius=(mag-3)*4, color=&#x27;black&#x27;, fill=True, fill_color=&#x27;black&#x27;, fill_opacity=0.5, weight = 0.001, stroke = False, tooltip= &#x27;%s ML %.f&#x27; % (time,mag) ) ) # catalog heatmapheatdata = eq[[&#x27;Latitude&#x27;,&#x27;Longitude&#x27;,&#x27;Magnitude&#x27;]].values.tolist()HeatMap(heatdata).add_to(incidents)# add a single earthquakeincidents.add_child(folium.Marker([28.9, 103.3],icon=folium.Icon(color=&#x27;red&#x27;), tooltip=&#x27;M = 4.0&#x27;))# add area borderls = folium.PolyLine(locations=[[22,98],[22,107],[34,107],[34,98],[22,98]],color=&#x27;blue&#x27;)ls.add_to(incidents)# add incidents to mapmy_map = folium.Map(location=[latitude, longitude], zoom_start=6)my_map.add_child(incidents)# add latitude and longitude in the map when clickmy_map.add_child(folium.LatLngPopup())# save mapmy_map.save(&#x27;Chuandian_aeta.html&#x27;)webbrowser.open(&#x27;Chuandian_aeta.html&#x27;)","categories":[{"name":"python","slug":"python","permalink":"https://wangzhangyu.github.io/categories/python/"}],"tags":[]},{"title":"linux网络配置","slug":"linux网络配置","date":"2023-07-18T10:05:41.000Z","updated":"2023-07-18T10:05:47.000Z","comments":true,"path":"2023/07/18/linux网络配置/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/18/linux%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/","excerpt":"","text":"1. Interfaces配置 2. Ubuntu 桌面GUI界面配置 3. Netplan 4. 带界面的命令行 nmtui tips 参考 可以通过命令行，GUI界面等配置工具 1. Interfaces配置 /etc/network/interfaces 文件里配置 123456auto enp10s0iface enp10s0 inet staticaddress 192.168.1.162netmask 255.255.255.0gateway 192.168.1.100dns-nameservers 1.0.0.1,1.1.1.1 保存并关闭文件。使用命令重启网络 带systemd的发行版 1sudo systemctl restart networking 不带systemd的老版本 1sudo /etc/init.d/networking restart 2. Ubuntu 桌面GUI界面配置 系统-网络配置-点击 3. Netplan Netplan 是一个在某些 Linux 发行版上配置网络连接的命令行工具。Netplan 使用 YAML 描述文件来配置网络接口，然后，通过这些描述为任何给定的呈现工具生成必要的配置选项。 Linux 上使用 Netplan 配置静态 IP 地址和 DHCP 地址 /etc/netplan 文件夹下存放 Netplan 的新配置文件 /etc/netplan/01-netcfg.yaml 12345678910111213141516171819network: Version: 2 Renderer: networkd ethernets: DEVICE_NAME: Dhcp4: yes/no Addresses: [IP/NETMASK] Gateway: GATEWAY Nameservers: Addresses: [NAMESERVER, NAMESERVER] 其中： DEVICE_NAME 是需要配置设备的实际名称。 yes/ no 代表是否启用 dhcp4（动态获取） dhcp6 是否打开 IPv6 的 dhcp。 IP 是设备的 IP 地址。 NETMASK 是 IP 地址的掩码。 GATEWAY 是网关的地址。 NAMESERVER 是由逗号分开的 DNS 服务器列表样例： 12345678910111213141516171819network: version: 2 renderer: networkd ethernets: ens33: dhcp4: no addresses: [192.168.1.230/24] gateway4: 192.168.1.254 nameservers: addresses: [8.8.4.4,8.8.8.8] 掩码已经不用再配置为 255.255.255.0 这种形式。取而代之的是，掩码已被添加进了 IP 地址中。 测试配置 sudo netplan try 应用配置 sudo netplan apply 在 Netplan 上使用 DHCP 123456789101112131415network: version: 2 renderer: networkd ethernets: ens5: Addresses: [] dhcp4: true optional: true 此时可以使用 ifconfig 命令得到动态分配的地址，然后重新配置静态地址。 4. 带界面的命令行 nmtui 在命令行输入nmtui tips 查看网卡对应的物理端口 1ethtool -p enp10s0f0 指定对应的物理端口右侧绿灯闪烁，其他网卡灯熄灭 参考 https://blog.csdn.net/h4241778/article/details/110099003 http://t.zoukankan.com/xuliang-daydayup-p-12542746.html","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://wangzhangyu.github.io/tags/blog/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-07-18T09:44:32.957Z","updated":"2024-03-24T08:41:42.575Z","comments":true,"path":"2023/07/18/hello-world/","link":"","permalink":"https://wangzhangyu.github.io/2023/07/18/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment 常规操作： 新建草稿draft 1hexo new draft hello 此时创建了一份草稿，可以直接编辑，不会被发表。文件存储在source/_drafts文件夹下。 2.预览草稿 1hexo s 在本地浏览器打开：http://localhost:4000/ 发表草稿 1hexo publish hello 参考：https://hexo.io/zh-cn/docs/writing.html hexo在多台电脑上的更新参考：https://blog.csdn.net/K1052176873/article/details/122879462 其他方法 https://zhuanlan.zhihu.com/p/685078577","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[]}],"categories":[{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/categories/Linux/"},{"name":"macbook","slug":"macbook","permalink":"https://wangzhangyu.github.io/categories/macbook/"},{"name":"Git","slug":"Git","permalink":"https://wangzhangyu.github.io/categories/Git/"},{"name":"python","slug":"python","permalink":"https://wangzhangyu.github.io/categories/python/"},{"name":"博客搭建","slug":"博客搭建","permalink":"https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"conda","slug":"conda","permalink":"https://wangzhangyu.github.io/tags/conda/"},{"name":"alist","slug":"alist","permalink":"https://wangzhangyu.github.io/tags/alist/"},{"name":"Linux","slug":"Linux","permalink":"https://wangzhangyu.github.io/tags/Linux/"},{"name":"blog","slug":"blog","permalink":"https://wangzhangyu.github.io/tags/blog/"},{"name":"markdown","slug":"markdown","permalink":"https://wangzhangyu.github.io/tags/markdown/"}]}