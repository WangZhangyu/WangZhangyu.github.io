<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://wangzhangyu.github.io/atom.xml" rel="self"/>
  
  <link href="https://wangzhangyu.github.io/"/>
  <updated>2024-04-09T10:55:02.505Z</updated>
  <id>https://wangzhangyu.github.io/</id>
  
  <author>
    <name>Wang Zhangyu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>conda, pip</title>
    <link href="https://wangzhangyu.github.io/2024/04/09/anaconda/"/>
    <id>https://wangzhangyu.github.io/2024/04/09/anaconda/</id>
    <published>2024-04-09T08:28:32.000Z</published>
    <updated>2024-04-09T10:55:02.505Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul class="lvl-0"><li class="lvl-2"><a href="#conda%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4">Conda常用命令 😃</a></li><li class="lvl-2"><a href="#conda-%E9%95%9C%E5%83%8F%E7%AE%A1%E7%90%86">Conda 镜像管理</a><ul class="lvl-2"><li class="lvl-4"><a href="#1-%E5%91%BD%E4%BB%A4%E8%A1%8C">1. 命令行</a></li><li class="lvl-4"><a href="#2-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6~condarc">2. 配置文件~/.condarc</a></li></ul></li><li class="lvl-2"><a href="#pip-%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4">Pip 包管理器常用命令</a></li><li class="lvl-2"><a href="#pip%E7%9A%84%E6%BA%90%E7%AE%A1%E7%90%86">Pip的源管理</a><ul class="lvl-2"><li class="lvl-4"><a href="#1-%E5%91%BD%E4%BB%A4%E8%A1%8C-1">1. 命令行</a></li><li class="lvl-4"><a href="#2-pipconf%E6%96%87%E4%BB%B6">2. pip.conf文件</a></li></ul></li></ul><!-- tocstop --><h2><span id="conda常用命令">Conda常用命令 😃</span></h2><table><thead><tr><th>操作</th><th>命令</th></tr></thead><tbody><tr><td>查看虚拟环境</td><td><code>conda env list</code> <br> <code>conda info -e</code> <br> <code>conda info --envs</code></td></tr><tr><td>创建虚拟环境</td><td><code>conda create -n name python=3.9</code></td></tr><tr><td>激活虚拟环境</td><td><code>conda activate name</code></td></tr><tr><td>退出虚拟环境</td><td><code>conda deactivate</code></td></tr><tr><td>删除虚拟环境及包</td><td><code>conda remove -n name --all</code></td></tr><tr><td>导出虚拟环境配置</td><td><code>conda env export --name myenv &gt; myenv.yml</code> <br> <code>conda env create -f myenv.yml</code> <br> <code>conda list -e &gt; condalist.txt</code></td></tr><tr><td>导入安装包列表</td><td><code>conda install --yes --file condalist.txt</code></td></tr><tr><td>安装、更新、卸载包</td><td>安装：<code>conda install numpy</code> <br> 更新：<code>conda update numpy</code> <br> 卸载：<code>conda uninstall numpy</code></td></tr><tr><td>清除缓存</td><td><code>conda clean -p</code> <br> <code>conda clean -t</code> <br> <code>conda clean -y --all</code></td></tr></tbody></table><h2><span id="conda-镜像管理">Conda 镜像管理</span></h2><h3><span id="1-命令行">1. 命令行</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置清华镜像</span></span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/</span><br><span class="line"><span class="comment">#设置bioconda</span></span><br><span class="line">conda config --add channels bioconda</span><br><span class="line">conda config --add channels conda-forge</span><br><span class="line"><span class="comment">#设置搜索时显示通道地址</span></span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><p>追加conda-forge channel:<br>conda config --add channels conda-forge<br>移除conda-forge channel<br>conda config --remove channels conda-forge<br>查询当前配置中包含哪些channels<br>conda config --get channels</p><h3><span id="2-配置文件~condarc">2. 配置文件~/.condarc</span></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - https://mirrors.ustc.edu.cn/anaconda/pkgs/free</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/peterjc123/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">  - https://conda.anaconda.org/esri/linux-64/</span><br><span class="line">  - defaults</span><br><span class="line">show_channel_urls: true</span><br></pre></td></tr></table></figure><h2><span id="pip-包管理器常用命令">Pip 包管理器常用命令</span></h2><p>Pip 是 Python 包管理器，用于安装和管理 Python 包。以下是一些常用的pip命令及其说明：</p><table><thead><tr><th>操作</th><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>安装包</td><td><code>pip install package_name</code></td><td>安装指定的 Python 包</td></tr><tr><td>指定版本安装包</td><td><code>pip install package_name==version</code></td><td>安装指定版本的 Python 包</td></tr><tr><td>更新包</td><td><code>pip install --upgrade package_name</code></td><td>更新已安装的 Python 包到最新版本</td></tr><tr><td>卸载包</td><td><code>pip uninstall package_name</code></td><td>卸载指定的 Python 包</td></tr><tr><td>列出已安装的包</td><td><code>pip list</code></td><td>列出当前环境中已安装的所有 Python 包</td></tr><tr><td>搜索包</td><td><code>pip search search_term</code></td><td>在 PyPI 中搜索符合条件的 Python 包</td></tr><tr><td>查看包详细信息</td><td><code>pip show package_name</code></td><td>显示指定 Python 包的详细信息</td></tr><tr><td>列出过时的包</td><td><code>pip list --outdated</code></td><td>列出当前环境中已安装的过时 Python 包</td></tr><tr><td>升级过时的包</td><td><code>pip install --upgrade package_name</code></td><td>更新当前环境中所有过时的 Python 包</td></tr><tr><td>从文件安装多个包</td><td><code>pip install -r requirements.txt</code></td><td>从指定的文件中安装多个 Python 包</td></tr><tr><td>导出已安装的包及版本信息</td><td><code>pip freeze &gt; requirements.txt</code></td><td>导出当前环境中已安装的包及其版本信息</td></tr></tbody></table><h2><span id="pip的源管理">Pip的源管理</span></h2><h3><span id="1-命令行">1. 命令行</span></h3><p>指定安装源</p><p>pip install package_name -i <source-url><br>pip install package_name -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></source-url></p><h3><span id="2-pipconf文件">2. pip.conf文件</span></h3><p><code>~/.pip/pip.conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line"><span class="built_in">timeout</span> = 10</span><br><span class="line">index-url = http://pypi.mirrors.ustc.edu.cn/simple/</span><br><span class="line">index-index-url = http://pypi.tuna.tsinghua.edu.cn/simple/</span><br><span class="line">[install]</span><br><span class="line">trusted-host =</span><br><span class="line">　　pypi.tuna.tsinghua.edu.cn</span><br><span class="line">　　pypi.douban.com</span><br><span class="line">    pypi.mirrors.ustc.edu.cn</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://blog.csdn.net/chenxy_bwave/article/details/119996001">https://blog.csdn.net/chenxy_bwave/article/details/119996001</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/">https://mirrors.tuna.tsinghua.edu.cn/help/pypi/</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;&lt;a href=&quot;#conda%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4&quot;&gt;Conda常用命令 😃&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;lvl-</summary>
      
    
    
    
    <category term="Linux" scheme="https://wangzhangyu.github.io/categories/Linux/"/>
    
    
    <category term="conda" scheme="https://wangzhangyu.github.io/tags/conda/"/>
    
  </entry>
  
  <entry>
    <title>nohup用法</title>
    <link href="https://wangzhangyu.github.io/2024/04/08/nohup%E7%94%A8%E6%B3%95/"/>
    <id>https://wangzhangyu.github.io/2024/04/08/nohup%E7%94%A8%E6%B3%95/</id>
    <published>2024-04-08T09:01:51.000Z</published>
    <updated>2024-04-08T13:19:32.113Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul class="lvl-0"><li class="lvl-2"><a href="#sighup%E4%BF%A1%E5%8F%B7">SIGHUP信号</a></li><li class="lvl-2"><a href="#nohup-disown">nohup, disown</a></li><li class="lvl-2"><a href="#%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E5%91%BD%E4%BB%A4">后台运行命令 &amp;</a></li><li class="lvl-2"><a href="#%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91">输出重定向</a></li></ul><!-- tocstop --><p>nohup,&amp;,输出重定向</p><table><thead><tr><th>命令</th><th>用法</th><th>说明</th></tr></thead><tbody><tr><td>jobs</td><td>jobs -l</td><td>查看任务详情</td></tr><tr><td>bg</td><td>bg %工作ID</td><td>将工作ID任务调入后台运行</td></tr><tr><td>fg</td><td>fg %工作ID</td><td>将工作ID任务调入前台运行</td></tr><tr><td>kill</td><td>kill -n [ PID 或 %工作ID ]</td><td>向任务发送信号</td></tr><tr><td>&amp;</td><td>command-line &amp;</td><td>将任务立即放入后台运行</td></tr><tr><td>nohup</td><td>nohup command-line</td><td>忽视 SIGHUP 信号</td></tr><tr><td>disown</td><td>command-line disown -h 或 disown -h %工作ID</td><td>忽视 SIGHUP 信号</td></tr></tbody></table><h1><span id="sighup信号">SIGHUP信号</span></h1><p>nohup和disown会忽视SIGHUP信号</p><h1><span id="nohup-disown">nohup, disown</span></h1><p>让程序无视 SIGHUP 信号<br>这两个命令的效果是一致的，都是通过将程序挂载到另外的进程下（最典型的就是1号系统进程），使得程序不受当前终端的 SIGHUP 信号影响。表现出来的结果就是当断线重连后，利用 pstree -p 命令显示进程树，会发现程序已经移动到别的进程下了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当前 bash shell 进程号是 3616 ， running.sh 程序进程号是 3504</span></span><br><span class="line">$ pstree -p 3504</span><br><span class="line">init(1)─┬─init(3403)───bash(3504)───<span class="built_in">sleep</span>(3644)</span><br><span class="line">         ├─init(3614)───init(3615)───bash(3616)───pstree(3645)</span><br></pre></td></tr></table></figure><h1><span id="后台运行命令-amp">后台运行命令 &amp;</span></h1><p>如果想程序一开始就进入后台运行，可以通过 &amp; 命令;<br>如果程序运行后，想把程序放后台，通过 CTRL+Z 暂停任务，配合 bg 命令可以将任务放入后台。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bg</span> %1</span><br></pre></td></tr></table></figure><h1><span id="输出重定向">输出重定向</span></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将标准输出1定向到 file.out 标准错误输出2定向到 file.err</span></span><br><span class="line">$ bash running.sh 1&gt; file.out 2&gt; file.err</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者将1与2合并定向到 file.all</span></span><br><span class="line">$ bash running.sh 1&gt; file.all 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只把1定向到 file.out 2还是保持输出到屏幕</span></span><br><span class="line">$ bash running.sh 1&gt; file.out</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果 &gt; 符号前没有加描述符，默认为标准输出1</span></span><br><span class="line">$ bash running.sh &gt; file.out</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重定向到 /dev/null , /dev/null 就像一个无底洞，可以无限往里面扔东西，坏处就是程序输出了啥咱也不知道</span></span><br><span class="line">$ bash running.sh &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://zhuanlan.zhihu.com/p/446891442">https://zhuanlan.zhihu.com/p/446891442</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;&lt;a href=&quot;#sighup%E4%BF%A1%E5%8F%B7&quot;&gt;SIGHUP信号&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;&lt;a href=&quot;#nohup-di</summary>
      
    
    
    
    <category term="Linux" scheme="https://wangzhangyu.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Visual Studio Code 配置</title>
    <link href="https://wangzhangyu.github.io/2024/04/07/vscode%E9%85%8D%E7%BD%AE/"/>
    <id>https://wangzhangyu.github.io/2024/04/07/vscode%E9%85%8D%E7%BD%AE/</id>
    <published>2024-04-07T08:16:29.000Z</published>
    <updated>2024-04-08T06:39:37.748Z</updated>
    
    <content type="html"><![CDATA[<p>vs code自动更新后无法正常使用remote ssh插件，连接一直卡在“正在下载vs code 服务器&quot;<br>vs code当前版本: 1.88.0 (Universal)</p><p>观察remote ssh输出日志： 打开调试-输出-remote ssh，发现确实卡在下载的过程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[16:19:20.211] [server] Installing and setting up Visual Studio Code Server...</span><br></pre></td></tr></table></figure><blockquote><p>解决方案：</p><ul class="lvl-1"><li class="lvl-2">降低vs code版本，使用1.85版本</li><li class="lvl-2">同时删除.ssh文件夹中的known_hosts，重新安装remote ssh插件<br>下载地址：<a href="https://code.visualstudio.com/updates/v1_85">https://code.visualstudio.com/updates/v1_85</a><br><a href="https://github.com/microsoft/vscode/issues/203967">https://github.com/microsoft/vscode/issues/203967</a></li></ul></blockquote><p>记录下vs code安装的插件</p><hr><p>macos中安装code<br>打开Visual Studio通过（⇧⌘P）打开命令面板，然后键入以找到Shell命令：shell command<br>install code</p><h3><span id="下载已安装的extension名称">下载已安装的extension名称</span></h3><p>导出到extensions文本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code --list-extensions &gt; extensions.txt</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">antonreshetov.masscode-assistant</span><br><span class="line">ecmel.vscode-html-css</span><br><span class="line">github.copilot</span><br><span class="line">github.copilot-chat</span><br><span class="line">james-yu.latex-workshop</span><br><span class="line">lextudio.restructuredtext</span><br><span class="line">ms-ceintl.vscode-language-pack-zh-hans</span><br><span class="line">ms-python.debugpy</span><br><span class="line">ms-python.python</span><br><span class="line">ms-python.vscode-pylance</span><br><span class="line">ms-toolsai.jupyter</span><br><span class="line">ms-toolsai.jupyter-keymap</span><br><span class="line">ms-toolsai.jupyter-renderers</span><br><span class="line">ms-toolsai.vscode-jupyter-cell-tags</span><br><span class="line">ms-toolsai.vscode-jupyter-slideshow</span><br><span class="line">ms-vscode-remote.remote-ssh</span><br><span class="line">ms-vscode-remote.remote-ssh-edit</span><br><span class="line">ms-vscode.remote-explorer</span><br><span class="line">trond-snekvik.simple-rst</span><br><span class="line">vue.volar</span><br><span class="line">zainchen.json</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;vs code自动更新后无法正常使用remote ssh插件，连接一直卡在“正在下载vs code 服务器&amp;quot;&lt;br&gt;
vs code当前版本: 1.88.0 (Universal)&lt;/p&gt;
&lt;p&gt;观察remote ssh输出日志： 打开调试-输出-remote s</summary>
      
    
    
    
    <category term="macbook" scheme="https://wangzhangyu.github.io/categories/macbook/"/>
    
    
  </entry>
  
  <entry>
    <title>Git与Github使用</title>
    <link href="https://wangzhangyu.github.io/2024/04/04/git%E4%BD%BF%E7%94%A8/"/>
    <id>https://wangzhangyu.github.io/2024/04/04/git%E4%BD%BF%E7%94%A8/</id>
    <published>2024-04-04T10:58:44.000Z</published>
    <updated>2024-04-08T05:51:32.911Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul class="lvl-0"><li class="lvl-2"><a href="#git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4">Git基本命令</a></li><li class="lvl-2"><a href="#github%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B%E8%BF%9C%E7%A8%8B%E6%8E%A8%E9%80%81">GitHub操作流程，远程推送</a></li><li class="lvl-2"><a href="#%E5%88%9B%E5%BB%BAgitignore%E6%96%87%E4%BB%B6">创建.gitignore文件</a></li><li class="lvl-2"><a href="#github%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0">Github大文件上传</a></li><li class="lvl-2"><a href="#git-%E6%A0%87%E7%AD%BE">Git 标签</a></li><li class="lvl-2"><a href="#github%E9%85%8D%E7%BD%AEssh">Github配置ssh</a></li><li class="lvl-2"><a href="#github%E5%8A%A0%E9%80%9F">Github加速</a></li></ul><!-- tocstop --><h1><span id="git基本命令">Git基本命令</span></h1><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>git clone &lt;repo&gt; &lt;directory&gt;</code></td><td>从现有 Git 仓库中拷贝项目</td></tr><tr><td><code>git add .</code></td><td>添加所有更改到暂存区</td></tr><tr><td><code>git commit -m &quot;message&quot;</code></td><td>提交更改到版本库</td></tr><tr><td><code>git status</code></td><td>查看当前状态</td></tr><tr><td><code>git branch</code></td><td>查看本地所有分支</td></tr><tr><td><code>git branch -r</code></td><td>查看远程所有分支</td></tr><tr><td><code>git branch -a</code></td><td>查看本地和远程所有分支</td></tr><tr><td><code>git branch &lt;branchname&gt;</code></td><td>新建分支</td></tr><tr><td><code>git branch [-f] &lt;branchname&gt;</code></td><td>新建分支，但不切换分支，仍保持在原分支</td></tr><tr><td><code>git checkout &lt;branchname&gt;</code></td><td>切换分支</td></tr><tr><td><code>git merge &lt;branchname&gt;</code></td><td>合并分支</td></tr><tr><td><code>git branch -m main</code></td><td>重命名默认的 master 分支为 main 分支</td></tr><tr><td><code>git branch (-d | -D) &lt;branchname&gt;</code></td><td>删除分支</td></tr><tr><td><code>git branch -d -r &lt;branchname&gt;</code></td><td>删除远程分支</td></tr><tr><td><code>git remote add [shortname] [url]</code></td><td>添加远程库</td></tr><tr><td><code>git reset HEAD^</code></td><td>回退所有内容到上一个版本</td></tr><tr><td><code>git reset HEAD^ hello.php</code></td><td>回退 hello.php 文件的版本到上一个版本</td></tr><tr><td><code>git reset 052e</code></td><td>回退到指定版本</td></tr><tr><td><code>git tag -a v1.0</code></td><td>创建标签</td></tr><tr><td><code>git log</code></td><td>查看提交历史</td></tr><tr><td><code>git diff</code></td><td>比较文件的不同，即暂存区和工作区的差异</td></tr><tr><td><code>git fetch</code></td><td>从远程获取代码库</td></tr><tr><td><code>git pull</code></td><td>下载远程代码并合并</td></tr><tr><td><code>git push</code></td><td>上传远程代码并合并</td></tr><tr><td><code>git remote</code></td><td>远程仓库操作</td></tr></tbody></table><h1><span id="github操作流程远程推送">GitHub操作流程，远程推送</span></h1><ul class="lvl-0"><li class="lvl-2"><p>Github端：Github上创建一个新仓库创建一个空的仓库，<a href="http://xn--readme-vp7ii62a0i8des1c394a.md">不需要添加readme.md</a>，空的就可以</p></li><li class="lvl-2"><p>服务器端<br>create a new repository on the command line</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# test&quot;</span> &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git branch -M main</span><br><span class="line">git remote add origin git@github.com:WangZhangyu/test.git</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p>push an existing repository from the command line</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:WangZhangyu/test.git</span><br><span class="line">git branch -M main</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git init //把这个目录变成Git可以管理的仓库</span><br><span class="line">git add README.md //文件添加到仓库</span><br><span class="line">git add . //不但可以跟单一文件，还可以跟通配符，更可以跟目录。一个点就把当前目录下所有未追踪的文件全部add了 </span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span> //把文件提交到仓库</span><br><span class="line">git remote add origin git@github.com:WangZhangyu/test.git //关联远程仓库</span><br><span class="line">git push -u origin master //把本地库的所有内容推送到远程库上</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>GitHub已有仓库和内容，本地没有</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;repo&gt; &lt;directory&gt;</span><br></pre></td></tr></table></figure><blockquote><p>master是git的默认分支，main是github的默认分支,所以需要在git中把master分支重命名为main分支。在mac中git默认分支为main，无需改动。</p></blockquote><blockquote><p><code>git push -u</code> 命令用于将本地分支的更新推送到远程仓库，并将本地分支与远程分支进行关联。</p><ul class="lvl-1"><li class="lvl-2"><code>git push</code>: 将本地仓库的提交推送到远程仓库。</li><li class="lvl-2"><code>-u</code> 或 <code>--set-upstream</code>: 设置本地分支与远程分支的关联关系。一旦关联，之后使用 <code>git push</code> 命令时，只需要输入 <code>git push</code> 即可，Git 将自动推送到已经设置的远程分支。<br>通常情况下，第一次推送本地分支到远程分支时，需要使用 <code>-u</code> 选项来建立本地分支与远程分支的关联。这样设置后，以后再次推送时，只需使用 git push 命令即可，Git 将根据之前建立的关联关系自动推送到对应的远程分支。</li></ul></blockquote><h1><span id="创建gitignore文件">创建.gitignore文件</span></h1><p>有些文件不想提交，可以创建并编辑.gitignore文件<br>.gitignore文件，Git会自动忽略这些文件，不进行提交</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># dir 不需要提交的目录</span><br><span class="line">/SAC</span><br><span class="line"></span><br><span class="line"># file 不需要提交的文件</span><br><span class="line">config.ini</span><br><span class="line"></span><br><span class="line"># log 不需要提交的任意包含后缀名为log的文件</span><br><span class="line">*.log</span><br><span class="line"></span><br><span class="line"># Package Files 不需要提交的任意包含后缀名为gz的文件</span><br><span class="line">*.gz</span><br></pre></td></tr></table></figure><p>Git忽略文件的原则忽略操作系统自动生成的文件，比如缩略图等；忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如产生的.log日志文件；忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。</p><h1><span id="github大文件上传">Github大文件上传</span></h1><p>GitHub默认不支持100MB以上的文件</p><ul class="lvl-0"><li class="lvl-2"><p>安装 Git 大文件存储（Git LFS）<br>Git LFS(Git Large File Storage)，即Git大文件存储技术，相当于Git的一种插件式增强工具，简单讲，它是在Git仓库使用这些文件的 指针代替 实际文件，而把实际文件存储在远程端LFS服务器，同时在本地仓库中实时追踪这些文件的变动。<br>Ubuntu下安装lfs <code>sudo apt-get install git-lfs</code></p></li><li class="lvl-2"><p>初始化lfs，<code>git lfs install</code></p></li><li class="lvl-2"><p>把大文件添加到lfs管理文件：<code>git lfs track *.pkl</code>文件夹：<code>git lsf track model</code>此时会生成一个.gitattributes文件，记录track的大文件</p></li><li class="lvl-2"><p>查看lfs追踪了哪些文件：<code>git lfs ls-files</code></p></li><li class="lvl-2"><p>把新的文件添加到缓存区 <code>git add .gitattributes</code></p></li><li class="lvl-2"><p>把提交缓存区内的文件到本地仓库：<code>git commit -m &quot;add .gitattributes&quot;</code></p></li><li class="lvl-2"><p>将本地的大型模型通过git推送到gitlfs中管理：<code>git push origin main</code></p></li></ul><blockquote><p><a href="https://zhuanlan.zhihu.com/p/444203121">https://zhuanlan.zhihu.com/p/444203121</a></p></blockquote><h1><span id="git-标签">Git 标签</span></h1><p>如果你达到一个重要的阶段，并希望永远记住那个特别的提交快照，你可以使用 git tag 给它打上标签。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -a v1.0 </span><br></pre></td></tr></table></figure><h1><span id="github配置ssh">Github配置ssh</span></h1><blockquote><p><a href="https://www.runoob.com/git/git-remote-repo.html">https://www.runoob.com/git/git-remote-repo.html</a></p></blockquote><h1><span id="github加速">Github加速</span></h1><p>Github加速 – 修改/etc/host文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># update: 20220222</span><br><span class="line"># Github Hosts</span><br><span class="line"># domain: github.com</span><br><span class="line">140.82.113.4 github.com</span><br><span class="line">140.82.114.9 nodeload.github.com</span><br><span class="line">140.82.112.5 api.github.com</span><br><span class="line">140.82.112.10 codeload.github.com</span><br><span class="line">185.199.108.133 raw.github.com</span><br><span class="line">185.199.108.153 training.github.com</span><br><span class="line">185.199.108.153 assets-cdn.github.com</span><br><span class="line">185.199.108.153 documentcloud.github.com</span><br><span class="line">140.82.114.17 help.github.com</span><br><span class="line"></span><br><span class="line"># domain: githubstatus.com</span><br><span class="line">185.199.108.153 githubstatus.com</span><br><span class="line"></span><br><span class="line"># domain: fastly.net</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br><span class="line"></span><br><span class="line"># domain: githubusercontent.com</span><br><span class="line">185.199.108.133 raw.githubusercontent.com</span><br><span class="line">185.199.108.154 pkg-containers.githubusercontent.com</span><br><span class="line">185.199.108.133 cloud.githubusercontent.com</span><br><span class="line">185.199.108.133 gist.githubusercontent.com</span><br><span class="line">185.199.108.133 marketplace-screenshots.githubusercontent.com</span><br><span class="line">185.199.108.133 repository-images.githubusercontent.com</span><br><span class="line">185.199.108.133 user-images.githubusercontent.com</span><br><span class="line">185.199.108.133 desktop.githubusercontent.com</span><br><span class="line">185.199.108.133 avatars.githubusercontent.com</span><br><span class="line">185.199.108.133 avatars0.githubusercontent.com</span><br><span class="line">185.199.108.133 avatars1.githubusercontent.com</span><br><span class="line">185.199.108.133 avatars2.githubusercontent.com</span><br><span class="line">185.199.108.133 avatars3.githubusercontent.com</span><br><span class="line">185.199.108.133 avatars4.githubusercontent.com</span><br><span class="line">185.199.108.133 avatars5.githubusercontent.com</span><br><span class="line">185.199.108.133 avatars6.githubusercontent.com</span><br><span class="line">185.199.108.133 avatars7.githubusercontent.com</span><br><span class="line">185.199.108.133 avatars8.githubusercontent.com</span><br><span class="line"># End of the section</span><br></pre></td></tr></table></figure><blockquote><p>参考：<br><a href="https://blog.csdn.net/gongdamrgao/article/details/115032436">https://blog.csdn.net/gongdamrgao/article/details/115032436</a><br><a href="https://zhuanlan.zhihu.com/p/107334179">https://zhuanlan.zhihu.com/p/107334179</a><br><a href="https://zhuanlan.zhihu.com/p/52885189">https://zhuanlan.zhihu.com/p/52885189</a><br><a href="https://www.runoob.com/git/git-reset.html">https://www.runoob.com/git/git-reset.html</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;&lt;a href=&quot;#git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4&quot;&gt;Git基本命令&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="Git" scheme="https://wangzhangyu.github.io/categories/Git/"/>
    
    
  </entry>
  
  <entry>
    <title>linux 包管理器rpm，yum，apt，dpkg，brew</title>
    <link href="https://wangzhangyu.github.io/2024/03/28/linux%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/"/>
    <id>https://wangzhangyu.github.io/2024/03/28/linux%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/</id>
    <published>2024-03-28T13:30:27.000Z</published>
    <updated>2024-04-08T06:42:40.660Z</updated>
    
    <content type="html"><![CDATA[<p><strong>rpm yum apt dpkg brew 区别</strong></p><p>RedHat系列: Redhat、Centos、Fedora等</p><ol><li class="lvl-3"><p>常见的安装包格式 rpm包,安装rpm包的命令是“rpm -参数”</p></li><li class="lvl-3"><p>包管理工具 yum</p></li><li class="lvl-3"><p>支持tar包</p></li></ol><p>Debian系列: Debian、Ubuntu等</p><ol><li class="lvl-3"><p>常见的安装包格式 deb包,安装deb包的命令是“dpkg -参数”</p></li><li class="lvl-3"><p>包管理工具 apt-get</p></li><li class="lvl-3"><p>支持tar包</p></li></ol><blockquote><p>参考：<a href="https://blog.csdn.net/bandaoyu/article/details/83312230">https://blog.csdn.net/bandaoyu/article/details/83312230</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;rpm yum apt dpkg brew 区别&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RedHat系列: Redhat、Centos、Fedora等&lt;/p&gt;
&lt;ol&gt;
&lt;li class=&quot;lvl-3&quot;&gt;
&lt;p&gt;常见的安装包格式 rpm包,安装rpm包的命令是“</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>搭建影音存储</title>
    <link href="https://wangzhangyu.github.io/2024/03/28/%E6%90%AD%E5%BB%BA%E5%BD%B1%E9%9F%B3%E5%AD%98%E5%82%A8/"/>
    <id>https://wangzhangyu.github.io/2024/03/28/%E6%90%AD%E5%BB%BA%E5%BD%B1%E9%9F%B3%E5%AD%98%E5%82%A8/</id>
    <published>2024-03-27T16:45:59.000Z</published>
    <updated>2024-04-08T06:43:55.591Z</updated>
    
    <content type="html"><![CDATA[<ul class="lvl-0"><li class="lvl-2"><p>在旧电脑上安装centos7.9</p></li><li class="lvl-2"><p>更新系统</p></li><li class="lvl-2"><p>安装qbittorrent</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 qbittorrent和qbittorrent-nox</span></span><br><span class="line">sudo yum install qbittorrent</span><br><span class="line">sudo yum install qbittorrent-nox</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动qbittorrent-nox</span></span><br><span class="line">qbittorrent-nox</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看是否启动成功</span></span><br><span class="line">ps -ef | grep qbittorrent-nox</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭 qbittorrent-nox</span></span><br><span class="line">pkill -9 qbittorrent-nox</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定端口启动qbittorrent-nox</span></span><br><span class="line">qbittorrent-nox --webui-port=8080</span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>端口映射路由器端配置nat<br>华为路由器-网络设置-安全防护-NAT配置-端口映射</p></li><li class="lvl-2"><p>安装docker</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装工具包</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置yum仓库</span></span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#通过yum安装Docker</span></span><br><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br><span class="line"><span class="comment">#启动Docker</span></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"><span class="comment">#设置Docker开机自启</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line"><span class="comment">#查看Docker版本</span></span><br><span class="line">sudo docker version</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/qq_43721032/article/details/119134118">https://blog.csdn.net/qq_43721032/article/details/119134118</a></p></blockquote></li><li class="lvl-2"><p>用docker安装alist</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装alist容器</span></span><br><span class="line">docker run -d --restart=always -v /home/alist:/opt/alist/data -p 5244:5244 --name=<span class="string">&quot;alist&quot;</span> xhofe/alist:latest</span><br></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it alist sh <span class="comment">#/bin/sh</span></span><br><span class="line"><span class="comment"># 修改alist密码</span></span><br><span class="line">./alist admin <span class="built_in">set</span> NEW_PASSWORD</span><br></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a <span class="comment">#命令列出所有容器</span></span><br><span class="line">docker stop &lt;CONTAINER ID|NAME&gt; <span class="comment">#停止容器</span></span><br><span class="line">docker <span class="built_in">rm</span> &lt;CONTAINER ID|NAME&gt; &lt;CONTAINER ID|NAME&gt; <span class="comment">#删除单个或多个容器。</span></span><br><span class="line">docker <span class="built_in">rm</span> $(docker ps -a -q) <span class="comment">#一次删除所有停止的容器</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/u010190198/article/details/134056996">https://blog.csdn.net/u010190198/article/details/134056996</a><br><a href="https://www.cnblogs.com/law148/p/16800764.html">https://www.cnblogs.com/law148/p/16800764.html</a></p></blockquote></li><li class="lvl-2"><p>用alist挂载阿里云盘选择阿里云盘open<br>挂载后局域网内可以访问，<a href="http://192.168.3.7:5244/ali">http://192.168.3.7:5244/ali</a></p><blockquote><p><a href="https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html">https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html</a></p></blockquote></li><li class="lvl-2"><p>使用davfs2把alist挂载到服务器上<br>davfs2是linux的一种文件系统</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装davfs2</span></span><br><span class="line">sudo yum update</span><br><span class="line">sudo yum install davfs2 -y</span><br></pre></td></tr></table></figure><p>安装完成后，我们需要对davfs2进行适配Alist的配置。通过以下命令编辑davfs2的配置文件：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/davfs2/davfs2.conf</span><br></pre></td></tr></table></figure><p>在配置文件中找到 ignore_dav_header 这一项。如果前面有注释符号，请删除它，并把该项的值设置为 1：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ignore_dav_header 1</span><br></pre></td></tr></table></figure><p>修改davfs2缓存大小 <code>cache_size = 10000</code><br>重启davfs2 <code>systemctl restart davfs2.service</code></p><p>挂载 <code>sudo mount -t davfs http://ip或者域名:端口号/dav /mnt/webdav</code></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[wangzy@localhost a]$ sudo mount -t davfs localhost:5244/dav /mnt/webdav</span><br><span class="line">Please enter the username to authenticate with server</span><br><span class="line">localhost:5244/dav or hit enter for none.</span><br><span class="line">Username: admin</span><br><span class="line">Please enter the password to authenticate user admin with server</span><br><span class="line">localhost:5244/dav or hit enter for none.</span><br><span class="line">Password:</span><br><span class="line">/sbin/mount.davfs: Warning: can&#x27;t write entry into mtab, but will mount the file system anyway</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://dashen.wang/5684.html">https://dashen.wang/5684.html</a></p></blockquote></li><li class="lvl-2"><p>或者直接安装阿里云盘安装</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/tickstep/aliyunpan/releases/download/v0.3.0/aliyunpan-v0.3.0-linux-amd64.zip</span><br><span class="line">unzip aliyunpan-v0.3.0-linux-amd64.zip</span><br><span class="line">cd aliyunpan-v0.3.0-linux-amd64</span><br><span class="line">./aliyunpan</span><br></pre></td></tr></table></figure><p>使用</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[tickstep@MacPro ~]$ aliyunpan</span><br><span class="line">提示: 方向键上下可切换历史命令.</span><br><span class="line">提示: Ctrl + A / E 跳转命令 首 / 尾.</span><br><span class="line">提示: 输入 help 获取帮助.</span><br><span class="line">aliyunpan &gt; </span><br></pre></td></tr></table></figure><p>查看帮助</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">aliyunpan &gt; help</span><br><span class="line">    阿里云盘:</span><br><span class="line">        album, abm   相簿(Beta)</span><br><span class="line">        cd           切换工作目录</span><br><span class="line">        download, d  下载文件/目录</span><br><span class="line">        ls, l, ll    列出目录</span><br><span class="line">        mkdir        创建目录</span><br><span class="line">        mv           移动文件/目录</span><br><span class="line">        pwd          输出工作目录</span><br><span class="line">        recycle      回收站</span><br><span class="line">        rename       重命名文件</span><br><span class="line">        rm           删除文件/目录</span><br><span class="line">        share        分享文件/目录</span><br><span class="line">        sync         同步备份功能</span><br><span class="line">        upload, u    上传文件/目录</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>登录账号</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">aliyunpan &gt; login</span><br><span class="line">请在浏览器打开以下链接进行登录，链接有效时间为5分钟。</span><br><span class="line">注意：你需要进行一次授权一次扫码的两次登录。</span><br><span class="line">https://openapi.alipan.com/oauth/authorize?client_id=cf9f70e8fc61430f8ec5ab5cadf31375&amp;redirect_uri=https%3A%2F%2Fapi.tickstep.com%2Fauth%2Ftickstep%2Faliyunpan%2Ftoken%2Fopenapi%2F8206f0.....fb5db6b40336%2Fauth&amp;scope=user:base,file:all:read,file:all:write</span><br><span class="line">阿里云盘登录成功:  tickstep</span><br><span class="line">aliyunpan:/ tickstep$ </span><br></pre></td></tr></table></figure><p>上传</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">aliyunpan:/ tickstep$ upload /Users/tickstep/Downloads/apt.zip /tmp</span><br><span class="line"></span><br><span class="line">[0] 当前文件上传最大并发量为: 10, 上传分片大小为: 10.00MB</span><br><span class="line">[1] 加入上传队列: /Users/tickstep/Downloads/apt.zip</span><br><span class="line">[1] 2022-08-13 13:41:22 准备上传: /Users/tickstep/Downloads/apt.zip =&gt; /tmp/apt.zip</span><br><span class="line">[1] 2022-08-13 13:41:22 正在检测和创建云盘文件夹: /tmp</span><br><span class="line">[1] 2022-08-13 13:41:22 正在计算文件SHA1: /Users/tickstep/Downloads/apt.zip</span><br><span class="line">[1] 2022-08-13 13:41:22 检测秒传中, 请稍候...</span><br><span class="line">[1] 2022-08-13 13:41:22 秒传失败，开始正常上传文件</span><br><span class="line">[1] ↑ 21.00MB/21.00MB 702.53KB/s(702.70KB/s) in 15s ............</span><br><span class="line">[1] 2022-08-13 13:41:22 上传文件成功, 保存到网盘路径: /tmp/apt.zip</span><br><span class="line">[1] 2022-08-13 13:41:22 文件上传结果： 成功！ 耗时 18秒</span><br><span class="line"></span><br><span class="line">上传结束, 时间: 18秒, 数据总量: 21.00MB</span><br></pre></td></tr></table></figure><p>下载</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">aliyunpan:/ tickstep$ download IMG_0106.JPG</span><br><span class="line"></span><br><span class="line">[0] 当前文件下载最大并发量为: 5, 下载缓存为: 64.00KB</span><br><span class="line">[1] 加入下载队列: /IMG_0106.JPG</span><br><span class="line">[1] ----</span><br><span class="line">文件ID: 60bc44f855814e19692a4958b4a8823a1a06e5de</span><br><span class="line">文件名: IMG_0106.JPG</span><br><span class="line">文件类型: 文件</span><br><span class="line">文件路径: /IMG_0106.JPG</span><br><span class="line"></span><br><span class="line">[1] 准备下载: /IMG_0106.JPG</span><br><span class="line">[1] 将会下载到路径: /root/Downloads/4d001d48564f43b..62874f04bbe6/IMG_0106.JPG</span><br><span class="line">[1] 下载开始</span><br><span class="line">[1] ↓ 704.00KB/1.48MB 0B/s(1.69MB/s) in 1.88s, left - ............</span><br><span class="line">[1] 下载完成, 保存位置: /root/Downloads/4d001d48564f43b..62874f04bbe6/IMG_0106.JPG</span><br><span class="line">[1] 检验文件有效性成功: /root/Downloads/4d001d48564f43b..62874f04bbe6/IMG_0106.JPG</span><br><span class="line"></span><br><span class="line">下载结束, 时间: 4秒, 数据总量: 1.48MB</span><br><span class="line">aliyunpan:/ tickstep$ </span><br></pre></td></tr></table></figure><blockquote><p><a href="https://github.com/tickstep/aliyunpan">https://github.com/tickstep/aliyunpan</a></p></blockquote></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;在旧电脑上安装centos7.9&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;更新系统&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;安装qbittorrent</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>写一个alist守护程序</title>
    <link href="https://wangzhangyu.github.io/2024/03/25/%E5%86%99%E4%B8%80%E4%B8%AAalist%E5%AE%88%E6%8A%A4%E7%A8%8B%E5%BA%8F/"/>
    <id>https://wangzhangyu.github.io/2024/03/25/%E5%86%99%E4%B8%80%E4%B8%AAalist%E5%AE%88%E6%8A%A4%E7%A8%8B%E5%BA%8F/</id>
    <published>2024-03-25T05:42:08.000Z</published>
    <updated>2024-03-27T03:46:41.078Z</updated>
    
    <content type="html"><![CDATA[<ul class="lvl-0"><li class="lvl-2"><p>alist守护程序，包括alist的启动，停止，重启和状态服务</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">alist_process=&quot;/Applications/alist/alist server&quot;</span><br><span class="line"></span><br><span class="line">start_alist() &#123;</span><br><span class="line">    nohup $alist_process &gt; /dev/null &amp;</span><br><span class="line">    echo &quot;Alist started.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop_alist() &#123;</span><br><span class="line">    echo &quot;Stopping alist...&quot;</span><br><span class="line">    pkill -x &quot;alist&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">check_alist_status() &#123;</span><br><span class="line">    if pgrep -x &quot;alist&quot; &gt; /dev/null; then</span><br><span class="line">        echo &quot;Alist is running.&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;Alist is not running.&quot;</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if [ &quot;$1&quot; == &quot;start&quot; ]; then</span><br><span class="line">    start_alist</span><br><span class="line">elif [ &quot;$1&quot; == &quot;stop&quot; ]; then</span><br><span class="line">    stop_alist</span><br><span class="line">elif [ &quot;$1&quot; == &quot;restart&quot; ]; then</span><br><span class="line">    stop_alist</span><br><span class="line">    sleep 2  # 等待一段时间以确保 &quot;alist&quot; 进程已经终止</span><br><span class="line">    start_alist</span><br><span class="line">elif [ &quot;$1&quot; == &quot;status&quot; ]; then</span><br><span class="line">    check_alist_status</span><br><span class="line">else</span><br><span class="line">    echo &quot;Usage: $0 &#123;start|stop|restart|status&#125;&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><pre><code>脚本保存为alist_daemon.sh</code></pre><ul class="lvl-0"><li class="lvl-2">配置别名</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># alias</span><br><span class="line">alias alist=&quot;/Applications/alist/alist_daemon.sh&quot;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">实际运行</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(base) wangzy@macbook alist % alist                    </span><br><span class="line">Usage: /Applications/alist/alist_daemon.sh &#123;start|stop|restart|status&#125;</span><br><span class="line">(base) wangzy@macbook alist % alist status</span><br><span class="line">Alist is not running.</span><br><span class="line">(base) wangzy@macbook alist % alist start </span><br><span class="line">Alist started.</span><br><span class="line">(base) wangzy@macbook alist % alist status</span><br><span class="line">Alist is running.</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>Alist有官方的守护程序代码</p><p>Linux下, 编辑 /usr/lib/systemd/system/alist.service 并添加如下内容，其中 path_alist 为 AList 所在的路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=alist</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=path_alist</span><br><span class="line">ExecStart=path_alist/alist server</span><br><span class="line">Restart=on-failure</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>然后，执行 <code>systemctl daemon-reload</code> 重载配置，现在你可以使用这些命令来管理程序：</p><p>启动: <code>systemctl start alist</code><br>关闭: <code>systemctl stop alist</code><br>配置开机自启: <code>systemctl enable alist</code><br>取消开机自启: <code>systemctl disable alist</code><br>状态: <code>systemctl status alist</code><br>重启: <code>systemctl restart alist</code></p><p>参考：<a href="https://alist.nn.ci/zh/guide/install/manual.html#%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B">https://alist.nn.ci/zh/guide/install/manual.html#守护进程</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;alist守护程序，包括alist的启动，停止，重启和状态服务&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td </summary>
      
    
    
    
    <category term="Linux" scheme="https://wangzhangyu.github.io/categories/Linux/"/>
    
    
    <category term="alist" scheme="https://wangzhangyu.github.io/tags/alist/"/>
    
  </entry>
  
  <entry>
    <title>端口映射</title>
    <link href="https://wangzhangyu.github.io/2024/03/24/%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/"/>
    <id>https://wangzhangyu.github.io/2024/03/24/%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/</id>
    <published>2024-03-24T14:20:40.000Z</published>
    <updated>2024-03-27T07:39:06.918Z</updated>
    
    <content type="html"><![CDATA[<p>通过路由器端口映射，对局域网内服务器进行ssh登录</p><ol><li class="lvl-3">进行IP与MAC绑定</li><li class="lvl-3">配置端口映射 【转发规则】-&gt;【虚拟服务器】</li></ol><p>华为路由器-网络设置-安全防护-NAT配置-端口映射</p><ul class="lvl-0"><li class="lvl-2"><p>内网端口映射为路由器端口，相当于内网穿透</p></li></ul><hr><p><strong>内网的一台电脑要上因特网对外开放服务或接收数据，就需要端口映射。</strong></p><p><strong>端口映射分为动态和静态。</strong></p><p><strong>动态端口映射</strong> 内网中的一台电脑要访问新浪网，会向nat网关发送数据包，包头中包括对方(就是新浪网)IP、端口和本机IP、端口，nat网关会把本机IP、端口替换成自己的公网IP、一个未使用的端口，并且会记下这个映射关系，为以后转发数据包使用。然后再把数据发给新浪网，新浪网收到数据后做出反应，发送数据到nat网关的那个未使用的端口，然后nat网关将数据转发给内网中的那台电脑，实现内网和公网的通讯.当连接关闭时，nat网关会释放分配给这条连接的端口，以便以后的连接可以继续使用。动态端口映射其实也就是nat网关的工作方式。</p><p><strong>静态端口映射</strong> 就是在nat网关上开放一个固定的端口，然后设定此端口收到的数据要转发给内网哪个IP和端口，不管有没有连接，这个映射关系都会一直存在。就可以让公网主动访问内网的一个电脑。</p><p><strong>什么是nat</strong> 简单地说，nat就是在局域网内部网络中使用内部地址，而当内部节点要与外部网络进行通讯时，就在网关（可以理解为出口，打个比方就像院子的门一样）处，将内部地址替换成公用地址，从而在外部公网（internet）上正常使用，nat可以使多台计算机共享Internet连接，这一功能很好地解决了公共 IP地址紧缺的问题。通过这种方法，你可以只申请一个合法IP地址，就把整个局域网中的计算机接入Internet中。这时，nat屏蔽了内部网络，所有内部网计算机对于公共网络来说是不可见的，而内部网计算机用户通常不会意识到nat的存在。</p><p><strong>nat内网穿透是什么?</strong> 常说的端口映射是NAT的一种，其功能就是把在公网的地址转翻译成私有地址， 采用路由方式的ADSL宽带路由器拥有一个动态或固定的公网IP，ADSL直接接在HUB或交换机上，所有的电脑共享上网。在局域网内部的任一PC或服务器上运行到内网穿透客户端，此时域名解析到的IP地址是局域网网关出口处的公网IP地址，再在网关处做端口映射指向监控设备即可。</p><blockquote><p>参考：<br><a href="https://blog.csdn.net/qq_40156289/article/details/109540064">https://blog.csdn.net/qq_40156289/article/details/109540064</a><br><a href="https://blog.csdn.net/wangweiwells/article/details/99004658">https://blog.csdn.net/wangweiwells/article/details/99004658</a><br>花生壳内网穿透 <a href="https://www.zhihu.com/question/419146871/answer/1462241036">https://www.zhihu.com/question/419146871/answer/1462241036</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;通过路由器端口映射，对局域网内服务器进行ssh登录&lt;/p&gt;
&lt;ol&gt;
&lt;li class=&quot;lvl-3&quot;&gt;进行IP与MAC绑定&lt;/li&gt;
&lt;li class=&quot;lvl-3&quot;&gt;配置端口映射 【转发规则】-&amp;gt;【虚拟服务器】&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;华为路由器-网络设置</summary>
      
    
    
    
    <category term="Linux" scheme="https://wangzhangyu.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>macbook网络间歇性断流</title>
    <link href="https://wangzhangyu.github.io/2024/03/24/macbook%E7%BD%91%E7%BB%9C%E9%97%B4%E6%AD%87%E6%80%A7%E6%96%AD%E6%B5%81/"/>
    <id>https://wangzhangyu.github.io/2024/03/24/macbook%E7%BD%91%E7%BB%9C%E9%97%B4%E6%AD%87%E6%80%A7%E6%96%AD%E6%B5%81/</id>
    <published>2024-03-24T07:35:29.000Z</published>
    <updated>2024-03-27T07:42:42.942Z</updated>
    
    <content type="html"><![CDATA[<p>Terminal中直接开启关闭AWDL，</p><p>DISABLE</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ifconfig awdl0 down</span><br></pre></td></tr></table></figure><p>ENABLE:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ifconfig awdl0 up</span><br></pre></td></tr></table></figure><p>或者下载 WiFriedX 小工具，运行后勾选“Disable AWDL/AirDrop”，禁用 AWDL 服务</p><hr><blockquote><p>试了很多方法都不行，最后发现不是电脑的问题，是网络通登录验证的问题。网络通密码太弱了，换密码问题解决。</p></blockquote><p>参考：<a href="https://zhuanlan.zhihu.com/p/441284532">https://zhuanlan.zhihu.com/p/441284532</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Terminal中直接开启关闭AWDL，&lt;/p&gt;
&lt;p&gt;DISABLE&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span</summary>
      
    
    
    
    <category term="macbook" scheme="https://wangzhangyu.github.io/categories/macbook/"/>
    
    
  </entry>
  
  <entry>
    <title>ssh配置</title>
    <link href="https://wangzhangyu.github.io/2024/03/23/ssh%E9%85%8D%E7%BD%AE/"/>
    <id>https://wangzhangyu.github.io/2024/03/23/ssh%E9%85%8D%E7%BD%AE/</id>
    <published>2024-03-23T06:16:38.000Z</published>
    <updated>2024-03-26T13:25:25.980Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul class="lvl-0"><li class="lvl-2"><a href="#ssh%E5%AE%89%E8%A3%85">ssh安装</a></li><li class="lvl-2"><a href="#ssh%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-sshd_config">ssh配置文件 sshd_config</a></li><li class="lvl-2"><a href="#ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95">ssh免密登录</a><ul class="lvl-2"><li class="lvl-4"><a href="#%E5%9C%A8%E7%9B%AE%E6%A0%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD">在目标服务器中</a></li><li class="lvl-4"><a href="#%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E5%99%A8">在本地服务器</a></li></ul></li><li class="lvl-2"><a href="#ssh%E8%B7%B3%E6%9D%BF">ssh跳板</a><ul class="lvl-2"><li class="lvl-4"><a href="#%E7%9B%B4%E6%8E%A5%E8%B7%B3%E8%BD%AC">直接跳转</a></li><li class="lvl-4"><a href="#proxyjump%E8%B7%B3%E8%BD%AC">ProxyJump跳转</a></li><li class="lvl-4"><a href="#proxycommand%E8%B7%B3%E8%BD%AC">ProxyCommand跳转</a></li></ul></li><li class="lvl-2"><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a></li><li class="lvl-2"><a href="#ssh%E7%9A%84%E7%94%A8%E6%B3%95">ssh的用法</a></li></ul><!-- tocstop --><h2><span id="ssh安装">ssh安装</span></h2><ul class="lvl-0"><li class="lvl-2"><p>ssh安装<br><code>sudo apt install openssh-server</code></p></li><li class="lvl-2"><p>查看ssh服务状态<br><code>sudo systemctl status ssh</code></p></li><li class="lvl-2"><p>确保防火墙打开了 SSH 端口<br><code>sudo ufw allow ssh</code></p></li><li class="lvl-2"><p>使用ssh连接远程服务器<br><code>ssh username@ip_address</code></p></li><li class="lvl-2"><p>禁用ssh<br><code>sudo systemctl disable --now ssh</code></p></li><li class="lvl-2"><p>启用ssh<br><code>sudo systemctl enable --now ssh</code></p></li></ul><h2><span id="ssh配置文件-sshd_config">ssh配置文件 sshd_config</span></h2><p>配置文件位置<code>/etc/ssh/sshd_config</code></p><blockquote><p>可调整一些重要的配置，如禁止root远程登录等。</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># Logging </span><br><span class="line">#SyslogFacility AUTH </span><br><span class="line">SyslogFacility AUTHPRIV    &lt;==设定在记录来自sshd的消息的时候，是否给出“facility code” </span><br><span class="line">#LogLevel INFO    &lt;==日志记录级别，默认为info  </span><br><span class="line"> </span><br><span class="line"># Authentication: </span><br><span class="line"> </span><br><span class="line">#LoginGraceTime <span class="number">2</span><span class="keyword">m</span>    &lt;==限定用户认证时间为<span class="number">2</span><span class="built_in">min</span> </span><br><span class="line">#PermitRootLogin yes   &lt;==是否允许root账户ssh登录，生产环境中建议改成<span class="keyword">no</span>，使用普通账户ssh登录 </span><br><span class="line">#StrictModes yes    &lt;==设置ssh在接收登录请求之前是否检查用户根目录和rhosts文件的权限和所有权，建议开启 </span><br><span class="line">#MaxAuthTries <span class="number">6</span>   &lt;==指定每个连接最大允许的认证次数。默认值是 <span class="number">6</span> </span><br><span class="line">#MaxSessions <span class="number">10</span>   &lt;==最大允许保持多少个连接。默认值是 <span class="number">10</span>  </span><br><span class="line"> </span><br><span class="line">#PubkeyAuthentication yes  &lt;==是否开启公钥验证 </span><br><span class="line"> </span><br><span class="line"># The default <span class="keyword">is</span> <span class="keyword">to</span> check both .ssh/authorized_keys <span class="built_in">and</span> .ssh/authorized_keys2 </span><br><span class="line"># but this <span class="keyword">is</span> overridden <span class="keyword">so</span> installations will <span class="keyword">only</span> check .ssh/authorized_keys </span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys   &lt;==公钥验证文件路径 </span><br><span class="line">PasswordAuthentication yes   &lt;==是否允许密码验证，生产环境中建议改成<span class="keyword">no</span>，只用密钥登录</span><br></pre></td></tr></table></figure><p>ssh配置文件详解<a href="https://www.jianshu.com/p/e87bb207977c">https://www.jianshu.com/p/e87bb207977c</a></p><p>重启sshd服务使刚修改的配置文件生效<code>systemctl restart sshd</code></p><h2><span id="ssh免密登录">ssh免密登录</span></h2><h3><span id="在目标服务器中">在目标服务器中</span></h3><p>查看home目录下有没有 .ssh 文件夹， 用 ls -al查看 (注：linux系统中以“.”开头的是隐藏文件)<br>如果没有，就自己建立一个 ： <code>mkdir .ssh</code><br>cd然后进入 .ssh，依次运行：</p><ul class="lvl-0"><li class="lvl-2"><p>ssh-keygen （命令后一直敲空格就行, 会生成几个文件）</p></li><li class="lvl-2"><p>cat id_dsa.pub &gt;&gt; authorized_keys</p></li><li class="lvl-2"><p>退出.ssh 至你的home， 运行 chmod -R 755 .ssh</p></li><li class="lvl-2"><p>进入.ssh， chmod 600 *</p></li></ul><blockquote><p>-rw——- (600) 只有拥有者有读写权限。<br>-rwxr-xr-x (755) 拥有者有读、写、执行权限；而属组用户和其他用户只有读、执行权限。</p></blockquote><p>/etc/host.allow和/etc/hosts.deny<br>这两个文件时控制远程访问设置的，通过该设置可以允许或者拒绝某个ip或者ip段访问linux的某项服务。我们可以用于限制访问服务器sshd服务的源地址，host.allow文件对应白名单，hosts.deny文件对应黑名单</p><h3><span id="在本地服务器">在本地服务器</span></h3><p>在本地服务器配置config文件 <code>~/.ssh/config</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Host *</span><br><span class="line">     Port 22</span><br><span class="line"></span><br><span class="line">Host remoteserver</span><br><span class="line">     HostName remote.example.com</span><br><span class="line">     User test</span><br><span class="line">     Port 22</span><br></pre></td></tr></table></figure><p>配置完成后<code>ssh remoteserver</code>可直接跳转远程服务器</p><h2><span id="ssh跳板">ssh跳板</span></h2><h3><span id="直接跳转">直接跳转</span></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -A -J user@jump-server:port user@destination-server:port</span><br></pre></td></tr></table></figure><p>为了方便，可配置config文件，设置静态跳转</p><h3><span id="proxyjump跳转">ProxyJump跳转</span></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">### First jumphost. Directly reachable</span><br><span class="line">Host vps1</span><br><span class="line">     HostName vps1.example.org</span><br><span class="line"></span><br><span class="line">### Host to jump to via jumphost1.example.org</span><br><span class="line">Host contabo</span><br><span class="line">     HostName contabo.example.org</span><br><span class="line">     ProxyJump vps1</span><br></pre></td></tr></table></figure><h3><span id="proxycommand跳转">ProxyCommand跳转</span></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Host tiaoban   # 任意名字，随便使用</span><br><span class="line">    HostName 跳板机的 IP，支持域名</span><br><span class="line">    Port 22      # 跳板机端口</span><br><span class="line">    User username_tiaoban       # 跳板机用户</span><br><span class="line"></span><br><span class="line">Host target      # 同样，任意名字，随便起</span><br><span class="line">    HostName 目标服务器 IP    # 真正登陆的服务器，不支持域名必须IP地址</span><br><span class="line">    Port 22   # 服务器的端口</span><br><span class="line">    User username   # 服务器的用户</span><br><span class="line">    ProxyCommand ssh tiaoban -W %h:%p</span><br></pre></td></tr></table></figure><h2><span id="常见问题">常见问题</span></h2><blockquote><ul class="lvl-1"><li class="lvl-2"><p>查看ssh的端口是否开放</p></li><li class="lvl-2"><p>如果发现root权限无法修改sshd_config文件，考虑服务器可能已经被入侵</p></li></ul></blockquote><h2><span id="ssh的用法">ssh的用法</span></h2><p>ssh -p<br>ssh user@ip -L localhost:8888:localhost:8080 端口转发</p><p>参考：</p><blockquote><p><a href="https://blog.csdn.net/antony1776/article/details/130180372">https://blog.csdn.net/antony1776/article/details/130180372</a><br><a href="https://zhuanlan.zhihu.com/p/74193910">https://zhuanlan.zhihu.com/p/74193910</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;&lt;a href=&quot;#ssh%E5%AE%89%E8%A3%85&quot;&gt;ssh安装&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;&lt;a href=&quot;#ssh%E9%85%8D%E</summary>
      
    
    
    
    <category term="Linux" scheme="https://wangzhangyu.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>linux基本命令</title>
    <link href="https://wangzhangyu.github.io/2024/03/22/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <id>https://wangzhangyu.github.io/2024/03/22/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</id>
    <published>2024-03-22T15:45:39.000Z</published>
    <updated>2024-03-28T11:36:36.153Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul class="lvl-0"><li class="lvl-2"><a href="#%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3">系统相关</a></li><li class="lvl-2"><a href="#%E8%BF%9B%E7%A8%8B%E7%9B%B8%E5%85%B3">进程相关</a></li><li class="lvl-2"><a href="#%E7%BD%91%E7%BB%9C">网络</a></li><li class="lvl-2"><a href="#%E6%96%87%E4%BB%B6%E7%9B%B8%E5%85%B3">文件相关</a></li><li class="lvl-2"><a href="#%E4%BC%A0%E8%BE%93%E6%93%8D%E4%BD%9C">传输操作</a></li><li class="lvl-2"><a href="#%E6%9D%83%E9%99%90%E4%B8%8E%E6%89%A9%E5%B1%95%E5%B1%9E%E6%80%A7">权限与扩展属性</a></li><li class="lvl-2"><a href="#%E7%A3%81%E7%9B%98%E6%8C%82%E8%BD%BD%E5%92%8C%E7%A9%BA%E9%97%B4%E6%9F%A5%E7%9C%8B">磁盘挂载和空间查看</a></li><li class="lvl-2"><a href="#%E6%89%93%E5%8C%85%E4%B8%8E%E8%A7%A3%E5%8E%8B">打包与解压</a></li><li class="lvl-2"><a href="#%E4%B8%89%E5%89%91%E5%AE%A2">三剑客</a></li><li class="lvl-2"><a href="#%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1">启动服务</a></li><li class="lvl-2"><a href="#linux%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84">linux系统的文件结构</a></li><li class="lvl-2"><a href="#%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84%E6%96%87%E4%BB%B6%E4%BD%8D%E7%BD%AE">一些常见的文件位置</a></li></ul><!-- tocstop --><h1><span id="系统相关">系统相关</span></h1><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>lsb_release -a</code></td><td>查看Ubuntu版本</td></tr><tr><td><code>uname -a</code></td><td>查看操作系统详细信息</td></tr><tr><td><code>top</code> 或 <code>htop</code></td><td>查看CPU使用情况</td></tr><tr><td><code>nvidia-smi</code> 或 <code>nvtop</code></td><td>查看GPU使用情况</td></tr><tr><td><code>nvcc -V</code></td><td>查看CUDA版本</td></tr><tr><td><code>yum install xxx</code>(centos)或 <code>apt install xxx</code>(ubuntu)</td><td>安装软件</td></tr><tr><td><code>shutdown -h now</code> 或 <code>poweroff</code></td><td>关机</td></tr><tr><td><code>shutdown -r now</code> 或 <code>reboot</code></td><td>重启</td></tr><tr><td><code>whoami</code></td><td>显示当前用户名</td></tr><tr><td><code>which</code></td><td>在PATH变量指定的路径中搜索可执行文件的位置</td></tr><tr><td><code>whereis</code></td><td>在标准位置中搜索可执行文件、源码文件和帮助文件的位置</td></tr><tr><td><code>date</code></td><td>显示当前日期和时间</td></tr><tr><td><code>cal</code></td><td>显示当前月份的日历</td></tr><tr><td><code>uptime</code></td><td>显示系统的运行时间和平均负载</td></tr><tr><td><code>history</code></td><td>显示历史命令记录</td></tr><tr><td><code>man</code></td><td>显示命令的使用手册</td></tr><tr><td><code>info</code></td><td>显示命令的更详细的使用信息</td></tr><tr><td><code>ln</code></td><td>创建链接</td></tr><tr><td><code>find</code></td><td>在文件系统中搜索文件</td></tr><tr><td><code>locate</code></td><td>使用数据库快速搜索文件</td></tr><tr><td><code>ssh</code></td><td>远程登录另一台计算机</td></tr><tr><td><code>echo</code></td><td>输出文本内容</td></tr><tr><td><code>hostname</code></td><td>显示或设置系统主机名</td></tr><tr><td><code>w</code></td><td>显示当前登录用户信息</td></tr><tr><td><code>last</code></td><td>显示最近登录用户的信息</td></tr><tr><td><code>lastb</code></td><td>显示失败的登录尝试信息</td></tr><tr><td><code>s-tui</code></td><td>Linux下监控CPU温度、频率、功耗</td></tr><tr><td><code>man man</code></td><td>获取关于特定命令或主题的详细信息</td></tr></tbody></table><h1><span id="进程相关">进程相关</span></h1><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>ps -ef | grep xxxx</code></td><td>查看某个进程状态</td></tr><tr><td><code>kill -9 xxxx</code></td><td>杀掉进程</td></tr><tr><td><code>pkill -l</code></td><td>显示所有可用的信号列表</td></tr><tr><td><code>pkill -e &lt;进程名&gt;</code></td><td>精确匹配进程名称，只终止完全匹配的进程</td></tr><tr><td><code>pkill -f &lt;进程参数&gt;</code></td><td>匹配进程名及其参数，定位带有特定参数的进程</td></tr><tr><td><code>pkill -u &lt;用户ID&gt;</code></td><td>根据进程的有效用户ID（EUID）来定位和终止进程</td></tr><tr><td><code>pkill -g &lt;进程组ID&gt;</code></td><td>根据进程组ID来定位和终止进程</td></tr><tr><td><code>pkill -t &lt;终端ID&gt;</code></td><td>根据终端ID来定位和终止进程</td></tr><tr><td><code>pkill -c &lt;进程名&gt;</code></td><td>显示匹配到的进程数量，而不执行终止操作</td></tr><tr><td><code>pkill -x &lt;进程名&gt;</code></td><td>仅匹配完全相同的进程名，不会匹配到子进程</td></tr><tr><td><code>pkill -n &lt;进程名&gt;</code></td><td>终止最新的一个匹配进程</td></tr></tbody></table><h1><span id="网络">网络</span></h1><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>ping</code></td><td>测试与另一台计算机的连接情况</td></tr><tr><td><code>traceroute</code></td><td>显示到目标主机的路径</td></tr><tr><td><code>ifconfig</code></td><td>显示和配置网络接口信息</td></tr><tr><td><code>netstat</code></td><td>显示网络连接、路由表和网络接口状态</td></tr><tr><td><code>route</code></td><td>显示和配置路由表信息</td></tr><tr><td><code>iptables -S</code></td><td>显示当前的iptables规则</td></tr><tr><td><code>ufw</code></td><td>用于管理Uncomplicated Firewall (UFW)的命令</td></tr><tr><td><code>curl</code></td><td>用于向服务器发送HTTP请求并显示返回的数据</td></tr><tr><td><code>wget</code></td><td>用于从指定URL下载文件</td></tr><tr><td><code>telnet &lt;hostname or IP address&gt; &lt;port&gt;</code></td><td>在命令行中使用 Telnet 协议连接远程主机；测试IP端口</td></tr><tr><td><code>netcat</code></td><td>用于网络通信的工具，可以用作端口扫描、端口监听等功能</td></tr></tbody></table><details>  <summary><u>ufw</u></summary>  <table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>sudo ufw enable</code></td><td>启用防火墙</td></tr><tr><td><code>sudo ufw disable</code></td><td>禁用防火墙</td></tr><tr><td><code>sudo ufw allow &lt;port&gt;</code></td><td>开放指定端口（允许特定端口的传入连接）</td></tr><tr><td><code>sudo ufw deny &lt;port&gt;</code></td><td>关闭指定端口（禁止特定端口的传入连接）</td></tr><tr><td><code>sudo ufw allow from &lt;IP_address&gt;</code></td><td>允许特定IP地址的访问</td></tr><tr><td><code>sudo ufw deny from &lt;IP_address&gt;</code></td><td>拒绝特定IP地址的访问</td></tr><tr><td><code>sudo ufw allow ssh</code></td><td>允许SSH服务的访问</td></tr><tr><td><code>sudo ufw status</code></td><td>查看当前防火墙规则状态</td></tr></tbody></table></details><h1><span id="文件相关">文件相关</span></h1><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>touch file</code></td><td>创建名为file的空文件</td></tr><tr><td><code>cat file</code></td><td>显示文件的全部内容</td></tr><tr><td><code>tail file</code></td><td>显示文件的末尾几行</td></tr><tr><td><code>head file</code></td><td>显示文件的前几行</td></tr><tr><td><code>more file</code></td><td>逐页显示文件内容，空格键向下翻页</td></tr><tr><td><code>less file</code></td><td>逐页显示文件内容，可以上下翻页、搜索等交互式操作</td></tr></tbody></table><h1><span id="传输操作">传输操作</span></h1><table><thead><tr><th>传输操作</th><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>复制文件</td><td><code>cp</code></td><td>将文件或目录复制到另一个位置</td></tr><tr><td>移动文件</td><td><code>mv</code></td><td>将文件或目录从一个位置移动到另一个位置，也可用于重命名文件或目录</td></tr><tr><td>远程复制</td><td><code>scp</code></td><td>安全地将文件从本地系统复制到远程系统，或者从远程系统复制到本地系统</td></tr><tr><td>同步文件</td><td><code>rsync</code></td><td>在本地系统和远程系统之间同步文件和目录，可以进行增量复制并保持文件权限</td></tr></tbody></table><h1><span id="权限与扩展属性">权限与扩展属性</span></h1><table><thead><tr><th>权限操作</th><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>更改所有者</td><td><code>chown</code></td><td>将文件或目录的所有者更改为指定用户或用户组</td></tr><tr><td>更改组</td><td><code>chgrp</code></td><td>将文件或目录的所属组更改为指定的用户组</td></tr><tr><td>更改权限</td><td><code>chmod</code></td><td>更改文件或目录的权限，控制文件的读、写、执行权限以及特殊权限位的设置</td></tr><tr><td>修改扩展属性</td><td><code>chattr +iau</code></td><td>修改文件或目录的扩展属性，添加、删除或修改指定的扩展属性</td></tr><tr><td>显示扩展属性</td><td><code>lsattr</code></td><td>显示文件或目录的扩展属性</td></tr></tbody></table><h1><span id="磁盘挂载和空间查看">磁盘挂载和空间查看</span></h1><table><thead><tr><th>挂载操作</th><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>挂载文件系统</td><td><code>mount /dev/sdb1 /mnt</code></td><td>将文件系统挂载到指定的挂载点</td></tr><tr><td>卸载文件系统</td><td><code>umount /dev/sdb1</code> 或 <code>umount /mnt</code></td><td>卸载已经挂载的文件系统，通常用 <code>umount 挂载点</code> 命令，例如 <code>umount /mnt</code></td></tr><tr><td>查看磁盘空间</td><td><code>df -h</code></td><td>查看文件系统的磁盘空间使用情况</td></tr><tr><td>查看目录空间</td><td><code>du -h</code> 或 <code>du -h --max-depth=1</code></td><td>查看指定目录或文件的磁盘空间使用情况</td></tr><tr><td>查看内存使用</td><td><code>free -h</code></td><td>查看系统内存使用情况</td></tr><tr><td>查看磁盘分区</td><td><code>fdisk -l</code></td><td>查看系统的磁盘分区信息</td></tr></tbody></table><h1><span id="打包与解压">打包与解压</span></h1><table><thead><tr><th>操作</th><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>打包</td><td><code>tar -zcvf</code></td><td>使用gzip压缩将文件或目录打包为.tar.gz文件</td></tr><tr><td>解压</td><td><code>tar -zxvf</code></td><td>解压缩.tar.gz文件，同时调用gzip解压缩命令</td></tr><tr><td>解压</td><td><code>unzip</code></td><td>解压缩.zip文件</td></tr><tr><td>压缩</td><td><code>gzip</code></td><td>压缩和解压文件（使用gzip格式）</td></tr><tr><td>压缩</td><td><code>zip</code></td><td>压缩和解压文件（使用zip格式）</td></tr><tr><td>解压</td><td><code>unzip</code></td><td>解压zip格式的文件</td></tr></tbody></table><h1><span id="三剑客">三剑客</span></h1><table><thead><tr><th>工具名称</th><th>说明</th></tr></thead><tbody><tr><td><code>awk</code></td><td>用于文本处理和数据提取的强大工具</td></tr><tr><td><code>grep</code></td><td>用于搜索文本中的指定模式，并输出匹配行</td></tr><tr><td><code>sed</code></td><td>用于对文本进行流式文本编辑和转换的工具</td></tr></tbody></table><h1><span id="启动服务">启动服务</span></h1><table><thead><tr><th>启动服务操作</th><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>systemd</td><td><code>systemctl start</code></td><td>启动指定服务，例如 <code>systemctl start service_name</code></td></tr><tr><td>service</td><td><code>service</code></td><td>启动指定服务，例如 <code>service service_name start</code></td></tr></tbody></table><h1><span id="linux系统的文件结构">linux系统的文件结构</span></h1><table><thead><tr><th>Linux根目录下各目录</th><th>说明</th></tr></thead><tbody><tr><td>/bin</td><td>二进制文件，系统常规命令</td></tr><tr><td>/boot</td><td>系统启动分区，系统启动时读取的文件</td></tr><tr><td>/dev</td><td>设备文件</td></tr><tr><td>/etc</td><td>大多数配置文件</td></tr><tr><td>/home</td><td>普通用户的家目录</td></tr><tr><td>/lib</td><td>32位函数库</td></tr><tr><td>/lib64</td><td>64位库</td></tr><tr><td>/media</td><td>手动临时挂载点</td></tr><tr><td>/mnt</td><td>手动临时挂载点</td></tr><tr><td>/opt</td><td>第三方软件安装位置</td></tr><tr><td>/proc</td><td>进程信息及硬件信息</td></tr><tr><td>/root</td><td>临时设备的默认挂载点</td></tr><tr><td>/run</td><td>系统运行时数据</td></tr><tr><td>/sbin</td><td>系统管理命令</td></tr><tr><td>/srv</td><td>数据</td></tr><tr><td>/var</td><td>可变数据（例如日志、邮件等）</td></tr><tr><td>/sys</td><td>内核相关信息</td></tr><tr><td>/tmp</td><td>临时文件</td></tr><tr><td>/usr</td><td>用户相关设定</td></tr></tbody></table><h1><span id="一些常见的文件位置">一些常见的文件位置</span></h1><table><thead><tr><th>文件/目录</th><th>位置</th></tr></thead><tbody><tr><td>/etc/passwd</td><td>包含系统上所有用户的基本信息</td></tr><tr><td>/etc/shadow</td><td>包含系统上所有用户的加密密码</td></tr><tr><td>/etc/group</td><td>包含系统上所有用户组的信息</td></tr><tr><td>/etc/hostname</td><td>包含主机名</td></tr><tr><td>/etc/hosts</td><td>包含IP地址和主机名的映射</td></tr><tr><td>/etc/resolv.conf</td><td>包含DNS解析器的配置信息</td></tr><tr><td>/etc/fstab</td><td>包含文件系统挂载信息</td></tr><tr><td>/etc/ssh/sshd_config</td><td>SSH服务器的配置文件</td></tr><tr><td>/etc/profile</td><td>用户的全局Shell配置文件</td></tr><tr><td>/var/log</td><td>包含系统日志文件的目录</td></tr><tr><td>/var/spool/mail</td><td>包含用户邮件的目录</td></tr><tr><td>/var/run</td><td>包含系统运行时的临时文件</td></tr><tr><td>/var/www/html</td><td>Web服务器的根目录（通常是Apache或Nginx）</td></tr><tr><td>/usr/bin</td><td>包含大多数用户可执行文件的目录</td></tr><tr><td>/usr/sbin</td><td>包含系统管理员可执行文件的目录</td></tr><tr><td>/usr/lib</td><td>包含大多数系统库的目录</td></tr><tr><td>/usr/local/bin</td><td>包含用户安装的软件可执行文件的目录</td></tr><tr><td>/usr/local/lib</td><td>包含用户安装的软件库的目录</td></tr></tbody></table><p>参考：</p><blockquote><p><a href="https://blog.csdn.net/m0_46422300/article/details/104645072">https://blog.csdn.net/m0_46422300/article/details/104645072</a><br><a href="https://www.ruanyifeng.com/blog/developer/">https://www.ruanyifeng.com/blog/developer/</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;&lt;a href=&quot;#%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3&quot;&gt;系统相关&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="Linux" scheme="https://wangzhangyu.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://wangzhangyu.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>可执行文件报错：“No such file or directory”</title>
    <link href="https://wangzhangyu.github.io/2024/03/20/%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8/"/>
    <id>https://wangzhangyu.github.io/2024/03/20/%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8/</id>
    <published>2024-03-20T11:24:41.000Z</published>
    <updated>2024-03-20T11:36:56.093Z</updated>
    
    <content type="html"><![CDATA[<p>问题描述：linux系统被入侵后，之前的一个可执行文件，现在无法运行了。很奇怪输入命令报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No such file or directory</span><br></pre></td></tr></table></figure><p>重装一些依赖文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install lsb-core</span><br></pre></td></tr></table></figure><p>安装后恢复正常</p><p>参考： <a href="https://www.jianshu.com/p/61f4d7385762">https://www.jianshu.com/p/61f4d7385762</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;问题描述：linux系统被入侵后，之前的一个可执行文件，现在无法运行了。很奇怪输入命令报错&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;lin</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>nfs</title>
    <link href="https://wangzhangyu.github.io/2024/03/18/nfs/"/>
    <id>https://wangzhangyu.github.io/2024/03/18/nfs/</id>
    <published>2024-03-18T05:38:04.000Z</published>
    <updated>2024-03-18T05:40:51.017Z</updated>
    
    <content type="html"><![CDATA[<p>NFS服务器的启动与停止</p><p>启动NFS服务器</p><p>需要启动portmap和nfs两个服务，并且portmap一定要先于nfs启动;</p><p>$service portmap start 或者 $/etc/init.d/portmap start<br>$service nfs start 或者 $/etc/init.d/nfs start</p><p>如果需要重新启动NFS服务，执行命令：<br>$service nfs restart<br>查看NFS服务当前的状态，执行命令:<br>$service nfs status</p><p>NFS的资源共享配置/etc/exports文件</p><p>参考：<a href="https://blog.csdn.net/weixin_42400980/article/details/80596204">https://blog.csdn.net/weixin_42400980/article/details/80596204</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;NFS服务器的启动与停止&lt;/p&gt;
&lt;p&gt;启动NFS服务器&lt;/p&gt;
&lt;p&gt;需要启动portmap和nfs两个服务，并且portmap一定要先于nfs启动;&lt;/p&gt;
&lt;p&gt;$service portmap start 或者 $/etc/init.d/portmap start&lt;</summary>
      
    
    
    
    <category term="Linux" scheme="https://wangzhangyu.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>谷歌两步验证</title>
    <link href="https://wangzhangyu.github.io/2024/03/15/%E8%B0%B7%E6%AD%8C%E4%B8%A4%E6%AD%A5%E9%AA%8C%E8%AF%81/"/>
    <id>https://wangzhangyu.github.io/2024/03/15/%E8%B0%B7%E6%AD%8C%E4%B8%A4%E6%AD%A5%E9%AA%8C%E8%AF%81/</id>
    <published>2024-03-15T13:57:15.000Z</published>
    <updated>2024-03-15T14:10:13.050Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="谷歌二次登录验证-安全防护">谷歌二次登录验证 – 安全防护</span></h1><p>Ubuntu<br>安装google-authenticator<br><code>sudo apt install libpam-google-authenticator</code><br>修改配置文件<code>echo &quot;auth required pam_google_authenticator.so&quot; &gt;&gt; /etc/pam.d/sshd</code><br><code>sed -i 's/^ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config</code><br>重启sshd，完成配置<code>systemctl restart sshd</code><br>对个人用户，进入主目录下执行<code> google-authenticator</code>,生成验证二维码</p><p>下载谷歌authrnticator绑定二维码</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;谷歌二次登录验证-安全防护&quot;&gt;谷歌二次登录验证 – 安全防护&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;Ubuntu&lt;br&gt;
安装google-authenticator&lt;br&gt;
&lt;code&gt;sudo apt install libpam-google-authe</summary>
      
    
    
    
    <category term="Linux" scheme="https://wangzhangyu.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>linux病毒检查</title>
    <link href="https://wangzhangyu.github.io/2024/03/15/linux%E7%97%85%E6%AF%92%E6%A3%80%E6%9F%A5/"/>
    <id>https://wangzhangyu.github.io/2024/03/15/linux%E7%97%85%E6%AF%92%E6%A3%80%E6%9F%A5/</id>
    <published>2024-03-15T02:55:35.000Z</published>
    <updated>2024-03-15T03:13:35.283Z</updated>
    
    <content type="html"><![CDATA[<ol><li class="lvl-3"><p>chkrootkit 轻量级软件特点：检测系统命令是否正常这是一个轻量级程序，这意味着它不会影响系统性能。它还可以检测各种其他恶意软件和木马，如后门、TinyNDS 等。</p></li></ol><ul class="lvl-0"><li class="lvl-2">安装 <code>sudo apt install chkrootkit</code></li><li class="lvl-2">使用 <code>sudo chkrootkit</code><ul class="lvl-2"><li class="lvl-4">not infected 表示未感染</li><li class="lvl-4">infected 为感染</li></ul></li></ul><ol start="2"><li class="lvl-3">clamav<br>简介：ClamAV 是一款开源防病毒软件，可检测病毒、恶意软件、特洛伊木马和其他威胁，它也免费提供，这使其成为 Linux 上最好的防病毒软件之一。特点：ClamAV 具有命令行扫描程序，这意味着它可以扫描主要文件类型中的蠕虫、病毒和特洛伊木马。为确保安全并保持最新状态，病毒库一天会更新多次。它具有对不同存档格式的内置支持，包括 Zip、OLE2、SIS、Dmg、RAR、BinHex、Gzip、Tar、Bzip2、、Cabinet、CHM 等</li></ol><ul class="lvl-0"><li class="lvl-2"><p>安装 <code>sudo apt-get install clamav</code></p></li><li class="lvl-2"><p>使用</p><ul class="lvl-2"><li class="lvl-4">更新病毒库<code>freshclam </code></li><li class="lvl-4">启动服务 <code>sudo systemctl start clamd@scan </code><br><code>sudo systemctl enable clamd@scan</code></li></ul></li></ul><p>参考：<br><a href="https://zhuanlan.zhihu.com/p/586992717">https://zhuanlan.zhihu.com/p/586992717</a><br><a href="https://zhuanlan.zhihu.com/p/514221945">https://zhuanlan.zhihu.com/p/514221945</a><br><a href="https://zhuanlan.zhihu.com/p/266731354">https://zhuanlan.zhihu.com/p/266731354</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li class=&quot;lvl-3&quot;&gt;
&lt;p&gt;chkrootkit 轻量级软件特点：检测系统命令是否正常这是一个轻量级程序，这意味着它不会影响系统性能。它还可以检测各种其他恶意软件和木马，如后门、TinyNDS 等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;</summary>
      
    
    
    
    <category term="Linux" scheme="https://wangzhangyu.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>/etc/passwd文件误删除</title>
    <link href="https://wangzhangyu.github.io/2024/03/14/passwd%E8%AF%AF%E5%88%A0%E9%99%A4/"/>
    <id>https://wangzhangyu.github.io/2024/03/14/passwd%E8%AF%AF%E5%88%A0%E9%99%A4/</id>
    <published>2024-03-14T10:30:45.000Z</published>
    <updated>2024-03-15T03:12:29.358Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="etcpasswd文件误删除">/etc/passwd文件误删除</span></h1><p>不要关机重启，有备份文件。 /etc/passwd-<br>参考备份文件恢复</p><p>参考网址：<br><a href="https://blog.csdn.net/zheng_weichao/article/details/109264080">https://blog.csdn.net/zheng_weichao/article/details/109264080</a><br><a href="https://www.linuxprobe.com/explain-etc-passwd.html">https://www.linuxprobe.com/explain-etc-passwd.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;etcpasswd文件误删除&quot;&gt;/etc/passwd文件误删除&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;不要关机重启，有备份文件。 /etc/passwd-&lt;br&gt;
参考备份文件恢复&lt;/p&gt;
&lt;p&gt;参考网址：&lt;br&gt;
&lt;a href=&quot;https://blog</summary>
      
    
    
    
    <category term="Linux" scheme="https://wangzhangyu.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>服务器被入侵</title>
    <link href="https://wangzhangyu.github.io/2024/03/14/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://wangzhangyu.github.io/2024/03/14/%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2024-03-14T04:58:31.000Z</published>
    <updated>2024-03-15T03:12:22.735Z</updated>
    
    <content type="html"><![CDATA[<p>服务器被入侵的几种端倪</p><ol><li class="lvl-3"><p>登录日志被篡改或删除使用lastb，last查看日志，发现日志是空的</p></li><li class="lvl-3"><p>lsattr，chattr命令失效，一般是被黑客篡改，移动并重命名。<br>root下的免密配置无法删除解决方法，下载原始的.c文件，重新编译执行</p></li></ol><p>下载chattr.c文件，<a href="https://github.com/posborne/linux-programming-interface-exercises/blob/master/15-file-attributes/chattr.c">https://github.com/posborne/linux-programming-interface-exercises/blob/master/15-file-attributes/chattr.c</a><br>编译chattr.c    <code>cc chattr.c</code> 生成a.out文件重命名文件参考： <a href="https://blog.csdn.net/JunyouYH/article/details/117064066">https://blog.csdn.net/JunyouYH/article/details/117064066</a></p><ol start="3"><li class="lvl-3"><p>top，nvidia-smi查看，CPU或者GPU被不明程序长时间占用基本上是被挖矿了，可以查看定时任务看看有没有异常，crontab -l</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;服务器被入侵的几种端倪&lt;/p&gt;
&lt;ol&gt;
&lt;li class=&quot;lvl-3&quot;&gt;
&lt;p&gt;登录日志被篡改或删除使用lastb，last查看日志，发现日志是空的&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-3&quot;&gt;
&lt;p&gt;lsattr，chattr命令失效，一般是被黑客篡改，</summary>
      
    
    
    
    <category term="Linux" scheme="https://wangzhangyu.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Tensorboard</title>
    <link href="https://wangzhangyu.github.io/2023/08/01/tensorboard/"/>
    <id>https://wangzhangyu.github.io/2023/08/01/tensorboard/</id>
    <published>2023-08-01T08:08:12.000Z</published>
    <updated>2023-08-01T08:10:43.749Z</updated>
    
    <content type="html"><![CDATA[<p>ref: <a href="https://zhuanlan.zhihu.com/p/471198169">https://zhuanlan.zhihu.com/p/471198169</a></p><h2><span id="功能">功能</span></h2><p>TensorBoard 是一组用于数据可视化的工具。它包含在流行的开源机器学习库 Tensorflow 中。TensorBoard 的主要功能包括：</p><ul class="lvl-0"><li class="lvl-2">可视化模型的网络架构</li><li class="lvl-2">跟踪模型指标，如损失和准确性等</li><li class="lvl-2">检查机器学习工作流程中权重、偏差和其他组件的直方图</li><li class="lvl-2">显示非表格数据，包括图像、文本和音频</li><li class="lvl-2">将高维嵌入投影到低维空间</li></ul><h2><span id="安装">安装</span></h2><p>使用conda进行Python包管理。安装指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install tensorboard</span><br></pre></td></tr></table></figure><p>对于pytorch用户来说，还需安装TensorBoardX</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install tensorboardx</span><br></pre></td></tr></table></figure><p>需要注意的是，TensorBoardX只是TensorBoard的一个前端，只支持记录功能，要进行可视化必须安装TensorBoard。</p><h2><span id="本地使用">本地使用</span></h2><ul class="lvl-0"><li class="lvl-2"><p>要启动 TensorBoard，打开终端或命令提示符并运行：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tensorboard --logdir=&lt;directory_name&gt;</span><br></pre></td></tr></table></figure><p>将 directory_name 标记替换为保存数据的目录。 默认是“logs”。</p><ul class="lvl-0"><li class="lvl-2"><p>在 Jupyter Notebooks 中使用 TensorBoard</p></li></ul><blockquote><p>如果想在 Jupyter Notebooks 中使用 TensorBoard，可以使用以下命令：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%load_ext tensorboard</span><br></pre></td></tr></table></figure><blockquote><p>运行这行代码将加载 TensorBoard并允许我们将其用于可视化。 加载扩展后，我们现在可以启动 TensorBoard：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%tensorboard --logdir logs</span><br></pre></td></tr></table></figure><h2><span id="远程使用">远程使用</span></h2><blockquote><p>使用远程服务器，没有浏览器也没有可视化桌面，那怎么才能使用TensorBoard呢？</p></blockquote><p>我们可以通过SSH端口转发，将远程端口映射到本地端口，命令如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -L 16007:127.0.0.1:6007 username@serverip</span><br></pre></td></tr></table></figure><p>其中，<code>16007</code>是本地想用的端口，<code>6007</code>是远程端口（<code>TensorBoard</code>所用端口），username和serverip为用户名和服务器ip地址。远程服务器中找到tensorboard所在目录并运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tensorboard --logdir ./tensorboard --port 6007</span><br></pre></td></tr></table></figure><p>然后，打开本地浏览器，输入<code>http://127.0.0.1:16007/</code>就可以成功访问了。</p><ul class="lvl-0"><li class="lvl-2"><p>另一种方法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tensorboard --logdir logs --bind_all</span><br></pre></td></tr></table></figure><p>–bind_all的作用是to expose to the network</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ref: &lt;a href=&quot;https://zhuanlan.zhihu.com/p/471198169&quot;&gt;https://zhuanlan.zhihu.com/p/471198169&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;功能&quot;&gt;功能&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="python" scheme="https://wangzhangyu.github.io/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>数据下载</title>
    <link href="https://wangzhangyu.github.io/2023/08/01/download-web/"/>
    <id>https://wangzhangyu.github.io/2023/08/01/download-web/</id>
    <published>2023-08-01T08:03:15.000Z</published>
    <updated>2023-08-03T03:04:55.958Z</updated>
    
    <content type="html"><![CDATA[<ul class="lvl-0"><li class="lvl-2"><p>ustc 地震学算法与程序<br><a href="https://seismo.training.ustc.edu.cn/programme/list.htm">https://seismo.training.ustc.edu.cn/programme/list.htm</a></p></li><li class="lvl-2"><p>Ubuntu系统<br>Ubuntu下载链接：<a href="http://releases.ubuntu.com/">http://releases.ubuntu.com/</a><br>旧版下载链接：<a href="http://old-releases.ubuntu.com/releases/">http://old-releases.ubuntu.com/releases/</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;ustc 地震学算法与程序&lt;br&gt;
&lt;a href=&quot;https://seismo.training.ustc.edu.cn/programme/list.htm&quot;&gt;https://seismo.t</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hexon -- 管理hexo的GUI工具</title>
    <link href="https://wangzhangyu.github.io/2023/07/30/test/"/>
    <id>https://wangzhangyu.github.io/2023/07/30/test/</id>
    <published>2023-07-30T07:51:03.505Z</published>
    <updated>2023-08-01T07:33:23.522Z</updated>
    
    <content type="html"><![CDATA[<p>Hexon is a GUI for hexo with git, run commands and manage content for you.</p><p>下载链接：<a href="https://github.com/gethexon/hexon">https://github.com/gethexon/hexon</a></p><ul class="lvl-0"><li class="lvl-2"><p>界面清爽</p></li><li class="lvl-2"><p>可移植</p></li><li class="lvl-2"><p>部署迅速<br><img src="./iShot_2023-07-30_15.57.26.png" alt></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexon is a GUI for hexo with git, run commands and manage content for you.&lt;/p&gt;
&lt;p&gt;下载链接：&lt;a href=&quot;https://github.com/gethexon/hexon&quot;&gt;https:</summary>
      
    
    
    
    <category term="博客搭建" scheme="https://wangzhangyu.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="blog" scheme="https://wangzhangyu.github.io/tags/blog/"/>
    
  </entry>
  
</feed>
